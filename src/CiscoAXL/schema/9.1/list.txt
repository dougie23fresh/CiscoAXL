
Prefixes:
     xsd: http://www.w3.org/2001/XMLSchema
     ns0: http://www.cisco.com/AXL/API/9.1

Global elements:
     ns0:addAarGroup(ns0:AddAarGroupReq)
     ns0:addAarGroupResponse(ns0:StandardResponse)
     ns0:addAnnouncement(ns0:AddAnnouncementReq)
     ns0:addAnnouncementResponse(ns0:StandardResponse)
     ns0:addAppServerInfo(ns0:AddAppServerInfoReq)
     ns0:addAppServerInfoResponse(ns0:StandardResponse)
     ns0:addAppUser(ns0:AddAppUserReq)
     ns0:addAppUserResponse(ns0:StandardResponse)
     ns0:addApplicationDialRules(ns0:AddApplicationDialRulesReq)
     ns0:addApplicationDialRulesResponse(ns0:StandardResponse)
     ns0:addApplicationServer(ns0:AddApplicationServerReq)
     ns0:addApplicationServerResponse(ns0:StandardResponse)
     ns0:addApplicationToSoftkeyTemplate(ns0:AddApplicationToSoftkeyTemplateReq)
     ns0:addApplicationToSoftkeyTemplateResponse(ns0:StandardResponse)
     ns0:addApplicationUserCapfProfile(ns0:AddApplicationUserCapfProfileReq)
     ns0:addApplicationUserCapfProfileResponse(ns0:StandardResponse)
     ns0:addAudioCodecPreferenceList(ns0:AddAudioCodecPreferenceListReq)
     ns0:addAudioCodecPreferenceListResponse(ns0:StandardResponse)
     ns0:addBillingServer(ns0:AddBillingServerReq)
     ns0:addBillingServerResponse(ns0:StandardResponse)
     ns0:addCallManagerGroup(ns0:AddCallManagerGroupReq)
     ns0:addCallManagerGroupResponse(ns0:StandardResponse)
     ns0:addCallPark(ns0:AddCallParkReq)
     ns0:addCallParkResponse(ns0:StandardResponse)
     ns0:addCallPickupGroup(ns0:AddCallPickupGroupReq)
     ns0:addCallPickupGroupResponse(ns0:StandardResponse)
     ns0:addCalledPartyTracing(ns0:AddCalledPartyTracingReq)
     ns0:addCalledPartyTracingResponse(ns0:StandardResponse)
     ns0:addCalledPartyTransformationPattern(ns0:AddCalledPartyTransformationPatternReq)
     ns0:addCalledPartyTransformationPatternResponse(ns0:StandardResponse)
     ns0:addCallerFilterList(ns0:AddCallerFilterListReq)
     ns0:addCallerFilterListResponse(ns0:StandardResponse)
     ns0:addCallingPartyTransformationPattern(ns0:AddCallingPartyTransformationPatternReq)
     ns0:addCallingPartyTransformationPatternResponse(ns0:StandardResponse)
     ns0:addCcdAdvertisingService(ns0:AddCcdAdvertisingServiceReq)
     ns0:addCcdAdvertisingServiceResponse(ns0:StandardResponse)
     ns0:addCcdHostedDN(ns0:AddCcdHostedDNReq)
     ns0:addCcdHostedDNGroup(ns0:AddCcdHostedDNGroupReq)
     ns0:addCcdHostedDNGroupResponse(ns0:StandardResponse)
     ns0:addCcdHostedDNResponse(ns0:StandardResponse)
     ns0:addCcdRequestingService(ns0:AddCcdRequestingServiceReq)
     ns0:addCcdRequestingServiceResponse(ns0:StandardResponse)
     ns0:addCiscoCatalyst600024PortFXSGateway(ns0:AddCiscoCatalyst600024PortFXSGatewayReq)
     ns0:addCiscoCatalyst600024PortFXSGatewayResponse(ns0:StandardResponse)
     ns0:addCiscoCatalyst6000E1VoIPGateway(ns0:AddCiscoCatalyst6000E1VoIPGatewayReq)
     ns0:addCiscoCatalyst6000E1VoIPGatewayResponse(ns0:StandardResponse)
     ns0:addCiscoCatalyst6000T1VoIPGatewayPri(ns0:AddCiscoCatalyst6000T1VoIPGatewayPriReq)
     ns0:addCiscoCatalyst6000T1VoIPGatewayPriResponse(ns0:StandardResponse)
     ns0:addCiscoCatalyst6000T1VoIPGatewayT1(ns0:AddCiscoCatalyst6000T1VoIPGatewayT1Req)
     ns0:addCiscoCatalyst6000T1VoIPGatewayT1Response(ns0:StandardResponse)
     ns0:addCmcInfo(ns0:AddCmcInfoReq)
     ns0:addCmcInfoResponse(ns0:StandardResponse)
     ns0:addCommonDeviceConfig(ns0:AddCommonDeviceConfigReq)
     ns0:addCommonDeviceConfigResponse(ns0:StandardResponse)
     ns0:addCommonPhoneConfig(ns0:AddCommonPhoneConfigReq)
     ns0:addCommonPhoneConfigResponse(ns0:StandardResponse)
     ns0:addConferenceBridge(ns0:AddConferenceBridgeReq)
     ns0:addConferenceBridgeResponse(ns0:StandardResponse)
     ns0:addCredentialPolicy(ns0:AddCredentialPolicyReq)
     ns0:addCredentialPolicyResponse(ns0:StandardResponse)
     ns0:addCss(ns0:AddCssReq)
     ns0:addCssResponse(ns0:StandardResponse)
     ns0:addCtiRoutePoint(ns0:AddCtiRoutePointReq)
     ns0:addCtiRoutePointResponse(ns0:StandardResponse)
     ns0:addCumaServerSecurityProfile(ns0:AddCumaServerSecurityProfileReq)
     ns0:addCumaServerSecurityProfileResponse(ns0:StandardResponse)
     ns0:addCustomUserField(ns0:AddCustomUserFieldReq)
     ns0:addCustomUserFieldResponse(ns0:StandardResponse)
     ns0:addDateTimeGroup(ns0:AddDateTimeGroupReq)
     ns0:addDateTimeGroupResponse(ns0:StandardResponse)
     ns0:addDefaultDeviceProfile(ns0:AddDefaultDeviceProfileReq)
     ns0:addDefaultDeviceProfileResponse(ns0:StandardResponse)
     ns0:addDeviceMobility(ns0:AddDeviceMobilityReq)
     ns0:addDeviceMobilityGroup(ns0:AddDeviceMobilityGroupReq)
     ns0:addDeviceMobilityGroupResponse(ns0:StandardResponse)
     ns0:addDeviceMobilityResponse(ns0:StandardResponse)
     ns0:addDevicePool(ns0:AddDevicePoolReq)
     ns0:addDevicePoolResponse(ns0:StandardResponse)
     ns0:addDeviceProfile(ns0:AddDeviceProfileReq)
     ns0:addDeviceProfileResponse(ns0:StandardResponse)
     ns0:addDhcpServer(ns0:AddDhcpServerReq)
     ns0:addDhcpServerResponse(ns0:StandardResponse)
     ns0:addDhcpSubnet(ns0:AddDhcpSubnetReq)
     ns0:addDhcpSubnetResponse(ns0:StandardResponse)
     ns0:addDirectedCallPark(ns0:AddDirectedCallParkReq)
     ns0:addDirectedCallParkResponse(ns0:StandardResponse)
     ns0:addDirectoryLookupDialRules(ns0:AddDirectoryLookupDialRulesReq)
     ns0:addDirectoryLookupDialRulesResponse(ns0:StandardResponse)
     ns0:addEndUserCapfProfile(ns0:AddEndUserCapfProfileReq)
     ns0:addEndUserCapfProfileResponse(ns0:StandardResponse)
     ns0:addEnterpriseFeatureAccessConfiguration(ns0:AddEnterpriseFeatureAccessConfigurationReq)
     ns0:addEnterpriseFeatureAccessConfigurationResponse(ns0:StandardResponse)
     ns0:addExternalCallControlProfile(ns0:AddExternalCallControlProfileReq)
     ns0:addExternalCallControlProfileResponse(ns0:StandardResponse)
     ns0:addFacInfo(ns0:AddFacInfoReq)
     ns0:addFacInfoResponse(ns0:StandardResponse)
     ns0:addFallbackProfile(ns0:AddFallbackProfileReq)
     ns0:addFallbackProfileResponse(ns0:StandardResponse)
     ns0:addFeatureControlPolicy(ns0:AddFeatureControlPolicyReq)
     ns0:addFeatureControlPolicyResponse(ns0:StandardResponse)
     ns0:addGatekeeper(ns0:AddGatekeeperReq)
     ns0:addGatekeeperResponse(ns0:StandardResponse)
     ns0:addGateway(ns0:AddGatewayReq)
     ns0:addGatewayEndpointAnalogAccess(ns0:AddGatewayEndpointAnalogAccessReq)
     ns0:addGatewayEndpointAnalogAccessResponse(ns0:StandardResponse)
     ns0:addGatewayEndpointDigitalAccessBri(ns0:AddGatewayEndpointDigitalAccessBriReq)
     ns0:addGatewayEndpointDigitalAccessBriResponse(ns0:StandardResponse)
     ns0:addGatewayEndpointDigitalAccessPri(ns0:AddGatewayEndpointDigitalAccessPriReq)
     ns0:addGatewayEndpointDigitalAccessPriResponse(ns0:StandardResponse)
     ns0:addGatewayEndpointDigitalAccessT1(ns0:AddGatewayEndpointDigitalAccessT1Req)
     ns0:addGatewayEndpointDigitalAccessT1Response(ns0:StandardResponse)
     ns0:addGatewayResponse(ns0:StandardResponse)
     ns0:addGatewaySccpEndpoints(ns0:AddGatewaySccpEndpointsReq)
     ns0:addGatewaySccpEndpointsResponse(ns0:StandardResponse)
     ns0:addGatewaySubunits(ns0:AddGatewaySubunitsReq)
     ns0:addGatewaySubunitsResponse(ns0:StandardResponse)
     ns0:addGeoLocation(ns0:AddGeoLocationReq)
     ns0:addGeoLocationFilter(ns0:AddGeoLocationFilterReq)
     ns0:addGeoLocationFilterResponse(ns0:StandardResponse)
     ns0:addGeoLocationPolicy(ns0:AddGeoLocationPolicyReq)
     ns0:addGeoLocationPolicyResponse(ns0:StandardResponse)
     ns0:addGeoLocationResponse(ns0:StandardResponse)
     ns0:addH323Gateway(ns0:AddH323GatewayReq)
     ns0:addH323GatewayResponse(ns0:StandardResponse)
     ns0:addH323Phone(ns0:AddH323PhoneReq)
     ns0:addH323PhoneResponse(ns0:StandardResponse)
     ns0:addH323Trunk(ns0:AddH323TrunkReq)
     ns0:addH323TrunkResponse(ns0:StandardResponse)
     ns0:addHandoffConfiguration(ns0:AddHandoffConfigurationReq)
     ns0:addHandoffConfigurationResponse(ns0:StandardResponse)
     ns0:addHuntList(ns0:AddHuntListReq)
     ns0:addHuntListResponse(ns0:StandardResponse)
     ns0:addHuntPilot(ns0:AddHuntPilotReq)
     ns0:addHuntPilotResponse(ns0:StandardResponse)
     ns0:addImeClient(ns0:AddImeClientReq)
     ns0:addImeClientResponse(ns0:StandardResponse)
     ns0:addImeE164Transformation(ns0:AddImeE164TransformationReq)
     ns0:addImeE164TransformationResponse(ns0:StandardResponse)
     ns0:addImeEnrolledPattern(ns0:AddImeEnrolledPatternReq)
     ns0:addImeEnrolledPatternGroup(ns0:AddImeEnrolledPatternGroupReq)
     ns0:addImeEnrolledPatternGroupResponse(ns0:StandardResponse)
     ns0:addImeEnrolledPatternResponse(ns0:StandardResponse)
     ns0:addImeExclusionNumber(ns0:AddImeExclusionNumberReq)
     ns0:addImeExclusionNumberGroup(ns0:AddImeExclusionNumberGroupReq)
     ns0:addImeExclusionNumberGroupResponse(ns0:StandardResponse)
     ns0:addImeExclusionNumberResponse(ns0:StandardResponse)
     ns0:addImeFirewall(ns0:AddImeFirewallReq)
     ns0:addImeFirewallResponse(ns0:StandardResponse)
     ns0:addImeRouteFilterElement(ns0:AddImeRouteFilterElementReq)
     ns0:addImeRouteFilterElementResponse(ns0:StandardResponse)
     ns0:addImeRouteFilterGroup(ns0:AddImeRouteFilterGroupReq)
     ns0:addImeRouteFilterGroupResponse(ns0:StandardResponse)
     ns0:addImeServer(ns0:AddImeServerReq)
     ns0:addImeServerResponse(ns0:StandardResponse)
     ns0:addImportedDirectoryUriCatalogs(ns0:AddImportedDirectoryUriCatalogsReq)
     ns0:addImportedDirectoryUriCatalogsResponse(ns0:StandardResponse)
     ns0:addIpPhoneServices(ns0:AddIpPhoneServicesReq)
     ns0:addIpPhoneServicesResponse(ns0:StandardResponse)
     ns0:addIvrUserLocale(ns0:AddIvrUserLocaleReq)
     ns0:addIvrUserLocaleResponse(ns0:StandardResponse)
     ns0:addLbmGroup(ns0:AddLbmGroupReq)
     ns0:addLbmGroupResponse(ns0:StandardResponse)
     ns0:addLbmHubGroup(ns0:AddLbmHubGroupReq)
     ns0:addLbmHubGroupResponse(ns0:StandardResponse)
     ns0:addLdapDirectory(ns0:AddLdapDirectoryReq)
     ns0:addLdapDirectoryResponse(ns0:StandardResponse)
     ns0:addLdapFilter(ns0:AddLdapFilterReq)
     ns0:addLdapFilterResponse(ns0:StandardResponse)
     ns0:addLdapSyncCustomField(ns0:AddLdapSyncCustomFieldReq)
     ns0:addLdapSyncCustomFieldResponse(ns0:StandardResponse)
     ns0:addLine(ns0:AddLineReq)
     ns0:addLineGroup(ns0:AddLineGroupReq)
     ns0:addLineGroupResponse(ns0:StandardResponse)
     ns0:addLineResponse(ns0:StandardResponse)
     ns0:addLocation(ns0:AddLocationReq)
     ns0:addLocationResponse(ns0:StandardResponse)
     ns0:addMediaResourceGroup(ns0:AddMediaResourceGroupReq)
     ns0:addMediaResourceGroupResponse(ns0:StandardResponse)
     ns0:addMediaResourceList(ns0:AddMediaResourceListReq)
     ns0:addMediaResourceListResponse(ns0:StandardResponse)
     ns0:addMeetMe(ns0:AddMeetMeReq)
     ns0:addMeetMeResponse(ns0:StandardResponse)
     ns0:addMessageWaiting(ns0:AddMessageWaitingReq)
     ns0:addMessageWaitingResponse(ns0:StandardResponse)
     ns0:addMlppDomain(ns0:AddMlppDomainReq)
     ns0:addMlppDomainResponse(ns0:StandardResponse)
     ns0:addMobileVoiceAccess(ns0:AddMobileVoiceAccessReq)
     ns0:addMobileVoiceAccessResponse(ns0:StandardResponse)
     ns0:addMobility(ns0:AddMobilityReq)
     ns0:addMobilityProfile(ns0:AddMobilityProfileReq)
     ns0:addMobilityProfileResponse(ns0:StandardResponse)
     ns0:addMobilityResponse(ns0:StandardResponse)
     ns0:addMtp(ns0:AddMtpReq)
     ns0:addMtpResponse(ns0:StandardResponse)
     ns0:addPhone(ns0:AddPhoneReq)
     ns0:addPhoneButtonTemplate(ns0:AddPhoneButtonTemplateReq)
     ns0:addPhoneButtonTemplateResponse(ns0:StandardResponse)
     ns0:addPhoneNtp(ns0:AddPhoneNtpReq)
     ns0:addPhoneNtpResponse(ns0:StandardResponse)
     ns0:addPhoneResponse(ns0:StandardResponse)
     ns0:addPhoneSecurityProfile(ns0:AddPhoneSecurityProfileReq)
     ns0:addPhoneSecurityProfileResponse(ns0:StandardResponse)
     ns0:addPhysicalLocation(ns0:AddPhysicalLocationReq)
     ns0:addPhysicalLocationResponse(ns0:StandardResponse)
     ns0:addPresenceGroup(ns0:AddPresenceGroupReq)
     ns0:addPresenceGroupResponse(ns0:StandardResponse)
     ns0:addProcessNode(ns0:AddProcessNodeReq)
     ns0:addProcessNodeResponse(ns0:StandardResponse)
     ns0:addRecordingProfile(ns0:AddRecordingProfileReq)
     ns0:addRecordingProfileResponse(ns0:StandardResponse)
     ns0:addRegion(ns0:AddRegionReq)
     ns0:addRegionResponse(ns0:StandardResponse)
     ns0:addRemoteCluster(ns0:AddRemoteClusterReq)
     ns0:addRemoteClusterResponse(ns0:StandardResponse)
     ns0:addRemoteDestination(ns0:AddRemoteDestinationReq)
     ns0:addRemoteDestinationProfile(ns0:AddRemoteDestinationProfileReq)
     ns0:addRemoteDestinationProfileResponse(ns0:StandardResponse)
     ns0:addRemoteDestinationResponse(ns0:StandardResponse)
     ns0:addResourcePriorityNamespace(ns0:AddResourcePriorityNamespaceReq)
     ns0:addResourcePriorityNamespaceList(ns0:AddResourcePriorityNamespaceListReq)
     ns0:addResourcePriorityNamespaceListResponse(ns0:StandardResponse)
     ns0:addResourcePriorityNamespaceResponse(ns0:StandardResponse)
     ns0:addRouteFilter(ns0:AddRouteFilterReq)
     ns0:addRouteFilterResponse(ns0:StandardResponse)
     ns0:addRouteGroup(ns0:AddRouteGroupReq)
     ns0:addRouteGroupResponse(ns0:StandardResponse)
     ns0:addRouteList(ns0:AddRouteListReq)
     ns0:addRouteListResponse(ns0:StandardResponse)
     ns0:addRoutePartition(ns0:AddRoutePartitionReq)
     ns0:addRoutePartitionResponse(ns0:StandardResponse)
     ns0:addRoutePattern(ns0:AddRoutePatternReq)
     ns0:addRoutePatternResponse(ns0:StandardResponse)
     ns0:addSIPNormalizationScript(ns0:AddSIPNormalizationScriptReq)
     ns0:addSIPNormalizationScriptResponse(ns0:StandardResponse)
     ns0:addSNMPCommunityString(ns0:AddSNMPCommunityStringReq)
     ns0:addSNMPCommunityStringResponse(ns0:AddSNMPCommunityStringRes)
     ns0:addSNMPUser(ns0:AddSNMPUserReq)
     ns0:addSNMPUserResponse(ns0:AddSNMPUserRes)
     ns0:addSafCcdPurgeBlockLearnedRoutes(ns0:AddSafCcdPurgeBlockLearnedRoutesReq)
     ns0:addSafCcdPurgeBlockLearnedRoutesResponse(ns0:StandardResponse)
     ns0:addSafForwarder(ns0:AddSafForwarderReq)
     ns0:addSafForwarderResponse(ns0:StandardResponse)
     ns0:addSafSecurityProfile(ns0:AddSafSecurityProfileReq)
     ns0:addSafSecurityProfileResponse(ns0:StandardResponse)
     ns0:addServiceProfile(ns0:AddServiceProfileReq)
     ns0:addServiceProfileResponse(ns0:StandardResponse)
     ns0:addSipDialRules(ns0:AddSipDialRulesReq)
     ns0:addSipDialRulesResponse(ns0:StandardResponse)
     ns0:addSipProfile(ns0:AddSipProfileReq)
     ns0:addSipProfileResponse(ns0:StandardResponse)
     ns0:addSipRealm(ns0:AddSipRealmReq)
     ns0:addSipRealmResponse(ns0:StandardResponse)
     ns0:addSipRoutePattern(ns0:AddSipRoutePatternReq)
     ns0:addSipRoutePatternResponse(ns0:StandardResponse)
     ns0:addSipTrunk(ns0:AddSipTrunkReq)
     ns0:addSipTrunkResponse(ns0:StandardResponse)
     ns0:addSipTrunkSecurityProfile(ns0:AddSipTrunkSecurityProfileReq)
     ns0:addSipTrunkSecurityProfileResponse(ns0:StandardResponse)
     ns0:addSoftKeyTemplate(ns0:AddSoftKeyTemplateReq)
     ns0:addSoftKeyTemplateResponse(ns0:StandardResponse)
     ns0:addSrst(ns0:AddSrstReq)
     ns0:addSrstResponse(ns0:StandardResponse)
     ns0:addTimePeriod(ns0:AddTimePeriodReq)
     ns0:addTimePeriodResponse(ns0:StandardResponse)
     ns0:addTimeSchedule(ns0:AddTimeScheduleReq)
     ns0:addTimeScheduleResponse(ns0:StandardResponse)
     ns0:addTodAccess(ns0:AddTodAccessReq)
     ns0:addTodAccessResponse(ns0:StandardResponse)
     ns0:addTransPattern(ns0:AddTransPatternReq)
     ns0:addTransPatternResponse(ns0:StandardResponse)
     ns0:addTranscoder(ns0:AddTranscoderReq)
     ns0:addTranscoderResponse(ns0:StandardResponse)
     ns0:addTransformationProfile(ns0:AddTransformationProfileReq)
     ns0:addTransformationProfileResponse(ns0:StandardResponse)
     ns0:addUcService(ns0:AddUcServiceReq)
     ns0:addUcServiceResponse(ns0:StandardResponse)
     ns0:addUnitsToGateway(ns0:AddUnitsToGatewayReq)
     ns0:addUnitsToGatewayResponse(ns0:StandardResponse)
     ns0:addUser(ns0:AddUserReq)
     ns0:addUserGroup(ns0:AddUserGroupReq)
     ns0:addUserGroupResponse(ns0:StandardResponse)
     ns0:addUserPhoneAssociation(ns0:AddUserPhoneAssociationReq)
     ns0:addUserPhoneAssociationResponse(ns0:StandardResponse)
     ns0:addUserResponse(ns0:StandardResponse)
     ns0:addVg224(ns0:AddVg224Req)
     ns0:addVg224Response(ns0:StandardResponse)
     ns0:addVoiceMailPilot(ns0:AddVoiceMailPilotReq)
     ns0:addVoiceMailPilotResponse(ns0:StandardResponse)
     ns0:addVoiceMailPort(ns0:AddVoiceMailPortReq)
     ns0:addVoiceMailPortResponse(ns0:StandardResponse)
     ns0:addVoiceMailProfile(ns0:AddVoiceMailProfileReq)
     ns0:addVoiceMailProfileResponse(ns0:StandardResponse)
     ns0:addVpnGateway(ns0:AddVpnGatewayReq)
     ns0:addVpnGatewayResponse(ns0:StandardResponse)
     ns0:addVpnGroup(ns0:AddVpnGroupReq)
     ns0:addVpnGroupResponse(ns0:StandardResponse)
     ns0:addVpnProfile(ns0:AddVpnProfileReq)
     ns0:addVpnProfileResponse(ns0:StandardResponse)
     ns0:doAuthenticateUser(ns0:DoAuthenticateUserReq)
     ns0:doAuthenticateUserResponse(ns0:DoAuthenticateUserRes)
     ns0:doDeviceLogin(ns0:DoDeviceLoginReq)
     ns0:doDeviceLoginResponse(ns0:DoDeviceLoginRes)
     ns0:doDeviceLogout(ns0:DoDeviceLogoutReq)
     ns0:doDeviceLogoutResponse(ns0:DoDeviceLogoutRes)
     ns0:doDeviceReset(ns0:DoDeviceResetReq)
     ns0:doDeviceResetResponse(ns0:DoDeviceResetRes)
     ns0:doLdapSync(ns0:DoLdapSyncReq)
     ns0:doLdapSyncResponse(ns0:DoLdapSyncRes)
     ns0:doNotificationAck(ns0:DoNotificationAckReq)
     ns0:doNotificationAckResponse(ns0:DoNotificationAckRes)
     ns0:doNotificationObject(ns0:DoNotificationObjectReq)
     ns0:doNotificationObjectResponse(ns0:DoNotificationObjectRes)
     ns0:doNotificationRegister(ns0:DoNotificationRegisterReq)
     ns0:doNotificationRegisterResponse(ns0:DoNotificationRegisterRes)
     ns0:doNotificationUnregister(ns0:DoNotificationUnregisterReq)
     ns0:doNotificationUnregisterResponse(ns0:DoNotificationUnregisterRes)
     ns0:doUpdateRemoteCluster(ns0:DoUpdateRemoteClusterReq)
     ns0:doUpdateRemoteClusterResponse(ns0:DoUpdateRemoteClusterRes)
     ns0:executeSQLQuery(ns0:ExecuteSQLQueryReq)
     ns0:executeSQLQueryResponse(ns0:ExecuteSQLQueryRes)
     ns0:executeSQLUpdate(ns0:ExecuteSQLUpdateReq)
     ns0:executeSQLUpdateResponse(ns0:ExecuteSQLUpdateRes)
     ns0:getAarGroup(ns0:GetAarGroupReq)
     ns0:getAarGroupResponse(ns0:GetAarGroupRes)
     ns0:getAnnouncement(ns0:GetAnnouncementReq)
     ns0:getAnnouncementResponse(ns0:GetAnnouncementRes)
     ns0:getAnnunciator(ns0:GetAnnunciatorReq)
     ns0:getAnnunciatorResponse(ns0:GetAnnunciatorRes)
     ns0:getAppServerInfo(ns0:GetAppServerInfoReq)
     ns0:getAppServerInfoResponse(ns0:GetAppServerInfoRes)
     ns0:getAppUser(ns0:GetAppUserReq)
     ns0:getAppUserResponse(ns0:GetAppUserRes)
     ns0:getApplicationDialRules(ns0:GetApplicationDialRulesReq)
     ns0:getApplicationDialRulesResponse(ns0:GetApplicationDialRulesRes)
     ns0:getApplicationServer(ns0:GetApplicationServerReq)
     ns0:getApplicationServerResponse(ns0:GetApplicationServerRes)
     ns0:getApplicationUserCapfProfile(ns0:GetApplicationUserCapfProfileReq)
     ns0:getApplicationUserCapfProfileResponse(ns0:GetApplicationUserCapfProfileRes)
     ns0:getAudioCodecPreferenceList(ns0:GetAudioCodecPreferenceListReq)
     ns0:getAudioCodecPreferenceListResponse(ns0:GetAudioCodecPreferenceListRes)
     ns0:getBillingServer(ns0:GetBillingServerReq)
     ns0:getBillingServerResponse(ns0:GetBillingServerRes)
     ns0:getCCMVersion(ns0:GetCCMVersionReq)
     ns0:getCCMVersionResponse(ns0:GetCCMVersionRes)
     ns0:getCallManager(ns0:GetCallManagerReq)
     ns0:getCallManagerGroup(ns0:GetCallManagerGroupReq)
     ns0:getCallManagerGroupResponse(ns0:GetCallManagerGroupRes)
     ns0:getCallManagerResponse(ns0:GetCallManagerRes)
     ns0:getCallPark(ns0:GetCallParkReq)
     ns0:getCallParkResponse(ns0:GetCallParkRes)
     ns0:getCallPickupGroup(ns0:GetCallPickupGroupReq)
     ns0:getCallPickupGroupResponse(ns0:GetCallPickupGroupRes)
     ns0:getCalledPartyTransformationPattern(ns0:GetCalledPartyTransformationPatternReq)
     ns0:getCalledPartyTransformationPatternResponse(ns0:GetCalledPartyTransformationPatternRes)
     ns0:getCallerFilterList(ns0:GetCallerFilterListReq)
     ns0:getCallerFilterListResponse(ns0:GetCallerFilterListRes)
     ns0:getCallingPartyTransformationPattern(ns0:GetCallingPartyTransformationPatternReq)
     ns0:getCallingPartyTransformationPatternResponse(ns0:GetCallingPartyTransformationPatternRes)
     ns0:getCcdAdvertisingService(ns0:GetCcdAdvertisingServiceReq)
     ns0:getCcdAdvertisingServiceResponse(ns0:GetCcdAdvertisingServiceRes)
     ns0:getCcdHostedDN(ns0:GetCcdHostedDNReq)
     ns0:getCcdHostedDNGroup(ns0:GetCcdHostedDNGroupReq)
     ns0:getCcdHostedDNGroupResponse(ns0:GetCcdHostedDNGroupRes)
     ns0:getCcdHostedDNResponse(ns0:GetCcdHostedDNRes)
     ns0:getCcdRequestingService(ns0:GetCcdRequestingServiceReq)
     ns0:getCcdRequestingServiceResponse(ns0:GetCcdRequestingServiceRes)
     ns0:getCiscoCatalyst600024PortFXSGateway(ns0:GetCiscoCatalyst600024PortFXSGatewayReq)
     ns0:getCiscoCatalyst600024PortFXSGatewayResponse(ns0:GetCiscoCatalyst600024PortFXSGatewayRes)
     ns0:getCiscoCatalyst6000E1VoIPGateway(ns0:GetCiscoCatalyst6000E1VoIPGatewayReq)
     ns0:getCiscoCatalyst6000E1VoIPGatewayResponse(ns0:GetCiscoCatalyst6000E1VoIPGatewayRes)
     ns0:getCiscoCatalyst6000T1VoIPGatewayPri(ns0:GetCiscoCatalyst6000T1VoIPGatewayPriReq)
     ns0:getCiscoCatalyst6000T1VoIPGatewayPriResponse(ns0:GetCiscoCatalyst6000T1VoIPGatewayPriRes)
     ns0:getCiscoCatalyst6000T1VoIPGatewayT1(ns0:GetCiscoCatalyst6000T1VoIPGatewayT1Req)
     ns0:getCiscoCatalyst6000T1VoIPGatewayT1Response(ns0:GetCiscoCatalyst6000T1VoIPGatewayT1Res)
     ns0:getCmcInfo(ns0:GetCmcInfoReq)
     ns0:getCmcInfoResponse(ns0:GetCmcInfoRes)
     ns0:getCommonDeviceConfig(ns0:GetCommonDeviceConfigReq)
     ns0:getCommonDeviceConfigResponse(ns0:GetCommonDeviceConfigRes)
     ns0:getCommonPhoneConfig(ns0:GetCommonPhoneConfigReq)
     ns0:getCommonPhoneConfigResponse(ns0:GetCommonPhoneConfigRes)
     ns0:getConferenceBridge(ns0:GetConferenceBridgeReq)
     ns0:getConferenceBridgeResponse(ns0:GetConferenceBridgeRes)
     ns0:getCredentialPolicy(ns0:GetCredentialPolicyReq)
     ns0:getCredentialPolicyResponse(ns0:GetCredentialPolicyRes)
     ns0:getCss(ns0:GetCssReq)
     ns0:getCssResponse(ns0:GetCssRes)
     ns0:getCtiRoutePoint(ns0:GetCtiRoutePointReq)
     ns0:getCtiRoutePointResponse(ns0:GetCtiRoutePointRes)
     ns0:getCumaServerSecurityProfile(ns0:GetCumaServerSecurityProfileReq)
     ns0:getCumaServerSecurityProfileResponse(ns0:GetCumaServerSecurityProfileRes)
     ns0:getCustomUserField(ns0:GetCustomUserFieldReq)
     ns0:getCustomUserFieldResponse(ns0:GetCustomUserFieldRes)
     ns0:getDateTimeGroup(ns0:GetDateTimeGroupReq)
     ns0:getDateTimeGroupResponse(ns0:GetDateTimeGroupRes)
     ns0:getDdi(ns0:GetDdiReq)
     ns0:getDdiResponse(ns0:GetDdiRes)
     ns0:getDefaultDeviceProfile(ns0:GetDefaultDeviceProfileReq)
     ns0:getDefaultDeviceProfileResponse(ns0:GetDefaultDeviceProfileRes)
     ns0:getDeviceMobility(ns0:GetDeviceMobilityReq)
     ns0:getDeviceMobilityGroup(ns0:GetDeviceMobilityGroupReq)
     ns0:getDeviceMobilityGroupResponse(ns0:GetDeviceMobilityGroupRes)
     ns0:getDeviceMobilityResponse(ns0:GetDeviceMobilityRes)
     ns0:getDevicePool(ns0:GetDevicePoolReq)
     ns0:getDevicePoolResponse(ns0:GetDevicePoolRes)
     ns0:getDeviceProfile(ns0:GetDeviceProfileReq)
     ns0:getDeviceProfileResponse(ns0:GetDeviceProfileRes)
     ns0:getDhcpServer(ns0:GetDhcpServerReq)
     ns0:getDhcpServerResponse(ns0:GetDhcpServerRes)
     ns0:getDhcpSubnet(ns0:GetDhcpSubnetReq)
     ns0:getDhcpSubnetResponse(ns0:GetDhcpSubnetRes)
     ns0:getDialPlan(ns0:GetDialPlanReq)
     ns0:getDialPlanResponse(ns0:GetDialPlanRes)
     ns0:getDialPlanTag(ns0:GetDialPlanTagReq)
     ns0:getDialPlanTagResponse(ns0:GetDialPlanTagRes)
     ns0:getDirectedCallPark(ns0:GetDirectedCallParkReq)
     ns0:getDirectedCallParkResponse(ns0:GetDirectedCallParkRes)
     ns0:getDirectoryLookupDialRules(ns0:GetDirectoryLookupDialRulesReq)
     ns0:getDirectoryLookupDialRulesResponse(ns0:GetDirectoryLookupDialRulesRes)
     ns0:getEmccFeatureConfig(ns0:GetEmccFeatureConfigReq)
     ns0:getEmccFeatureConfigResponse(ns0:GetEmccFeatureConfigRes)
     ns0:getEndUserCapfProfile(ns0:GetEndUserCapfProfileReq)
     ns0:getEndUserCapfProfileResponse(ns0:GetEndUserCapfProfileRes)
     ns0:getEnterpriseFeatureAccessConfiguration(ns0:GetEnterpriseFeatureAccessConfigurationReq)
     ns0:getEnterpriseFeatureAccessConfigurationResponse(ns0:GetEnterpriseFeatureAccessConfigurationRes)
     ns0:getEnterprisePhoneConfig(ns0:GetEnterprisePhoneConfigReq)
     ns0:getEnterprisePhoneConfigResponse(ns0:GetEnterprisePhoneConfigRes)
     ns0:getExternalCallControlProfile(ns0:GetExternalCallControlProfileReq)
     ns0:getExternalCallControlProfileResponse(ns0:GetExternalCallControlProfileRes)
     ns0:getFacInfo(ns0:GetFacInfoReq)
     ns0:getFacInfoResponse(ns0:GetFacInfoRes)
     ns0:getFallbackFeatureConfig(ns0:GetFallbackFeatureConfigReq)
     ns0:getFallbackFeatureConfigResponse(ns0:GetFallbackFeatureConfigRes)
     ns0:getFallbackProfile(ns0:GetFallbackProfileReq)
     ns0:getFallbackProfileResponse(ns0:GetFallbackProfileRes)
     ns0:getFeatureControlPolicy(ns0:GetFeatureControlPolicyReq)
     ns0:getFeatureControlPolicyResponse(ns0:GetFeatureControlPolicyRes)
     ns0:getFixedMohAudioSource(ns0:GetFixedMohAudioSourceReq)
     ns0:getFixedMohAudioSourceResponse(ns0:GetFixedMohAudioSourceRes)
     ns0:getGatekeeper(ns0:GetGatekeeperReq)
     ns0:getGatekeeperResponse(ns0:GetGatekeeperRes)
     ns0:getGateway(ns0:GetGatewayReq)
     ns0:getGatewayEndpointAnalogAccess(ns0:GetGatewayEndpointAnalogAccessReq)
     ns0:getGatewayEndpointAnalogAccessResponse(ns0:GetGatewayEndpointAnalogAccessRes)
     ns0:getGatewayEndpointDigitalAccessBri(ns0:GetGatewayEndpointDigitalAccessBriReq)
     ns0:getGatewayEndpointDigitalAccessBriResponse(ns0:GetGatewayEndpointDigitalAccessBriRes)
     ns0:getGatewayEndpointDigitalAccessPri(ns0:GetGatewayEndpointDigitalAccessPriReq)
     ns0:getGatewayEndpointDigitalAccessPriResponse(ns0:GetGatewayEndpointDigitalAccessPriRes)
     ns0:getGatewayEndpointDigitalAccessT1(ns0:GetGatewayEndpointDigitalAccessT1Req)
     ns0:getGatewayEndpointDigitalAccessT1Response(ns0:GetGatewayEndpointDigitalAccessT1Res)
     ns0:getGatewayResponse(ns0:GetGatewayRes)
     ns0:getGatewaySccpEndpoints(ns0:GetGatewaySccpEndpointsReq)
     ns0:getGatewaySccpEndpointsResponse(ns0:GetGatewaySccpEndpointsRes)
     ns0:getGeoLocation(ns0:GetGeoLocationReq)
     ns0:getGeoLocationFilter(ns0:GetGeoLocationFilterReq)
     ns0:getGeoLocationFilterResponse(ns0:GetGeoLocationFilterRes)
     ns0:getGeoLocationPolicy(ns0:GetGeoLocationPolicyReq)
     ns0:getGeoLocationPolicyResponse(ns0:GetGeoLocationPolicyRes)
     ns0:getGeoLocationResponse(ns0:GetGeoLocationRes)
     ns0:getH323Gateway(ns0:GetH323GatewayReq)
     ns0:getH323GatewayResponse(ns0:GetH323GatewayRes)
     ns0:getH323Phone(ns0:GetH323PhoneReq)
     ns0:getH323PhoneResponse(ns0:GetH323PhoneRes)
     ns0:getH323Trunk(ns0:GetH323TrunkReq)
     ns0:getH323TrunkResponse(ns0:GetH323TrunkRes)
     ns0:getHandoffConfiguration(ns0:GetHandoffConfigurationReq)
     ns0:getHandoffConfigurationResponse(ns0:GetHandoffConfigurationRes)
     ns0:getHuntList(ns0:GetHuntListReq)
     ns0:getHuntListResponse(ns0:GetHuntListRes)
     ns0:getHuntPilot(ns0:GetHuntPilotReq)
     ns0:getHuntPilotResponse(ns0:GetHuntPilotRes)
     ns0:getIlsConfig(ns0:GetIlsConfigReq)
     ns0:getIlsConfigResponse(ns0:GetIlsConfigRes)
     ns0:getImeClient(ns0:GetImeClientReq)
     ns0:getImeClientResponse(ns0:GetImeClientRes)
     ns0:getImeE164Transformation(ns0:GetImeE164TransformationReq)
     ns0:getImeE164TransformationResponse(ns0:GetImeE164TransformationRes)
     ns0:getImeEnrolledPattern(ns0:GetImeEnrolledPatternReq)
     ns0:getImeEnrolledPatternGroup(ns0:GetImeEnrolledPatternGroupReq)
     ns0:getImeEnrolledPatternGroupResponse(ns0:GetImeEnrolledPatternGroupRes)
     ns0:getImeEnrolledPatternResponse(ns0:GetImeEnrolledPatternRes)
     ns0:getImeExclusionNumber(ns0:GetImeExclusionNumberReq)
     ns0:getImeExclusionNumberGroup(ns0:GetImeExclusionNumberGroupReq)
     ns0:getImeExclusionNumberGroupResponse(ns0:GetImeExclusionNumberGroupRes)
     ns0:getImeExclusionNumberResponse(ns0:GetImeExclusionNumberRes)
     ns0:getImeFeatureConfig(ns0:GetImeFeatureConfigReq)
     ns0:getImeFeatureConfigResponse(ns0:GetImeFeatureConfigRes)
     ns0:getImeFirewall(ns0:GetImeFirewallReq)
     ns0:getImeFirewallResponse(ns0:GetImeFirewallRes)
     ns0:getImeLearnedRoutes(ns0:GetImeLearnedRoutesReq)
     ns0:getImeLearnedRoutesResponse(ns0:GetImeLearnedRoutesRes)
     ns0:getImeRouteFilterElement(ns0:GetImeRouteFilterElementReq)
     ns0:getImeRouteFilterElementResponse(ns0:GetImeRouteFilterElementRes)
     ns0:getImeRouteFilterGroup(ns0:GetImeRouteFilterGroupReq)
     ns0:getImeRouteFilterGroupResponse(ns0:GetImeRouteFilterGroupRes)
     ns0:getImeServer(ns0:GetImeServerReq)
     ns0:getImeServerResponse(ns0:GetImeServerRes)
     ns0:getImportedDirectoryUriCatalogs(ns0:GetImportedDirectoryUriCatalogsReq)
     ns0:getImportedDirectoryUriCatalogsResponse(ns0:GetImportedDirectoryUriCatalogsRes)
     ns0:getInterClusterServiceProfile(ns0:GetInterClusterServiceProfileReq)
     ns0:getInterClusterServiceProfileResponse(ns0:GetInterClusterServiceProfileRes)
     ns0:getIpPhoneServices(ns0:GetIpPhoneServicesReq)
     ns0:getIpPhoneServicesResponse(ns0:GetIpPhoneServicesRes)
     ns0:getIvrUserLocale(ns0:GetIvrUserLocaleReq)
     ns0:getIvrUserLocaleResponse(ns0:GetIvrUserLocaleRes)
     ns0:getLbmGroup(ns0:GetLbmGroupReq)
     ns0:getLbmGroupResponse(ns0:GetLbmGroupRes)
     ns0:getLbmHubGroup(ns0:GetLbmHubGroupReq)
     ns0:getLbmHubGroupResponse(ns0:GetLbmHubGroupRes)
     ns0:getLdapAuthentication(ns0:GetLdapAuthenticationReq)
     ns0:getLdapAuthenticationResponse(ns0:GetLdapAuthenticationRes)
     ns0:getLdapDirectory(ns0:GetLdapDirectoryReq)
     ns0:getLdapDirectoryResponse(ns0:GetLdapDirectoryRes)
     ns0:getLdapFilter(ns0:GetLdapFilterReq)
     ns0:getLdapFilterResponse(ns0:GetLdapFilterRes)
     ns0:getLdapSyncCustomField(ns0:GetLdapSyncCustomFieldReq)
     ns0:getLdapSyncCustomFieldResponse(ns0:GetLdapSyncCustomFieldRes)
     ns0:getLdapSyncStatus(ns0:GetLdapSyncStatusReq)
     ns0:getLdapSyncStatusResponse(ns0:GetLdapSyncStatusRes)
     ns0:getLdapSystem(ns0:GetLdapSystemReq)
     ns0:getLdapSystemResponse(ns0:GetLdapSystemRes)
     ns0:getLicenseCapabilities(ns0:GetLicenseCapabilitiesReq)
     ns0:getLicenseCapabilitiesResponse(ns0:GetLicenseCapabilitiesRes)
     ns0:getLicenseUnitReport(ns0:GetLicenseUnitReportReq)
     ns0:getLicenseUnitReportResponse(ns0:GetLicenseUnitReportRes)
     ns0:getLine(ns0:GetLineReq)
     ns0:getLineGroup(ns0:GetLineGroupReq)
     ns0:getLineGroupResponse(ns0:GetLineGroupRes)
     ns0:getLineResponse(ns0:GetLineRes)
     ns0:getLocation(ns0:GetLocationReq)
     ns0:getLocationResponse(ns0:GetLocationRes)
     ns0:getMediaResourceGroup(ns0:GetMediaResourceGroupReq)
     ns0:getMediaResourceGroupResponse(ns0:GetMediaResourceGroupRes)
     ns0:getMediaResourceList(ns0:GetMediaResourceListReq)
     ns0:getMediaResourceListResponse(ns0:GetMediaResourceListRes)
     ns0:getMeetMe(ns0:GetMeetMeReq)
     ns0:getMeetMeResponse(ns0:GetMeetMeRes)
     ns0:getMessageWaiting(ns0:GetMessageWaitingReq)
     ns0:getMessageWaitingResponse(ns0:GetMessageWaitingRes)
     ns0:getMlppDomain(ns0:GetMlppDomainReq)
     ns0:getMlppDomainResponse(ns0:GetMlppDomainRes)
     ns0:getMobileSmartClientProfile(ns0:GetMobileSmartClientProfileReq)
     ns0:getMobileSmartClientProfileResponse(ns0:GetMobileSmartClientProfileRes)
     ns0:getMobileVoiceAccess(ns0:GetMobileVoiceAccessReq)
     ns0:getMobileVoiceAccessResponse(ns0:GetMobileVoiceAccessRes)
     ns0:getMobility(ns0:GetMobilityReq)
     ns0:getMobilityProfile(ns0:GetMobilityProfileReq)
     ns0:getMobilityProfileResponse(ns0:GetMobilityProfileRes)
     ns0:getMobilityResponse(ns0:GetMobilityRes)
     ns0:getMohAudioSource(ns0:GetMohAudioSourceReq)
     ns0:getMohAudioSourceResponse(ns0:GetMohAudioSourceRes)
     ns0:getMohServer(ns0:GetMohServerReq)
     ns0:getMohServerResponse(ns0:GetMohServerRes)
     ns0:getMtp(ns0:GetMtpReq)
     ns0:getMtpResponse(ns0:GetMtpRes)
     ns0:getNotificationChanges(ns0:GetNotificationChangesReq)
     ns0:getNotificationChangesResponse(ns0:GetNotificationChangesRes)
     ns0:getNotificationStatus(ns0:GetNotificationStatusReq)
     ns0:getNotificationStatusResponse(ns0:GetNotificationStatusRes)
     ns0:getNumDevices(ns0:GetNumDevicesReq)
     ns0:getNumDevicesResponse(return: {xsd:nonNegativeInteger}, sequence: xsd:unsignedLong, class: ns0:Name128)
     ns0:getOSVersion(ns0:GetOSVersionReq)
     ns0:getOSVersionResponse(ns0:GetOSVersionRes)
     ns0:getPhone(ns0:GetPhoneReq)
     ns0:getPhoneButtonTemplate(ns0:GetPhoneButtonTemplateReq)
     ns0:getPhoneButtonTemplateResponse(ns0:GetPhoneButtonTemplateRes)
     ns0:getPhoneNtp(ns0:GetPhoneNtpReq)
     ns0:getPhoneNtpResponse(ns0:GetPhoneNtpRes)
     ns0:getPhoneResponse(ns0:GetPhoneRes)
     ns0:getPhoneSecurityProfile(ns0:GetPhoneSecurityProfileReq)
     ns0:getPhoneSecurityProfileResponse(ns0:GetPhoneSecurityProfileRes)
     ns0:getPhoneTypeDisplayInstance(ns0:GetPhoneTypeDisplayInstanceReq)
     ns0:getPhoneTypeDisplayInstanceResponse(ns0:GetPhoneTypeDisplayInstanceRes)
     ns0:getPhysicalLocation(ns0:GetPhysicalLocationReq)
     ns0:getPhysicalLocationResponse(ns0:GetPhysicalLocationRes)
     ns0:getPresenceGroup(ns0:GetPresenceGroupReq)
     ns0:getPresenceGroupResponse(ns0:GetPresenceGroupRes)
     ns0:getProcessNode(ns0:GetProcessNodeReq)
     ns0:getProcessNodeResponse(ns0:GetProcessNodeRes)
     ns0:getProcessNodeService(ns0:GetProcessNodeServiceReq)
     ns0:getProcessNodeServiceResponse(ns0:GetProcessNodeServiceRes)
     ns0:getRecordingProfile(ns0:GetRecordingProfileReq)
     ns0:getRecordingProfileResponse(ns0:GetRecordingProfileRes)
     ns0:getRegion(ns0:GetRegionReq)
     ns0:getRegionResponse(ns0:GetRegionRes)
     ns0:getRemoteCluster(ns0:GetRemoteClusterReq)
     ns0:getRemoteClusterResponse(ns0:GetRemoteClusterRes)
     ns0:getRemoteDestination(ns0:GetRemoteDestinationReq)
     ns0:getRemoteDestinationProfile(ns0:GetRemoteDestinationProfileReq)
     ns0:getRemoteDestinationProfileResponse(ns0:GetRemoteDestinationProfileRes)
     ns0:getRemoteDestinationResponse(ns0:GetRemoteDestinationRes)
     ns0:getResourcePriorityNamespace(ns0:GetResourcePriorityNamespaceReq)
     ns0:getResourcePriorityNamespaceList(ns0:GetResourcePriorityNamespaceListReq)
     ns0:getResourcePriorityNamespaceListResponse(ns0:GetResourcePriorityNamespaceListRes)
     ns0:getResourcePriorityNamespaceResponse(ns0:GetResourcePriorityNamespaceRes)
     ns0:getRouteFilter(ns0:GetRouteFilterReq)
     ns0:getRouteFilterResponse(ns0:GetRouteFilterRes)
     ns0:getRouteGroup(ns0:GetRouteGroupReq)
     ns0:getRouteGroupResponse(ns0:GetRouteGroupRes)
     ns0:getRouteList(ns0:GetRouteListReq)
     ns0:getRouteListResponse(ns0:GetRouteListRes)
     ns0:getRoutePartition(ns0:GetRoutePartitionReq)
     ns0:getRoutePartitionResponse(ns0:GetRoutePartitionRes)
     ns0:getRoutePattern(ns0:GetRoutePatternReq)
     ns0:getRoutePatternResponse(ns0:GetRoutePatternRes)
     ns0:getSIPNormalizationScript(ns0:GetSIPNormalizationScriptReq)
     ns0:getSIPNormalizationScriptResponse(ns0:GetSIPNormalizationScriptRes)
     ns0:getSNMPCommunityString(ns0:GetSNMPCommunityStringReq)
     ns0:getSNMPCommunityStringResponse(ns0:GetSNMPCommunityStringRes)
     ns0:getSNMPMIB2List(ns0:GetSNMPMIB2ListReq)
     ns0:getSNMPMIB2ListResponse(ns0:GetSNMPMIB2ListRes)
     ns0:getSNMPUser(ns0:GetSNMPUserReq)
     ns0:getSNMPUserResponse(ns0:GetSNMPUserRes)
     ns0:getSafCcdPurgeBlockLearnedRoutes(ns0:GetSafCcdPurgeBlockLearnedRoutesReq)
     ns0:getSafCcdPurgeBlockLearnedRoutesResponse(ns0:GetSafCcdPurgeBlockLearnedRoutesRes)
     ns0:getSafForwarder(ns0:GetSafForwarderReq)
     ns0:getSafForwarderResponse(ns0:GetSafForwarderRes)
     ns0:getSafSecurityProfile(ns0:GetSafSecurityProfileReq)
     ns0:getSafSecurityProfileResponse(ns0:GetSafSecurityProfileRes)
     ns0:getServiceParameter(ns0:GetServiceParameterReq)
     ns0:getServiceParameterResponse(ns0:GetServiceParameterRes)
     ns0:getServiceProfile(ns0:GetServiceProfileReq)
     ns0:getServiceProfileResponse(ns0:GetServiceProfileRes)
     ns0:getSipDialRules(ns0:GetSipDialRulesReq)
     ns0:getSipDialRulesResponse(ns0:GetSipDialRulesRes)
     ns0:getSipProfile(ns0:GetSipProfileReq)
     ns0:getSipProfileResponse(ns0:GetSipProfileRes)
     ns0:getSipRealm(ns0:GetSipRealmReq)
     ns0:getSipRealmResponse(ns0:GetSipRealmRes)
     ns0:getSipRoutePattern(ns0:GetSipRoutePatternReq)
     ns0:getSipRoutePatternResponse(ns0:GetSipRoutePatternRes)
     ns0:getSipTrunk(ns0:GetSipTrunkReq)
     ns0:getSipTrunkResponse(ns0:GetSipTrunkRes)
     ns0:getSipTrunkSecurityProfile(ns0:GetSipTrunkSecurityProfileReq)
     ns0:getSipTrunkSecurityProfileResponse(ns0:GetSipTrunkSecurityProfileRes)
     ns0:getSoftKeySet(ns0:GetSoftKeySetReq)
     ns0:getSoftKeySetResponse(ns0:GetSoftKeySetRes)
     ns0:getSoftKeyTemplate(ns0:GetSoftKeyTemplateReq)
     ns0:getSoftKeyTemplateResponse(ns0:GetSoftKeyTemplateRes)
     ns0:getSrst(ns0:GetSrstReq)
     ns0:getSrstResponse(ns0:GetSrstRes)
     ns0:getSyslogConfiguration(ns0:GetSyslogConfigurationReq)
     ns0:getSyslogConfigurationResponse(ns0:GetSyslogConfigurationRes)
     ns0:getTimePeriod(ns0:GetTimePeriodReq)
     ns0:getTimePeriodResponse(ns0:GetTimePeriodRes)
     ns0:getTimeSchedule(ns0:GetTimeScheduleReq)
     ns0:getTimeScheduleResponse(ns0:GetTimeScheduleRes)
     ns0:getTodAccess(ns0:GetTodAccessReq)
     ns0:getTodAccessResponse(ns0:GetTodAccessRes)
     ns0:getTransPattern(ns0:GetTransPatternReq)
     ns0:getTransPatternResponse(ns0:GetTransPatternRes)
     ns0:getTranscoder(ns0:GetTranscoderReq)
     ns0:getTranscoderResponse(ns0:GetTranscoderRes)
     ns0:getTransformationProfile(ns0:GetTransformationProfileReq)
     ns0:getTransformationProfileResponse(ns0:GetTransformationProfileRes)
     ns0:getTvsCertificate(ns0:GetTvsCertificateReq)
     ns0:getTvsCertificateResponse(ns0:GetTvsCertificateRes)
     ns0:getUcService(ns0:GetUcServiceReq)
     ns0:getUcServiceResponse(ns0:GetUcServiceRes)
     ns0:getUser(ns0:GetUserReq)
     ns0:getUserGroup(ns0:GetUserGroupReq)
     ns0:getUserGroupResponse(ns0:GetUserGroupRes)
     ns0:getUserResponse(ns0:GetUserRes)
     ns0:getVg224(ns0:GetVg224Req)
     ns0:getVg224Response(ns0:GetVg224Res)
     ns0:getVoiceMailPilot(ns0:GetVoiceMailPilotReq)
     ns0:getVoiceMailPilotResponse(ns0:GetVoiceMailPilotRes)
     ns0:getVoiceMailPort(ns0:GetVoiceMailPortReq)
     ns0:getVoiceMailPortResponse(ns0:GetVoiceMailPortRes)
     ns0:getVoiceMailProfile(ns0:GetVoiceMailProfileReq)
     ns0:getVoiceMailProfileResponse(ns0:GetVoiceMailProfileRes)
     ns0:getVpnGateway(ns0:GetVpnGatewayReq)
     ns0:getVpnGatewayResponse(ns0:GetVpnGatewayRes)
     ns0:getVpnGroup(ns0:GetVpnGroupReq)
     ns0:getVpnGroupResponse(ns0:GetVpnGroupRes)
     ns0:getVpnProfile(ns0:GetVpnProfileReq)
     ns0:getVpnProfileResponse(ns0:GetVpnProfileRes)
     ns0:listAarGroup(ns0:ListAarGroupReq)
     ns0:listAarGroupResponse(ns0:ListAarGroupRes)
     ns0:listAnnouncement(ns0:ListAnnouncementReq)
     ns0:listAnnouncementResponse(ns0:ListAnnouncementRes)
     ns0:listAnnunciator(ns0:ListAnnunciatorReq)
     ns0:listAnnunciatorResponse(ns0:ListAnnunciatorRes)
     ns0:listAppUser(ns0:ListAppUserReq)
     ns0:listAppUserResponse(ns0:ListAppUserRes)
     ns0:listApplicationDialRules(ns0:ListApplicationDialRulesReq)
     ns0:listApplicationDialRulesResponse(ns0:ListApplicationDialRulesRes)
     ns0:listApplicationServer(ns0:ListApplicationServerReq)
     ns0:listApplicationServerResponse(ns0:ListApplicationServerRes)
     ns0:listApplicationUserCapfProfile(ns0:ListApplicationUserCapfProfileReq)
     ns0:listApplicationUserCapfProfileResponse(ns0:ListApplicationUserCapfProfileRes)
     ns0:listAudioCodecPreferenceList(ns0:ListAudioCodecPreferenceListReq)
     ns0:listAudioCodecPreferenceListResponse(ns0:ListAudioCodecPreferenceListRes)
     ns0:listBillingServer(ns0:ListBillingServerReq)
     ns0:listBillingServerResponse(ns0:ListBillingServerRes)
     ns0:listCallManager(ns0:ListCallManagerReq)
     ns0:listCallManagerGroup(ns0:ListCallManagerGroupReq)
     ns0:listCallManagerGroupResponse(ns0:ListCallManagerGroupRes)
     ns0:listCallManagerResponse(ns0:ListCallManagerRes)
     ns0:listCallPark(ns0:ListCallParkReq)
     ns0:listCallParkResponse(ns0:ListCallParkRes)
     ns0:listCallPickupGroup(ns0:ListCallPickupGroupReq)
     ns0:listCallPickupGroupResponse(ns0:ListCallPickupGroupRes)
     ns0:listCalledPartyTracing(ns0:ListCalledPartyTracingReq)
     ns0:listCalledPartyTracingResponse(ns0:ListCalledPartyTracingRes)
     ns0:listCalledPartyTransformationPattern(ns0:ListCalledPartyTransformationPatternReq)
     ns0:listCalledPartyTransformationPatternResponse(ns0:ListCalledPartyTransformationPatternRes)
     ns0:listCallerFilterList(ns0:ListCallerFilterListReq)
     ns0:listCallerFilterListResponse(ns0:ListCallerFilterListRes)
     ns0:listCallingPartyTransformationPattern(ns0:ListCallingPartyTransformationPatternReq)
     ns0:listCallingPartyTransformationPatternResponse(ns0:ListCallingPartyTransformationPatternRes)
     ns0:listCcdAdvertisingService(ns0:ListCcdAdvertisingServiceReq)
     ns0:listCcdAdvertisingServiceResponse(ns0:ListCcdAdvertisingServiceRes)
     ns0:listCcdHostedDN(ns0:ListCcdHostedDNReq)
     ns0:listCcdHostedDNGroup(ns0:ListCcdHostedDNGroupReq)
     ns0:listCcdHostedDNGroupResponse(ns0:ListCcdHostedDNGroupRes)
     ns0:listCcdHostedDNResponse(ns0:ListCcdHostedDNRes)
     ns0:listCiscoCatalyst600024PortFXSGateway(ns0:ListCiscoCatalyst600024PortFXSGatewayReq)
     ns0:listCiscoCatalyst600024PortFXSGatewayResponse(ns0:ListCiscoCatalyst600024PortFXSGatewayRes)
     ns0:listCiscoCatalyst6000E1VoIPGateway(ns0:ListCiscoCatalyst6000E1VoIPGatewayReq)
     ns0:listCiscoCatalyst6000E1VoIPGatewayResponse(ns0:ListCiscoCatalyst6000E1VoIPGatewayRes)
     ns0:listCiscoCatalyst6000T1VoIPGatewayPri(ns0:ListCiscoCatalyst6000T1VoIPGatewayPriReq)
     ns0:listCiscoCatalyst6000T1VoIPGatewayPriResponse(ns0:ListCiscoCatalyst6000T1VoIPGatewayPriRes)
     ns0:listCiscoCatalyst6000T1VoIPGatewayT1(ns0:ListCiscoCatalyst6000T1VoIPGatewayT1Req)
     ns0:listCiscoCatalyst6000T1VoIPGatewayT1Response(ns0:ListCiscoCatalyst6000T1VoIPGatewayT1Res)
     ns0:listCmcInfo(ns0:ListCmcInfoReq)
     ns0:listCmcInfoResponse(ns0:ListCmcInfoRes)
     ns0:listCommonDeviceConfig(ns0:ListCommonDeviceConfigReq)
     ns0:listCommonDeviceConfigResponse(ns0:ListCommonDeviceConfigRes)
     ns0:listCommonPhoneConfig(ns0:ListCommonPhoneConfigReq)
     ns0:listCommonPhoneConfigResponse(ns0:ListCommonPhoneConfigRes)
     ns0:listConferenceBridge(ns0:ListConferenceBridgeReq)
     ns0:listConferenceBridgeResponse(ns0:ListConferenceBridgeRes)
     ns0:listCredentialPolicy(ns0:ListCredentialPolicyReq)
     ns0:listCredentialPolicyResponse(ns0:ListCredentialPolicyRes)
     ns0:listCss(ns0:ListCssReq)
     ns0:listCssResponse(ns0:ListCssRes)
     ns0:listCtiRoutePoint(ns0:ListCtiRoutePointReq)
     ns0:listCtiRoutePointResponse(ns0:ListCtiRoutePointRes)
     ns0:listCumaServerSecurityProfile(ns0:ListCumaServerSecurityProfileReq)
     ns0:listCumaServerSecurityProfileResponse(ns0:ListCumaServerSecurityProfileRes)
     ns0:listCustomUserField(ns0:ListCustomUserFieldReq)
     ns0:listCustomUserFieldResponse(ns0:ListCustomUserFieldRes)
     ns0:listDateTimeGroup(ns0:ListDateTimeGroupReq)
     ns0:listDateTimeGroupResponse(ns0:ListDateTimeGroupRes)
     ns0:listDdi(ns0:ListDdiReq)
     ns0:listDdiResponse(ns0:ListDdiRes)
     ns0:listDefaultDeviceProfile(ns0:ListDefaultDeviceProfileReq)
     ns0:listDefaultDeviceProfileResponse(ns0:ListDefaultDeviceProfileRes)
     ns0:listDeviceMobility(ns0:ListDeviceMobilityReq)
     ns0:listDeviceMobilityGroup(ns0:ListDeviceMobilityGroupReq)
     ns0:listDeviceMobilityGroupResponse(ns0:ListDeviceMobilityGroupRes)
     ns0:listDeviceMobilityResponse(ns0:ListDeviceMobilityRes)
     ns0:listDevicePool(ns0:ListDevicePoolReq)
     ns0:listDevicePoolResponse(ns0:ListDevicePoolRes)
     ns0:listDeviceProfile(ns0:ListDeviceProfileReq)
     ns0:listDeviceProfileResponse(ns0:ListDeviceProfileRes)
     ns0:listDhcpServer(ns0:ListDhcpServerReq)
     ns0:listDhcpServerResponse(ns0:ListDhcpServerRes)
     ns0:listDhcpSubnet(ns0:ListDhcpSubnetReq)
     ns0:listDhcpSubnetResponse(ns0:ListDhcpSubnetRes)
     ns0:listDialPlan(ns0:ListDialPlanReq)
     ns0:listDialPlanResponse(ns0:ListDialPlanRes)
     ns0:listDialPlanTag(ns0:ListDialPlanTagReq)
     ns0:listDialPlanTagResponse(ns0:ListDialPlanTagRes)
     ns0:listDirectedCallPark(ns0:ListDirectedCallParkReq)
     ns0:listDirectedCallParkResponse(ns0:ListDirectedCallParkRes)
     ns0:listDirectoryLookupDialRules(ns0:ListDirectoryLookupDialRulesReq)
     ns0:listDirectoryLookupDialRulesResponse(ns0:ListDirectoryLookupDialRulesRes)
     ns0:listEndUserCapfProfile(ns0:ListEndUserCapfProfileReq)
     ns0:listEndUserCapfProfileResponse(ns0:ListEndUserCapfProfileRes)
     ns0:listEnterpriseFeatureAccessConfiguration(ns0:ListEnterpriseFeatureAccessConfigurationReq)
     ns0:listEnterpriseFeatureAccessConfigurationResponse(ns0:ListEnterpriseFeatureAccessConfigurationRes)
     ns0:listExternalCallControlProfile(ns0:ListExternalCallControlProfileReq)
     ns0:listExternalCallControlProfileResponse(ns0:ListExternalCallControlProfileRes)
     ns0:listFacInfo(ns0:ListFacInfoReq)
     ns0:listFacInfoResponse(ns0:ListFacInfoRes)
     ns0:listFallbackProfile(ns0:ListFallbackProfileReq)
     ns0:listFallbackProfileResponse(ns0:ListFallbackProfileRes)
     ns0:listFeatureControlPolicy(ns0:ListFeatureControlPolicyReq)
     ns0:listFeatureControlPolicyResponse(ns0:ListFeatureControlPolicyRes)
     ns0:listGatekeeper(ns0:ListGatekeeperReq)
     ns0:listGatekeeperResponse(ns0:ListGatekeeperRes)
     ns0:listGateway(ns0:ListGatewayReq)
     ns0:listGatewayResponse(ns0:ListGatewayRes)
     ns0:listGeoLocation(ns0:ListGeoLocationReq)
     ns0:listGeoLocationFilter(ns0:ListGeoLocationFilterReq)
     ns0:listGeoLocationFilterResponse(ns0:ListGeoLocationFilterRes)
     ns0:listGeoLocationPolicy(ns0:ListGeoLocationPolicyReq)
     ns0:listGeoLocationPolicyResponse(ns0:ListGeoLocationPolicyRes)
     ns0:listGeoLocationResponse(ns0:ListGeoLocationRes)
     ns0:listH323Gateway(ns0:ListH323GatewayReq)
     ns0:listH323GatewayResponse(ns0:ListH323GatewayRes)
     ns0:listH323Phone(ns0:ListH323PhoneReq)
     ns0:listH323PhoneResponse(ns0:ListH323PhoneRes)
     ns0:listH323Trunk(ns0:ListH323TrunkReq)
     ns0:listH323TrunkResponse(ns0:ListH323TrunkRes)
     ns0:listHuntList(ns0:ListHuntListReq)
     ns0:listHuntListResponse(ns0:ListHuntListRes)
     ns0:listHuntPilot(ns0:ListHuntPilotReq)
     ns0:listHuntPilotResponse(ns0:ListHuntPilotRes)
     ns0:listImeClient(ns0:ListImeClientReq)
     ns0:listImeClientResponse(ns0:ListImeClientRes)
     ns0:listImeE164Transformation(ns0:ListImeE164TransformationReq)
     ns0:listImeE164TransformationResponse(ns0:ListImeE164TransformationRes)
     ns0:listImeEnrolledPattern(ns0:ListImeEnrolledPatternReq)
     ns0:listImeEnrolledPatternGroup(ns0:ListImeEnrolledPatternGroupReq)
     ns0:listImeEnrolledPatternGroupResponse(ns0:ListImeEnrolledPatternGroupRes)
     ns0:listImeEnrolledPatternResponse(ns0:ListImeEnrolledPatternRes)
     ns0:listImeExclusionNumber(ns0:ListImeExclusionNumberReq)
     ns0:listImeExclusionNumberGroup(ns0:ListImeExclusionNumberGroupReq)
     ns0:listImeExclusionNumberGroupResponse(ns0:ListImeExclusionNumberGroupRes)
     ns0:listImeExclusionNumberResponse(ns0:ListImeExclusionNumberRes)
     ns0:listImeFirewall(ns0:ListImeFirewallReq)
     ns0:listImeFirewallResponse(ns0:ListImeFirewallRes)
     ns0:listImeRouteFilterElement(ns0:ListImeRouteFilterElementReq)
     ns0:listImeRouteFilterElementResponse(ns0:ListImeRouteFilterElementRes)
     ns0:listImeRouteFilterGroup(ns0:ListImeRouteFilterGroupReq)
     ns0:listImeRouteFilterGroupResponse(ns0:ListImeRouteFilterGroupRes)
     ns0:listImeServer(ns0:ListImeServerReq)
     ns0:listImeServerResponse(ns0:ListImeServerRes)
     ns0:listImportedDirectoryUriCatalogs(ns0:ListImportedDirectoryUriCatalogsReq)
     ns0:listImportedDirectoryUriCatalogsResponse(ns0:ListImportedDirectoryUriCatalogsRes)
     ns0:listIpPhoneServices(ns0:ListIpPhoneServicesReq)
     ns0:listIpPhoneServicesResponse(ns0:ListIpPhoneServicesRes)
     ns0:listIvrUserLocale(ns0:ListIvrUserLocaleReq)
     ns0:listIvrUserLocaleResponse(ns0:ListIvrUserLocaleRes)
     ns0:listLbmGroup(ns0:ListLbmGroupReq)
     ns0:listLbmGroupResponse(ns0:ListLbmGroupRes)
     ns0:listLbmHubGroup(ns0:ListLbmHubGroupReq)
     ns0:listLbmHubGroupResponse(ns0:ListLbmHubGroupRes)
     ns0:listLdapDirectory(ns0:ListLdapDirectoryReq)
     ns0:listLdapDirectoryResponse(ns0:ListLdapDirectoryRes)
     ns0:listLdapFilter(ns0:ListLdapFilterReq)
     ns0:listLdapFilterResponse(ns0:ListLdapFilterRes)
     ns0:listLdapSyncCustomField(ns0:ListLdapSyncCustomFieldReq)
     ns0:listLdapSyncCustomFieldResponse(ns0:ListLdapSyncCustomFieldRes)
     ns0:listLicenseCapabilities(ns0:ListLicenseCapabilitiesReq)
     ns0:listLicenseCapabilitiesResponse(ns0:ListLicenseCapabilitiesRes)
     ns0:listLine(ns0:ListLineReq)
     ns0:listLineGroup(ns0:ListLineGroupReq)
     ns0:listLineGroupResponse(ns0:ListLineGroupRes)
     ns0:listLineResponse(ns0:ListLineRes)
     ns0:listLocation(ns0:ListLocationReq)
     ns0:listLocationResponse(ns0:ListLocationRes)
     ns0:listMediaResourceGroup(ns0:ListMediaResourceGroupReq)
     ns0:listMediaResourceGroupResponse(ns0:ListMediaResourceGroupRes)
     ns0:listMediaResourceList(ns0:ListMediaResourceListReq)
     ns0:listMediaResourceListResponse(ns0:ListMediaResourceListRes)
     ns0:listMeetMe(ns0:ListMeetMeReq)
     ns0:listMeetMeResponse(ns0:ListMeetMeRes)
     ns0:listMessageWaiting(ns0:ListMessageWaitingReq)
     ns0:listMessageWaitingResponse(ns0:ListMessageWaitingRes)
     ns0:listMlppDomain(ns0:ListMlppDomainReq)
     ns0:listMlppDomainResponse(ns0:ListMlppDomainRes)
     ns0:listMobileSmartClientProfile(ns0:ListMobileSmartClientProfileReq)
     ns0:listMobileSmartClientProfileResponse(ns0:ListMobileSmartClientProfileRes)
     ns0:listMobilityProfile(ns0:ListMobilityProfileReq)
     ns0:listMobilityProfileResponse(ns0:ListMobilityProfileRes)
     ns0:listMohAudioSource(ns0:ListMohAudioSourceReq)
     ns0:listMohAudioSourceResponse(ns0:ListMohAudioSourceRes)
     ns0:listMohServer(ns0:ListMohServerReq)
     ns0:listMohServerResponse(ns0:ListMohServerRes)
     ns0:listMtp(ns0:ListMtpReq)
     ns0:listMtpResponse(ns0:ListMtpRes)
     ns0:listPhone(ns0:ListPhoneReq)
     ns0:listPhoneButtonTemplate(ns0:ListPhoneButtonTemplateReq)
     ns0:listPhoneButtonTemplateResponse(ns0:ListPhoneButtonTemplateRes)
     ns0:listPhoneNtp(ns0:ListPhoneNtpReq)
     ns0:listPhoneNtpResponse(ns0:ListPhoneNtpRes)
     ns0:listPhoneResponse(ns0:ListPhoneRes)
     ns0:listPhoneSecurityProfile(ns0:ListPhoneSecurityProfileReq)
     ns0:listPhoneSecurityProfileResponse(ns0:ListPhoneSecurityProfileRes)
     ns0:listPhysicalLocation(ns0:ListPhysicalLocationReq)
     ns0:listPhysicalLocationResponse(ns0:ListPhysicalLocationRes)
     ns0:listPresenceGroup(ns0:ListPresenceGroupReq)
     ns0:listPresenceGroupResponse(ns0:ListPresenceGroupRes)
     ns0:listProcessNode(ns0:ListProcessNodeReq)
     ns0:listProcessNodeResponse(ns0:ListProcessNodeRes)
     ns0:listProcessNodeService(ns0:ListProcessNodeServiceReq)
     ns0:listProcessNodeServiceResponse(ns0:ListProcessNodeServiceRes)
     ns0:listRecordingProfile(ns0:ListRecordingProfileReq)
     ns0:listRecordingProfileResponse(ns0:ListRecordingProfileRes)
     ns0:listRegion(ns0:ListRegionReq)
     ns0:listRegionResponse(ns0:ListRegionRes)
     ns0:listRemoteCluster(ns0:ListRemoteClusterReq)
     ns0:listRemoteClusterResponse(ns0:ListRemoteClusterRes)
     ns0:listRemoteDestination(ns0:ListRemoteDestinationReq)
     ns0:listRemoteDestinationProfile(ns0:ListRemoteDestinationProfileReq)
     ns0:listRemoteDestinationProfileResponse(ns0:ListRemoteDestinationProfileRes)
     ns0:listRemoteDestinationResponse(ns0:ListRemoteDestinationRes)
     ns0:listResourcePriorityNamespace(ns0:ListResourcePriorityNamespaceReq)
     ns0:listResourcePriorityNamespaceList(ns0:ListResourcePriorityNamespaceListReq)
     ns0:listResourcePriorityNamespaceListResponse(ns0:ListResourcePriorityNamespaceListRes)
     ns0:listResourcePriorityNamespaceResponse(ns0:ListResourcePriorityNamespaceRes)
     ns0:listRouteFilter(ns0:ListRouteFilterReq)
     ns0:listRouteFilterResponse(ns0:ListRouteFilterRes)
     ns0:listRouteGroup(ns0:ListRouteGroupReq)
     ns0:listRouteGroupResponse(ns0:ListRouteGroupRes)
     ns0:listRouteList(ns0:ListRouteListReq)
     ns0:listRouteListResponse(ns0:ListRouteListRes)
     ns0:listRoutePartition(ns0:ListRoutePartitionReq)
     ns0:listRoutePartitionResponse(ns0:ListRoutePartitionRes)
     ns0:listRoutePattern(ns0:ListRoutePatternReq)
     ns0:listRoutePatternResponse(ns0:ListRoutePatternRes)
     ns0:listRoutePlan(ns0:ListRoutePlanReq)
     ns0:listRoutePlanResponse(ns0:ListRoutePlanRes)
     ns0:listSIPNormalizationScript(ns0:ListSIPNormalizationScriptReq)
     ns0:listSIPNormalizationScriptResponse(ns0:ListSIPNormalizationScriptRes)
     ns0:listSafCcdPurgeBlockLearnedRoutes(ns0:ListSafCcdPurgeBlockLearnedRoutesReq)
     ns0:listSafCcdPurgeBlockLearnedRoutesResponse(ns0:ListSafCcdPurgeBlockLearnedRoutesRes)
     ns0:listSafForwarder(ns0:ListSafForwarderReq)
     ns0:listSafForwarderResponse(ns0:ListSafForwarderRes)
     ns0:listSafSecurityProfile(ns0:ListSafSecurityProfileReq)
     ns0:listSafSecurityProfileResponse(ns0:ListSafSecurityProfileRes)
     ns0:listServiceParameter(ns0:ListServiceParameterReq)
     ns0:listServiceParameterResponse(ns0:ListServiceParameterRes)
     ns0:listServiceProfile(ns0:ListServiceProfileReq)
     ns0:listServiceProfileResponse(ns0:ListServiceProfileRes)
     ns0:listSipDialRules(ns0:ListSipDialRulesReq)
     ns0:listSipDialRulesResponse(ns0:ListSipDialRulesRes)
     ns0:listSipProfile(ns0:ListSipProfileReq)
     ns0:listSipProfileResponse(ns0:ListSipProfileRes)
     ns0:listSipRealm(ns0:ListSipRealmReq)
     ns0:listSipRealmResponse(ns0:ListSipRealmRes)
     ns0:listSipRoutePattern(ns0:ListSipRoutePatternReq)
     ns0:listSipRoutePatternResponse(ns0:ListSipRoutePatternRes)
     ns0:listSipTrunk(ns0:ListSipTrunkReq)
     ns0:listSipTrunkResponse(ns0:ListSipTrunkRes)
     ns0:listSipTrunkSecurityProfile(ns0:ListSipTrunkSecurityProfileReq)
     ns0:listSipTrunkSecurityProfileResponse(ns0:ListSipTrunkSecurityProfileRes)
     ns0:listSoftKeyTemplate(ns0:ListSoftKeyTemplateReq)
     ns0:listSoftKeyTemplateResponse(ns0:ListSoftKeyTemplateRes)
     ns0:listSrst(ns0:ListSrstReq)
     ns0:listSrstResponse(ns0:ListSrstRes)
     ns0:listTimePeriod(ns0:ListTimePeriodReq)
     ns0:listTimePeriodResponse(ns0:ListTimePeriodRes)
     ns0:listTimeSchedule(ns0:ListTimeScheduleReq)
     ns0:listTimeScheduleResponse(ns0:ListTimeScheduleRes)
     ns0:listTodAccess(ns0:ListTodAccessReq)
     ns0:listTodAccessResponse(ns0:ListTodAccessRes)
     ns0:listTransPattern(ns0:ListTransPatternReq)
     ns0:listTransPatternResponse(ns0:ListTransPatternRes)
     ns0:listTranscoder(ns0:ListTranscoderReq)
     ns0:listTranscoderResponse(ns0:ListTranscoderRes)
     ns0:listTransformationProfile(ns0:ListTransformationProfileReq)
     ns0:listTransformationProfileResponse(ns0:ListTransformationProfileRes)
     ns0:listTvsCertificate(ns0:ListTvsCertificateReq)
     ns0:listTvsCertificateResponse(ns0:ListTvsCertificateRes)
     ns0:listUcService(ns0:ListUcServiceReq)
     ns0:listUcServiceResponse(ns0:ListUcServiceRes)
     ns0:listUser(ns0:ListUserReq)
     ns0:listUserGroup(ns0:ListUserGroupReq)
     ns0:listUserGroupResponse(ns0:ListUserGroupRes)
     ns0:listUserResponse(ns0:ListUserRes)
     ns0:listVoiceMailPilot(ns0:ListVoiceMailPilotReq)
     ns0:listVoiceMailPilotResponse(ns0:ListVoiceMailPilotRes)
     ns0:listVoiceMailPort(ns0:ListVoiceMailPortReq)
     ns0:listVoiceMailPortResponse(ns0:ListVoiceMailPortRes)
     ns0:listVoiceMailProfile(ns0:ListVoiceMailProfileReq)
     ns0:listVoiceMailProfileResponse(ns0:ListVoiceMailProfileRes)
     ns0:listVpnGateway(ns0:ListVpnGatewayReq)
     ns0:listVpnGatewayResponse(ns0:ListVpnGatewayRes)
     ns0:listVpnGroup(ns0:ListVpnGroupReq)
     ns0:listVpnGroupResponse(ns0:ListVpnGroupRes)
     ns0:listVpnProfile(ns0:ListVpnProfileReq)
     ns0:listVpnProfileResponse(ns0:ListVpnProfileRes)
     ns0:removeAarGroup(ns0:NameAndGUIDRequest)
     ns0:removeAarGroupResponse(ns0:StandardResponse)
     ns0:removeAnnouncement(ns0:NameAndGUIDRequest)
     ns0:removeAnnouncementResponse(ns0:StandardResponse)
     ns0:removeAppServerInfo(ns0:RemoveAppServerInfoReq)
     ns0:removeAppServerInfoResponse(ns0:StandardResponse)
     ns0:removeAppUser(ns0:RemoveAppUserReq)
     ns0:removeAppUserResponse(ns0:StandardResponse)
     ns0:removeApplicationDialRules(ns0:NameAndGUIDRequest)
     ns0:removeApplicationDialRulesResponse(ns0:StandardResponse)
     ns0:removeApplicationServer(ns0:RemoveApplicationServerReq)
     ns0:removeApplicationServerResponse(ns0:StandardResponse)
     ns0:removeApplicationToSoftkeyTemplate(ns0:removeApplicationToSoftkeyTemplateReq)
     ns0:removeApplicationToSoftkeyTemplateResponse(ns0:StandardResponse)
     ns0:removeApplicationUserCapfProfile(ns0:RemoveApplicationUserCapfProfileReq)
     ns0:removeApplicationUserCapfProfileResponse(ns0:StandardResponse)
     ns0:removeAudioCodecPreferenceList(ns0:NameAndGUIDRequest)
     ns0:removeAudioCodecPreferenceListResponse(ns0:StandardResponse)
     ns0:removeBillingServer(ns0:RemoveBillingServerReq)
     ns0:removeBillingServerResponse(ns0:StandardResponse)
     ns0:removeCallManagerGroup(ns0:NameAndGUIDRequest)
     ns0:removeCallManagerGroupResponse(ns0:StandardResponse)
     ns0:removeCallPark(ns0:RemoveCallParkReq)
     ns0:removeCallParkResponse(ns0:StandardResponse)
     ns0:removeCallPickupGroup(ns0:RemoveCallPickupGroupReq)
     ns0:removeCallPickupGroupResponse(ns0:StandardResponse)
     ns0:removeCalledPartyTracing(ns0:RemoveCalledPartyTracingReq)
     ns0:removeCalledPartyTracingResponse(ns0:StandardResponse)
     ns0:removeCalledPartyTransformationPattern(ns0:RemoveCalledPartyTransformationPatternReq)
     ns0:removeCalledPartyTransformationPatternResponse(ns0:StandardResponse)
     ns0:removeCallerFilterList(ns0:NameAndGUIDRequest)
     ns0:removeCallerFilterListResponse(ns0:StandardResponse)
     ns0:removeCallingPartyTransformationPattern(ns0:RemoveCallingPartyTransformationPatternReq)
     ns0:removeCallingPartyTransformationPatternResponse(ns0:StandardResponse)
     ns0:removeCcdAdvertisingService(ns0:NameAndGUIDRequest)
     ns0:removeCcdAdvertisingServiceResponse(ns0:StandardResponse)
     ns0:removeCcdHostedDN(ns0:RemoveCcdHostedDNReq)
     ns0:removeCcdHostedDNGroup(ns0:NameAndGUIDRequest)
     ns0:removeCcdHostedDNGroupResponse(ns0:StandardResponse)
     ns0:removeCcdHostedDNResponse(ns0:StandardResponse)
     ns0:removeCcdRequestingService(ns0:NameAndGUIDRequest)
     ns0:removeCcdRequestingServiceResponse(ns0:StandardResponse)
     ns0:removeCiscoCatalyst600024PortFXSGateway(ns0:NameAndGUIDRequest)
     ns0:removeCiscoCatalyst600024PortFXSGatewayResponse(ns0:StandardResponse)
     ns0:removeCiscoCatalyst6000E1VoIPGateway(ns0:NameAndGUIDRequest)
     ns0:removeCiscoCatalyst6000E1VoIPGatewayResponse(ns0:StandardResponse)
     ns0:removeCiscoCatalyst6000T1VoIPGatewayPri(ns0:NameAndGUIDRequest)
     ns0:removeCiscoCatalyst6000T1VoIPGatewayPriResponse(ns0:StandardResponse)
     ns0:removeCiscoCatalyst6000T1VoIPGatewayT1(ns0:NameAndGUIDRequest)
     ns0:removeCiscoCatalyst6000T1VoIPGatewayT1Response(ns0:StandardResponse)
     ns0:removeCmcInfo(ns0:RemoveCmcInfoReq)
     ns0:removeCmcInfoResponse(ns0:StandardResponse)
     ns0:removeCommonDeviceConfig(ns0:NameAndGUIDRequest)
     ns0:removeCommonDeviceConfigResponse(ns0:StandardResponse)
     ns0:removeCommonPhoneConfig(ns0:NameAndGUIDRequest)
     ns0:removeCommonPhoneConfigResponse(ns0:StandardResponse)
     ns0:removeConferenceBridge(ns0:NameAndGUIDRequest)
     ns0:removeConferenceBridgeResponse(ns0:StandardResponse)
     ns0:removeCredentialPolicy(ns0:NameAndGUIDRequest)
     ns0:removeCredentialPolicyResponse(ns0:StandardResponse)
     ns0:removeCss(ns0:NameAndGUIDRequest)
     ns0:removeCssResponse(ns0:StandardResponse)
     ns0:removeCtiRoutePoint(ns0:NameAndGUIDRequest)
     ns0:removeCtiRoutePointResponse(ns0:StandardResponse)
     ns0:removeCumaServerSecurityProfile(ns0:NameAndGUIDRequest)
     ns0:removeCumaServerSecurityProfileResponse(ns0:StandardResponse)
     ns0:removeCustomUserField(ns0:RemoveCustomUserFieldReq)
     ns0:removeCustomUserFieldResponse(ns0:StandardResponse)
     ns0:removeDateTimeGroup(ns0:NameAndGUIDRequest)
     ns0:removeDateTimeGroupResponse(ns0:StandardResponse)
     ns0:removeDefaultDeviceProfile(ns0:NameAndGUIDRequest)
     ns0:removeDefaultDeviceProfileResponse(ns0:StandardResponse)
     ns0:removeDeviceMobility(ns0:NameAndGUIDRequest)
     ns0:removeDeviceMobilityGroup(ns0:NameAndGUIDRequest)
     ns0:removeDeviceMobilityGroupResponse(ns0:StandardResponse)
     ns0:removeDeviceMobilityResponse(ns0:StandardResponse)
     ns0:removeDevicePool(ns0:NameAndGUIDRequest)
     ns0:removeDevicePoolResponse(ns0:StandardResponse)
     ns0:removeDeviceProfile(ns0:NameAndGUIDRequest)
     ns0:removeDeviceProfileResponse(ns0:StandardResponse)
     ns0:removeDhcpServer(ns0:RemoveDhcpServerReq)
     ns0:removeDhcpServerResponse(ns0:StandardResponse)
     ns0:removeDhcpSubnet(ns0:RemoveDhcpSubnetReq)
     ns0:removeDhcpSubnetResponse(ns0:StandardResponse)
     ns0:removeDirectedCallPark(ns0:RemoveDirectedCallParkReq)
     ns0:removeDirectedCallParkResponse(ns0:StandardResponse)
     ns0:removeDirectoryLookupDialRules(ns0:NameAndGUIDRequest)
     ns0:removeDirectoryLookupDialRulesResponse(ns0:StandardResponse)
     ns0:removeEndUserCapfProfile(ns0:RemoveEndUserCapfProfileReq)
     ns0:removeEndUserCapfProfileResponse(ns0:StandardResponse)
     ns0:removeEnterpriseFeatureAccessConfiguration(ns0:RemoveEnterpriseFeatureAccessConfigurationReq)
     ns0:removeEnterpriseFeatureAccessConfigurationResponse(ns0:StandardResponse)
     ns0:removeExternalCallControlProfile(ns0:NameAndGUIDRequest)
     ns0:removeExternalCallControlProfileResponse(ns0:StandardResponse)
     ns0:removeFacInfo(ns0:NameAndGUIDRequest)
     ns0:removeFacInfoResponse(ns0:StandardResponse)
     ns0:removeFallbackProfile(ns0:NameAndGUIDRequest)
     ns0:removeFallbackProfileResponse(ns0:StandardResponse)
     ns0:removeFeatureControlPolicy(ns0:NameAndGUIDRequest)
     ns0:removeFeatureControlPolicyResponse(ns0:StandardResponse)
     ns0:removeGatekeeper(ns0:NameAndGUIDRequest)
     ns0:removeGatekeeperResponse(ns0:StandardResponse)
     ns0:removeGateway(ns0:RemoveGatewayReq)
     ns0:removeGatewayEndpointAnalogAccess(ns0:NameAndGUIDRequest)
     ns0:removeGatewayEndpointAnalogAccessResponse(ns0:StandardResponse)
     ns0:removeGatewayEndpointDigitalAccessBri(ns0:NameAndGUIDRequest)
     ns0:removeGatewayEndpointDigitalAccessBriResponse(ns0:StandardResponse)
     ns0:removeGatewayEndpointDigitalAccessPri(ns0:NameAndGUIDRequest)
     ns0:removeGatewayEndpointDigitalAccessPriResponse(ns0:StandardResponse)
     ns0:removeGatewayEndpointDigitalAccessT1(ns0:NameAndGUIDRequest)
     ns0:removeGatewayEndpointDigitalAccessT1Response(ns0:StandardResponse)
     ns0:removeGatewayResponse(ns0:StandardResponse)
     ns0:removeGatewaySccpEndpoints(ns0:NameAndGUIDRequest)
     ns0:removeGatewaySccpEndpointsResponse(ns0:StandardResponse)
     ns0:removeGatewaySubunits(ns0:RemoveGatewaySubunitsReq)
     ns0:removeGatewaySubunitsResponse(ns0:StandardResponse)
     ns0:removeGeoLocation(ns0:NameAndGUIDRequest)
     ns0:removeGeoLocationFilter(ns0:NameAndGUIDRequest)
     ns0:removeGeoLocationFilterResponse(ns0:StandardResponse)
     ns0:removeGeoLocationPolicy(ns0:NameAndGUIDRequest)
     ns0:removeGeoLocationPolicyResponse(ns0:StandardResponse)
     ns0:removeGeoLocationResponse(ns0:StandardResponse)
     ns0:removeH323Gateway(ns0:NameAndGUIDRequest)
     ns0:removeH323GatewayResponse(ns0:StandardResponse)
     ns0:removeH323Phone(ns0:NameAndGUIDRequest)
     ns0:removeH323PhoneResponse(ns0:StandardResponse)
     ns0:removeH323Trunk(ns0:NameAndGUIDRequest)
     ns0:removeH323TrunkResponse(ns0:StandardResponse)
     ns0:removeHandoffConfiguration(ns0:RemoveHandoffConfigurationReq)
     ns0:removeHandoffConfigurationResponse(ns0:StandardResponse)
     ns0:removeHuntList(ns0:NameAndGUIDRequest)
     ns0:removeHuntListResponse(ns0:StandardResponse)
     ns0:removeHuntPilot(ns0:RemoveHuntPilotReq)
     ns0:removeHuntPilotResponse(ns0:StandardResponse)
     ns0:removeImeClient(ns0:NameAndGUIDRequest)
     ns0:removeImeClientResponse(ns0:StandardResponse)
     ns0:removeImeE164Transformation(ns0:NameAndGUIDRequest)
     ns0:removeImeE164TransformationResponse(ns0:StandardResponse)
     ns0:removeImeEnrolledPattern(ns0:RemoveImeEnrolledPatternReq)
     ns0:removeImeEnrolledPatternGroup(ns0:NameAndGUIDRequest)
     ns0:removeImeEnrolledPatternGroupResponse(ns0:StandardResponse)
     ns0:removeImeEnrolledPatternResponse(ns0:StandardResponse)
     ns0:removeImeExclusionNumber(ns0:RemoveImeExclusionNumberReq)
     ns0:removeImeExclusionNumberGroup(ns0:NameAndGUIDRequest)
     ns0:removeImeExclusionNumberGroupResponse(ns0:StandardResponse)
     ns0:removeImeExclusionNumberResponse(ns0:StandardResponse)
     ns0:removeImeFirewall(ns0:NameAndGUIDRequest)
     ns0:removeImeFirewallResponse(ns0:StandardResponse)
     ns0:removeImeLearnedRoutes(ns0:RemoveImeLearnedRoutesReq)
     ns0:removeImeLearnedRoutesResponse(ns0:StandardResponse)
     ns0:removeImeRouteFilterElement(ns0:NameAndGUIDRequest)
     ns0:removeImeRouteFilterElementResponse(ns0:StandardResponse)
     ns0:removeImeRouteFilterGroup(ns0:NameAndGUIDRequest)
     ns0:removeImeRouteFilterGroupResponse(ns0:StandardResponse)
     ns0:removeImeServer(ns0:NameAndGUIDRequest)
     ns0:removeImeServerResponse(ns0:StandardResponse)
     ns0:removeImportedDirectoryUriCatalogs(ns0:NameAndGUIDRequest)
     ns0:removeImportedDirectoryUriCatalogsResponse(ns0:StandardResponse)
     ns0:removeIpPhoneServices(ns0:RemoveIpPhoneServicesReq)
     ns0:removeIpPhoneServicesResponse(ns0:StandardResponse)
     ns0:removeIvrUserLocale(ns0:RemoveIvrUserLocaleReq)
     ns0:removeIvrUserLocaleResponse(ns0:StandardResponse)
     ns0:removeLbmGroup(ns0:NameAndGUIDRequest)
     ns0:removeLbmGroupResponse(ns0:StandardResponse)
     ns0:removeLbmHubGroup(ns0:NameAndGUIDRequest)
     ns0:removeLbmHubGroupResponse(ns0:StandardResponse)
     ns0:removeLdapDirectory(ns0:NameAndGUIDRequest)
     ns0:removeLdapDirectoryResponse(ns0:StandardResponse)
     ns0:removeLdapFilter(ns0:NameAndGUIDRequest)
     ns0:removeLdapFilterResponse(ns0:StandardResponse)
     ns0:removeLdapSyncCustomField(ns0:RemoveLdapSyncCustomFieldReq)
     ns0:removeLdapSyncCustomFieldResponse(ns0:StandardResponse)
     ns0:removeLine(ns0:RemoveLineReq)
     ns0:removeLineGroup(ns0:NameAndGUIDRequest)
     ns0:removeLineGroupResponse(ns0:StandardResponse)
     ns0:removeLineResponse(ns0:StandardResponse)
     ns0:removeLocation(ns0:NameAndGUIDRequest)
     ns0:removeLocationResponse(ns0:StandardResponse)
     ns0:removeMediaResourceGroup(ns0:NameAndGUIDRequest)
     ns0:removeMediaResourceGroupResponse(ns0:StandardResponse)
     ns0:removeMediaResourceList(ns0:NameAndGUIDRequest)
     ns0:removeMediaResourceListResponse(ns0:StandardResponse)
     ns0:removeMeetMe(ns0:RemoveMeetMeReq)
     ns0:removeMeetMeResponse(ns0:StandardResponse)
     ns0:removeMessageWaiting(ns0:RemoveMessageWaitingReq)
     ns0:removeMessageWaitingResponse(ns0:StandardResponse)
     ns0:removeMlppDomain(ns0:RemoveMlppDomainReq)
     ns0:removeMlppDomainResponse(ns0:StandardResponse)
     ns0:removeMobileVoiceAccess(ns0:RemoveMobileVoiceAccessReq)
     ns0:removeMobileVoiceAccessResponse(ns0:StandardResponse)
     ns0:removeMobilityProfile(ns0:NameAndGUIDRequest)
     ns0:removeMobilityProfileResponse(ns0:StandardResponse)
     ns0:removeMohAudioSource(ns0:RemoveMohAudioSourceReq)
     ns0:removeMohAudioSourceResponse(ns0:StandardResponse)
     ns0:removeMtp(ns0:NameAndGUIDRequest)
     ns0:removeMtpResponse(ns0:StandardResponse)
     ns0:removePhone(ns0:NameAndGUIDRequest)
     ns0:removePhoneButtonTemplate(ns0:NameAndGUIDRequest)
     ns0:removePhoneButtonTemplateResponse(ns0:StandardResponse)
     ns0:removePhoneNtp(ns0:RemovePhoneNtpReq)
     ns0:removePhoneNtpResponse(ns0:StandardResponse)
     ns0:removePhoneResponse(ns0:StandardResponse)
     ns0:removePhoneSecurityProfile(ns0:NameAndGUIDRequest)
     ns0:removePhoneSecurityProfileResponse(ns0:StandardResponse)
     ns0:removePhysicalLocation(ns0:NameAndGUIDRequest)
     ns0:removePhysicalLocationResponse(ns0:StandardResponse)
     ns0:removePresenceGroup(ns0:NameAndGUIDRequest)
     ns0:removePresenceGroupResponse(ns0:StandardResponse)
     ns0:removeProcessNode(ns0:NameAndGUIDRequest)
     ns0:removeProcessNodeResponse(ns0:StandardResponse)
     ns0:removeRecordingProfile(ns0:NameAndGUIDRequest)
     ns0:removeRecordingProfileResponse(ns0:StandardResponse)
     ns0:removeRegion(ns0:NameAndGUIDRequest)
     ns0:removeRegionResponse(ns0:StandardResponse)
     ns0:removeRemoteCluster(ns0:RemoveRemoteClusterReq)
     ns0:removeRemoteClusterResponse(ns0:StandardResponse)
     ns0:removeRemoteDestination(ns0:RemoveRemoteDestinationReq)
     ns0:removeRemoteDestinationProfile(ns0:NameAndGUIDRequest)
     ns0:removeRemoteDestinationProfileResponse(ns0:StandardResponse)
     ns0:removeRemoteDestinationResponse(ns0:StandardResponse)
     ns0:removeResourcePriorityNamespace(ns0:RemoveResourcePriorityNamespaceReq)
     ns0:removeResourcePriorityNamespaceList(ns0:NameAndGUIDRequest)
     ns0:removeResourcePriorityNamespaceListResponse(ns0:StandardResponse)
     ns0:removeResourcePriorityNamespaceResponse(ns0:StandardResponse)
     ns0:removeRouteFilter(ns0:NameAndGUIDRequest)
     ns0:removeRouteFilterResponse(ns0:StandardResponse)
     ns0:removeRouteGroup(ns0:NameAndGUIDRequest)
     ns0:removeRouteGroupResponse(ns0:StandardResponse)
     ns0:removeRouteList(ns0:NameAndGUIDRequest)
     ns0:removeRouteListResponse(ns0:StandardResponse)
     ns0:removeRoutePartition(ns0:NameAndGUIDRequest)
     ns0:removeRoutePartitionResponse(ns0:StandardResponse)
     ns0:removeRoutePattern(ns0:RemoveRoutePatternReq)
     ns0:removeRoutePatternResponse(ns0:StandardResponse)
     ns0:removeSIPNormalizationScript(ns0:NameAndGUIDRequest)
     ns0:removeSIPNormalizationScriptResponse(ns0:StandardResponse)
     ns0:removeSNMPCommunityString(ns0:RemoveSNMPCommunityStringReq)
     ns0:removeSNMPCommunityStringResponse(ns0:RemoveSNMPCommunityStringRes)
     ns0:removeSNMPUser(ns0:RemoveSNMPUserReq)
     ns0:removeSNMPUserResponse(ns0:RemoveSNMPUserRes)
     ns0:removeSafCcdPurgeBlockLearnedRoutes(ns0:RemoveSafCcdPurgeBlockLearnedRoutesReq)
     ns0:removeSafCcdPurgeBlockLearnedRoutesResponse(ns0:StandardResponse)
     ns0:removeSafForwarder(ns0:NameAndGUIDRequest)
     ns0:removeSafForwarderResponse(ns0:StandardResponse)
     ns0:removeSafSecurityProfile(ns0:NameAndGUIDRequest)
     ns0:removeSafSecurityProfileResponse(ns0:StandardResponse)
     ns0:removeServiceProfile(ns0:NameAndGUIDRequest)
     ns0:removeServiceProfileResponse(ns0:StandardResponse)
     ns0:removeSipDialRules(ns0:NameAndGUIDRequest)
     ns0:removeSipDialRulesResponse(ns0:StandardResponse)
     ns0:removeSipProfile(ns0:NameAndGUIDRequest)
     ns0:removeSipProfileResponse(ns0:StandardResponse)
     ns0:removeSipRealm(ns0:RemoveSipRealmReq)
     ns0:removeSipRealmResponse(ns0:StandardResponse)
     ns0:removeSipRoutePattern(ns0:RemoveSipRoutePatternReq)
     ns0:removeSipRoutePatternResponse(ns0:StandardResponse)
     ns0:removeSipTrunk(ns0:NameAndGUIDRequest)
     ns0:removeSipTrunkResponse(ns0:StandardResponse)
     ns0:removeSipTrunkSecurityProfile(ns0:NameAndGUIDRequest)
     ns0:removeSipTrunkSecurityProfileResponse(ns0:StandardResponse)
     ns0:removeSoftKeyTemplate(ns0:NameAndGUIDRequest)
     ns0:removeSoftKeyTemplateResponse(ns0:StandardResponse)
     ns0:removeSrst(ns0:NameAndGUIDRequest)
     ns0:removeSrstResponse(ns0:StandardResponse)
     ns0:removeTimePeriod(ns0:NameAndGUIDRequest)
     ns0:removeTimePeriodResponse(ns0:StandardResponse)
     ns0:removeTimeSchedule(ns0:NameAndGUIDRequest)
     ns0:removeTimeScheduleResponse(ns0:StandardResponse)
     ns0:removeTodAccess(ns0:NameAndGUIDRequest)
     ns0:removeTodAccessResponse(ns0:StandardResponse)
     ns0:removeTransPattern(ns0:RemoveTransPatternReq)
     ns0:removeTransPatternResponse(ns0:StandardResponse)
     ns0:removeTranscoder(ns0:NameAndGUIDRequest)
     ns0:removeTranscoderResponse(ns0:StandardResponse)
     ns0:removeTransformationProfile(ns0:NameAndGUIDRequest)
     ns0:removeTransformationProfileResponse(ns0:StandardResponse)
     ns0:removeUcService(ns0:NameAndGUIDRequest)
     ns0:removeUcServiceResponse(ns0:StandardResponse)
     ns0:removeUnitsToGateway(ns0:RemoveUnitsToGatewayReq)
     ns0:removeUnitsToGatewayResponse(ns0:StandardResponse)
     ns0:removeUser(ns0:RemoveUserReq)
     ns0:removeUserGroup(ns0:NameAndGUIDRequest)
     ns0:removeUserGroupResponse(ns0:StandardResponse)
     ns0:removeUserResponse(ns0:StandardResponse)
     ns0:removeVg224(ns0:RemoveVg224Req)
     ns0:removeVg224Response(ns0:StandardResponse)
     ns0:removeVoiceMailPilot(ns0:RemoveVoiceMailPilotReq)
     ns0:removeVoiceMailPilotResponse(ns0:StandardResponse)
     ns0:removeVoiceMailPort(ns0:NameAndGUIDRequest)
     ns0:removeVoiceMailPortResponse(ns0:StandardResponse)
     ns0:removeVoiceMailProfile(ns0:NameAndGUIDRequest)
     ns0:removeVoiceMailProfileResponse(ns0:StandardResponse)
     ns0:removeVpnGateway(ns0:NameAndGUIDRequest)
     ns0:removeVpnGatewayResponse(ns0:StandardResponse)
     ns0:removeVpnGroup(ns0:NameAndGUIDRequest)
     ns0:removeVpnGroupResponse(ns0:StandardResponse)
     ns0:removeVpnProfile(ns0:NameAndGUIDRequest)
     ns0:removeVpnProfileResponse(ns0:StandardResponse)
     ns0:updateAarGroup(ns0:UpdateAarGroupReq)
     ns0:updateAarGroupMatrix(ns0:UpdateAarGroupMatrixReq)
     ns0:updateAarGroupMatrixResponse(ns0:StandardResponse)
     ns0:updateAarGroupResponse(ns0:StandardResponse)
     ns0:updateAnnouncement(ns0:UpdateAnnouncementReq)
     ns0:updateAnnouncementResponse(ns0:StandardResponse)
     ns0:updateAnnunciator(ns0:UpdateAnnunciatorReq)
     ns0:updateAnnunciatorResponse(ns0:StandardResponse)
     ns0:updateAppServerInfo(ns0:UpdateAppServerInfoReq)
     ns0:updateAppServerInfoResponse(ns0:StandardResponse)
     ns0:updateAppUser(ns0:UpdateAppUserReq)
     ns0:updateAppUserResponse(ns0:StandardResponse)
     ns0:updateApplicationDialRules(ns0:UpdateApplicationDialRulesReq)
     ns0:updateApplicationDialRulesResponse(ns0:StandardResponse)
     ns0:updateApplicationServer(ns0:UpdateApplicationServerReq)
     ns0:updateApplicationServerResponse(ns0:StandardResponse)
     ns0:updateApplicationUserCapfProfile(ns0:UpdateApplicationUserCapfProfileReq)
     ns0:updateApplicationUserCapfProfileResponse(ns0:StandardResponse)
     ns0:updateAudioCodecPreferenceList(ns0:UpdateAudioCodecPreferenceListReq)
     ns0:updateAudioCodecPreferenceListResponse(ns0:StandardResponse)
     ns0:updateBillingServer(ns0:UpdateBillingServerReq)
     ns0:updateBillingServerResponse(ns0:StandardResponse)
     ns0:updateCallManager(ns0:UpdateCallManagerReq)
     ns0:updateCallManagerGroup(ns0:UpdateCallManagerGroupReq)
     ns0:updateCallManagerGroupResponse(ns0:StandardResponse)
     ns0:updateCallManagerResponse(ns0:StandardResponse)
     ns0:updateCallPark(ns0:UpdateCallParkReq)
     ns0:updateCallParkResponse(ns0:StandardResponse)
     ns0:updateCallPickupGroup(ns0:UpdateCallPickupGroupReq)
     ns0:updateCallPickupGroupResponse(ns0:StandardResponse)
     ns0:updateCalledPartyTransformationPattern(ns0:UpdateCalledPartyTransformationPatternReq)
     ns0:updateCalledPartyTransformationPatternResponse(ns0:StandardResponse)
     ns0:updateCallerFilterList(ns0:UpdateCallerFilterListReq)
     ns0:updateCallerFilterListResponse(ns0:StandardResponse)
     ns0:updateCallingPartyTransformationPattern(ns0:UpdateCallingPartyTransformationPatternReq)
     ns0:updateCallingPartyTransformationPatternResponse(ns0:StandardResponse)
     ns0:updateCcdAdvertisingService(ns0:UpdateCcdAdvertisingServiceReq)
     ns0:updateCcdAdvertisingServiceResponse(ns0:StandardResponse)
     ns0:updateCcdHostedDN(ns0:UpdateCcdHostedDNReq)
     ns0:updateCcdHostedDNGroup(ns0:UpdateCcdHostedDNGroupReq)
     ns0:updateCcdHostedDNGroupResponse(ns0:StandardResponse)
     ns0:updateCcdHostedDNResponse(ns0:StandardResponse)
     ns0:updateCcdRequestingService(ns0:UpdateCcdRequestingServiceReq)
     ns0:updateCcdRequestingServiceResponse(ns0:StandardResponse)
     ns0:updateCiscoCatalyst600024PortFXSGateway(ns0:UpdateCiscoCatalyst600024PortFXSGatewayReq)
     ns0:updateCiscoCatalyst600024PortFXSGatewayResponse(ns0:StandardResponse)
     ns0:updateCiscoCatalyst6000E1VoIPGateway(ns0:UpdateCiscoCatalyst6000E1VoIPGatewayReq)
     ns0:updateCiscoCatalyst6000E1VoIPGatewayResponse(ns0:StandardResponse)
     ns0:updateCiscoCatalyst6000T1VoIPGatewayPri(ns0:UpdateCiscoCatalyst6000T1VoIPGatewayPriReq)
     ns0:updateCiscoCatalyst6000T1VoIPGatewayPriResponse(ns0:StandardResponse)
     ns0:updateCiscoCatalyst6000T1VoIPGatewayT1(ns0:UpdateCiscoCatalyst6000T1VoIPGatewayT1Req)
     ns0:updateCiscoCatalyst6000T1VoIPGatewayT1Response(ns0:StandardResponse)
     ns0:updateCmcInfo(ns0:UpdateCmcInfoReq)
     ns0:updateCmcInfoResponse(ns0:StandardResponse)
     ns0:updateCommonDeviceConfig(ns0:UpdateCommonDeviceConfigReq)
     ns0:updateCommonDeviceConfigResponse(ns0:StandardResponse)
     ns0:updateCommonPhoneConfig(ns0:UpdateCommonPhoneConfigReq)
     ns0:updateCommonPhoneConfigResponse(ns0:StandardResponse)
     ns0:updateConferenceBridge(ns0:UpdateConferenceBridgeReq)
     ns0:updateConferenceBridgeResponse(ns0:StandardResponse)
     ns0:updateCredentialPolicy(ns0:UpdateCredentialPolicyReq)
     ns0:updateCredentialPolicyResponse(ns0:StandardResponse)
     ns0:updateCss(ns0:UpdateCssReq)
     ns0:updateCssResponse(ns0:StandardResponse)
     ns0:updateCtiRoutePoint(ns0:UpdateCtiRoutePointReq)
     ns0:updateCtiRoutePointResponse(ns0:StandardResponse)
     ns0:updateCumaServerSecurityProfile(ns0:UpdateCumaServerSecurityProfileReq)
     ns0:updateCumaServerSecurityProfileResponse(ns0:StandardResponse)
     ns0:updateCustomUserField(ns0:UpdateCustomUserFieldReq)
     ns0:updateCustomUserFieldResponse(ns0:StandardResponse)
     ns0:updateDateTimeGroup(ns0:UpdateDateTimeGroupReq)
     ns0:updateDateTimeGroupResponse(ns0:StandardResponse)
     ns0:updateDefaultDeviceProfile(ns0:UpdateDefaultDeviceProfileReq)
     ns0:updateDefaultDeviceProfileResponse(ns0:StandardResponse)
     ns0:updateDeviceMobility(ns0:UpdateDeviceMobilityReq)
     ns0:updateDeviceMobilityGroup(ns0:UpdateDeviceMobilityGroupReq)
     ns0:updateDeviceMobilityGroupResponse(ns0:StandardResponse)
     ns0:updateDeviceMobilityResponse(ns0:StandardResponse)
     ns0:updateDevicePool(ns0:UpdateDevicePoolReq)
     ns0:updateDevicePoolResponse(ns0:StandardResponse)
     ns0:updateDeviceProfile(ns0:UpdateDeviceProfileReq)
     ns0:updateDeviceProfileResponse(ns0:StandardResponse)
     ns0:updateDhcpServer(ns0:UpdateDhcpServerReq)
     ns0:updateDhcpServerResponse(ns0:StandardResponse)
     ns0:updateDhcpSubnet(ns0:UpdateDhcpSubnetReq)
     ns0:updateDhcpSubnetResponse(ns0:StandardResponse)
     ns0:updateDirectedCallPark(ns0:UpdateDirectedCallParkReq)
     ns0:updateDirectedCallParkResponse(ns0:StandardResponse)
     ns0:updateDirectoryLookupDialRules(ns0:UpdateDirectoryLookupDialRulesReq)
     ns0:updateDirectoryLookupDialRulesResponse(ns0:StandardResponse)
     ns0:updateEmccFeatureConfig(ns0:UpdateEmccFeatureConfigReq)
     ns0:updateEmccFeatureConfigResponse(ns0:StandardResponse)
     ns0:updateEndUserCapfProfile(ns0:UpdateEndUserCapfProfileReq)
     ns0:updateEndUserCapfProfileResponse(ns0:StandardResponse)
     ns0:updateEnterpriseFeatureAccessConfiguration(ns0:UpdateEnterpriseFeatureAccessConfigurationReq)
     ns0:updateEnterpriseFeatureAccessConfigurationResponse(ns0:StandardResponse)
     ns0:updateEnterprisePhoneConfig(ns0:UpdateEnterprisePhoneConfigReq)
     ns0:updateEnterprisePhoneConfigResponse(ns0:StandardResponse)
     ns0:updateExternalCallControlProfile(ns0:UpdateExternalCallControlProfileReq)
     ns0:updateExternalCallControlProfileResponse(ns0:StandardResponse)
     ns0:updateFacInfo(ns0:UpdateFacInfoReq)
     ns0:updateFacInfoResponse(ns0:StandardResponse)
     ns0:updateFallbackFeatureConfig(ns0:UpdateFallbackFeatureConfigReq)
     ns0:updateFallbackFeatureConfigResponse(ns0:StandardResponse)
     ns0:updateFallbackProfile(ns0:UpdateFallbackProfileReq)
     ns0:updateFallbackProfileResponse(ns0:StandardResponse)
     ns0:updateFeatureControlPolicy(ns0:UpdateFeatureControlPolicyReq)
     ns0:updateFeatureControlPolicyResponse(ns0:StandardResponse)
     ns0:updateFixedMohAudioSource(ns0:UpdateFixedMohAudioSourceReq)
     ns0:updateFixedMohAudioSourceResponse(ns0:StandardResponse)
     ns0:updateGatekeeper(ns0:UpdateGatekeeperReq)
     ns0:updateGatekeeperResponse(ns0:StandardResponse)
     ns0:updateGateway(ns0:UpdateGatewayReq)
     ns0:updateGatewayEndpointAnalogAccess(ns0:UpdateGatewayEndpointAnalogAccessReq)
     ns0:updateGatewayEndpointAnalogAccessResponse(ns0:StandardResponse)
     ns0:updateGatewayEndpointDigitalAccessBri(ns0:UpdateGatewayEndpointDigitalAccessBriReq)
     ns0:updateGatewayEndpointDigitalAccessBriResponse(ns0:StandardResponse)
     ns0:updateGatewayEndpointDigitalAccessPri(ns0:UpdateGatewayEndpointDigitalAccessPriReq)
     ns0:updateGatewayEndpointDigitalAccessPriResponse(ns0:StandardResponse)
     ns0:updateGatewayEndpointDigitalAccessT1(ns0:UpdateGatewayEndpointDigitalAccessT1Req)
     ns0:updateGatewayEndpointDigitalAccessT1Response(ns0:StandardResponse)
     ns0:updateGatewayResponse(ns0:StandardResponse)
     ns0:updateGatewaySccpEndpoints(ns0:UpdateGatewaySccpEndpointsReq)
     ns0:updateGatewaySccpEndpointsResponse(ns0:StandardResponse)
     ns0:updateGeoLocation(ns0:UpdateGeoLocationReq)
     ns0:updateGeoLocationFilter(ns0:UpdateGeoLocationFilterReq)
     ns0:updateGeoLocationFilterResponse(ns0:StandardResponse)
     ns0:updateGeoLocationPolicy(ns0:UpdateGeoLocationPolicyReq)
     ns0:updateGeoLocationPolicyResponse(ns0:StandardResponse)
     ns0:updateGeoLocationResponse(ns0:StandardResponse)
     ns0:updateH323Gateway(ns0:UpdateH323GatewayReq)
     ns0:updateH323GatewayResponse(ns0:StandardResponse)
     ns0:updateH323Phone(ns0:UpdateH323PhoneReq)
     ns0:updateH323PhoneResponse(ns0:StandardResponse)
     ns0:updateH323Trunk(ns0:UpdateH323TrunkReq)
     ns0:updateH323TrunkResponse(ns0:StandardResponse)
     ns0:updateHandoffConfiguration(ns0:UpdateHandoffConfigurationReq)
     ns0:updateHandoffConfigurationResponse(ns0:StandardResponse)
     ns0:updateHuntList(ns0:UpdateHuntListReq)
     ns0:updateHuntListResponse(ns0:StandardResponse)
     ns0:updateHuntPilot(ns0:UpdateHuntPilotReq)
     ns0:updateHuntPilotResponse(ns0:StandardResponse)
     ns0:updateIlsConfig(ns0:UpdateIlsConfigReq)
     ns0:updateIlsConfigResponse(ns0:StandardResponse)
     ns0:updateImeClient(ns0:UpdateImeClientReq)
     ns0:updateImeClientResponse(ns0:StandardResponse)
     ns0:updateImeE164Transformation(ns0:UpdateImeE164TransformationReq)
     ns0:updateImeE164TransformationResponse(ns0:StandardResponse)
     ns0:updateImeEnrolledPattern(ns0:UpdateImeEnrolledPatternReq)
     ns0:updateImeEnrolledPatternGroup(ns0:UpdateImeEnrolledPatternGroupReq)
     ns0:updateImeEnrolledPatternGroupResponse(ns0:StandardResponse)
     ns0:updateImeEnrolledPatternResponse(ns0:StandardResponse)
     ns0:updateImeExclusionNumber(ns0:UpdateImeExclusionNumberReq)
     ns0:updateImeExclusionNumberGroup(ns0:UpdateImeExclusionNumberGroupReq)
     ns0:updateImeExclusionNumberGroupResponse(ns0:StandardResponse)
     ns0:updateImeExclusionNumberResponse(ns0:StandardResponse)
     ns0:updateImeFeatureConfig(ns0:UpdateImeFeatureConfigReq)
     ns0:updateImeFeatureConfigResponse(ns0:StandardResponse)
     ns0:updateImeFirewall(ns0:UpdateImeFirewallReq)
     ns0:updateImeFirewallResponse(ns0:StandardResponse)
     ns0:updateImeLearnedRoutes(ns0:UpdateImeLearnedRoutesReq)
     ns0:updateImeLearnedRoutesResponse(ns0:StandardResponse)
     ns0:updateImeRouteFilterElement(ns0:UpdateImeRouteFilterElementReq)
     ns0:updateImeRouteFilterElementResponse(ns0:StandardResponse)
     ns0:updateImeRouteFilterGroup(ns0:UpdateImeRouteFilterGroupReq)
     ns0:updateImeRouteFilterGroupResponse(ns0:StandardResponse)
     ns0:updateImeServer(ns0:UpdateImeServerReq)
     ns0:updateImeServerResponse(ns0:StandardResponse)
     ns0:updateImportedDirectoryUriCatalogs(ns0:UpdateImportedDirectoryUriCatalogsReq)
     ns0:updateImportedDirectoryUriCatalogsResponse(ns0:StandardResponse)
     ns0:updateInterClusterDirectoryUri(ns0:UpdateInterClusterDirectoryUriReq)
     ns0:updateInterClusterDirectoryUriResponse(ns0:StandardResponse)
     ns0:updateInterClusterServiceProfile(ns0:UpdateInterClusterServiceProfileReq)
     ns0:updateInterClusterServiceProfileResponse(ns0:StandardResponse)
     ns0:updateIpPhoneServices(ns0:UpdateIpPhoneServicesReq)
     ns0:updateIpPhoneServicesResponse(ns0:StandardResponse)
     ns0:updateIvrUserLocale(ns0:UpdateIvrUserLocaleReq)
     ns0:updateIvrUserLocaleResponse(ns0:StandardResponse)
     ns0:updateLbmGroup(ns0:UpdateLbmGroupReq)
     ns0:updateLbmGroupResponse(ns0:StandardResponse)
     ns0:updateLbmHubGroup(ns0:UpdateLbmHubGroupReq)
     ns0:updateLbmHubGroupResponse(ns0:StandardResponse)
     ns0:updateLdapAuthentication(ns0:UpdateLdapAuthenticationReq)
     ns0:updateLdapAuthenticationResponse(ns0:StandardResponse)
     ns0:updateLdapDirectory(ns0:UpdateLdapDirectoryReq)
     ns0:updateLdapDirectoryResponse(ns0:StandardResponse)
     ns0:updateLdapFilter(ns0:UpdateLdapFilterReq)
     ns0:updateLdapFilterResponse(ns0:StandardResponse)
     ns0:updateLdapSyncCustomField(ns0:UpdateLdapSyncCustomFieldReq)
     ns0:updateLdapSyncCustomFieldResponse(ns0:StandardResponse)
     ns0:updateLdapSystem(ns0:UpdateLdapSystemReq)
     ns0:updateLdapSystemResponse(ns0:StandardResponse)
     ns0:updateLicenseCapabilities(ns0:UpdateLicenseCapabilitiesReq)
     ns0:updateLicenseCapabilitiesResponse(ns0:StandardResponse)
     ns0:updateLine(ns0:UpdateLineReq)
     ns0:updateLineGroup(ns0:UpdateLineGroupReq)
     ns0:updateLineGroupResponse(ns0:StandardResponse)
     ns0:updateLineResponse(ns0:StandardResponse)
     ns0:updateLocation(ns0:UpdateLocationReq)
     ns0:updateLocationResponse(ns0:StandardResponse)
     ns0:updateMediaResourceGroup(ns0:UpdateMediaResourceGroupReq)
     ns0:updateMediaResourceGroupResponse(ns0:StandardResponse)
     ns0:updateMediaResourceList(ns0:UpdateMediaResourceListReq)
     ns0:updateMediaResourceListResponse(ns0:StandardResponse)
     ns0:updateMeetMe(ns0:UpdateMeetMeReq)
     ns0:updateMeetMeResponse(ns0:StandardResponse)
     ns0:updateMessageWaiting(ns0:UpdateMessageWaitingReq)
     ns0:updateMessageWaitingResponse(ns0:StandardResponse)
     ns0:updateMlppDomain(ns0:UpdateMlppDomainReq)
     ns0:updateMlppDomainResponse(ns0:StandardResponse)
     ns0:updateMobileVoiceAccess(ns0:UpdateMobileVoiceAccessReq)
     ns0:updateMobileVoiceAccessResponse(ns0:StandardResponse)
     ns0:updateMobility(ns0:UpdateMobilityReq)
     ns0:updateMobilityProfile(ns0:UpdateMobilityProfileReq)
     ns0:updateMobilityProfileResponse(ns0:StandardResponse)
     ns0:updateMobilityResponse(ns0:StandardResponse)
     ns0:updateMohAudioSource(ns0:UpdateMohAudioSourceReq)
     ns0:updateMohAudioSourceResponse(ns0:StandardResponse)
     ns0:updateMohServer(ns0:UpdateMohServerReq)
     ns0:updateMohServerResponse(ns0:StandardResponse)
     ns0:updateMtp(ns0:UpdateMtpReq)
     ns0:updateMtpResponse(ns0:StandardResponse)
     ns0:updatePhone(ns0:UpdatePhoneReq)
     ns0:updatePhoneButtonTemplate(ns0:UpdatePhoneButtonTemplateReq)
     ns0:updatePhoneButtonTemplateResponse(ns0:StandardResponse)
     ns0:updatePhoneNtp(ns0:UpdatePhoneNtpReq)
     ns0:updatePhoneNtpResponse(ns0:StandardResponse)
     ns0:updatePhoneResponse(ns0:StandardResponse)
     ns0:updatePhoneSecurityProfile(ns0:UpdatePhoneSecurityProfileReq)
     ns0:updatePhoneSecurityProfileResponse(ns0:StandardResponse)
     ns0:updatePhysicalLocation(ns0:UpdatePhysicalLocationReq)
     ns0:updatePhysicalLocationResponse(ns0:StandardResponse)
     ns0:updatePresenceGroup(ns0:UpdatePresenceGroupReq)
     ns0:updatePresenceGroupResponse(ns0:StandardResponse)
     ns0:updateProcessNode(ns0:UpdateProcessNodeReq)
     ns0:updateProcessNodeResponse(ns0:StandardResponse)
     ns0:updateProcessNodeService(ns0:UpdateProcessNodeServiceReq)
     ns0:updateProcessNodeServiceResponse(ns0:StandardResponse)
     ns0:updateRecordingProfile(ns0:UpdateRecordingProfileReq)
     ns0:updateRecordingProfileResponse(ns0:StandardResponse)
     ns0:updateRegion(ns0:UpdateRegionReq)
     ns0:updateRegionMatrix(ns0:UpdateRegionMatrixReq)
     ns0:updateRegionMatrixResponse(ns0:StandardResponse)
     ns0:updateRegionResponse(ns0:StandardResponse)
     ns0:updateRemoteCluster(ns0:UpdateRemoteClusterReq)
     ns0:updateRemoteClusterResponse(ns0:StandardResponse)
     ns0:updateRemoteDestination(ns0:UpdateRemoteDestinationReq)
     ns0:updateRemoteDestinationProfile(ns0:UpdateRemoteDestinationProfileReq)
     ns0:updateRemoteDestinationProfileResponse(ns0:StandardResponse)
     ns0:updateRemoteDestinationResponse(ns0:StandardResponse)
     ns0:updateResourcePriorityNamespace(ns0:UpdateResourcePriorityNamespaceReq)
     ns0:updateResourcePriorityNamespaceList(ns0:UpdateResourcePriorityNamespaceListReq)
     ns0:updateResourcePriorityNamespaceListResponse(ns0:StandardResponse)
     ns0:updateResourcePriorityNamespaceResponse(ns0:StandardResponse)
     ns0:updateRouteFilter(ns0:UpdateRouteFilterReq)
     ns0:updateRouteFilterResponse(ns0:StandardResponse)
     ns0:updateRouteGroup(ns0:UpdateRouteGroupReq)
     ns0:updateRouteGroupResponse(ns0:StandardResponse)
     ns0:updateRouteList(ns0:UpdateRouteListReq)
     ns0:updateRouteListResponse(ns0:StandardResponse)
     ns0:updateRoutePartition(ns0:UpdateRoutePartitionReq)
     ns0:updateRoutePartitionResponse(ns0:StandardResponse)
     ns0:updateRoutePattern(ns0:UpdateRoutePatternReq)
     ns0:updateRoutePatternResponse(ns0:StandardResponse)
     ns0:updateSIPNormalizationScript(ns0:UpdateSIPNormalizationScriptReq)
     ns0:updateSIPNormalizationScriptResponse(ns0:StandardResponse)
     ns0:updateSNMPCommunityString(ns0:UpdateSNMPCommunityStringReq)
     ns0:updateSNMPCommunityStringResponse(ns0:UpdateSNMPCommunityStringRes)
     ns0:updateSNMPMIB2List(ns0:UpdateSNMPMIB2ListReq)
     ns0:updateSNMPMIB2ListResponse(ns0:UpdateSNMPMIB2ListRes)
     ns0:updateSNMPUser(ns0:UpdateSNMPUserReq)
     ns0:updateSNMPUserResponse(ns0:UpdateSNMPUserRes)
     ns0:updateSafCcdPurgeBlockLearnedRoutes(ns0:UpdateSafCcdPurgeBlockLearnedRoutesReq)
     ns0:updateSafCcdPurgeBlockLearnedRoutesResponse(ns0:StandardResponse)
     ns0:updateSafForwarder(ns0:UpdateSafForwarderReq)
     ns0:updateSafForwarderResponse(ns0:StandardResponse)
     ns0:updateSafSecurityProfile(ns0:UpdateSafSecurityProfileReq)
     ns0:updateSafSecurityProfileResponse(ns0:StandardResponse)
     ns0:updateServiceParameter(ns0:UpdateServiceParameterReq)
     ns0:updateServiceParameterResponse(ns0:StandardResponse)
     ns0:updateServiceProfile(ns0:UpdateServiceProfileReq)
     ns0:updateServiceProfileResponse(ns0:StandardResponse)
     ns0:updateSipDialRules(ns0:UpdateSipDialRulesReq)
     ns0:updateSipDialRulesResponse(ns0:StandardResponse)
     ns0:updateSipProfile(ns0:UpdateSipProfileReq)
     ns0:updateSipProfileResponse(ns0:StandardResponse)
     ns0:updateSipRealm(ns0:UpdateSipRealmReq)
     ns0:updateSipRealmResponse(ns0:StandardResponse)
     ns0:updateSipRoutePattern(ns0:UpdateSipRoutePatternReq)
     ns0:updateSipRoutePatternResponse(ns0:StandardResponse)
     ns0:updateSipTrunk(ns0:UpdateSipTrunkReq)
     ns0:updateSipTrunkResponse(ns0:StandardResponse)
     ns0:updateSipTrunkSecurityProfile(ns0:UpdateSipTrunkSecurityProfileReq)
     ns0:updateSipTrunkSecurityProfileResponse(ns0:StandardResponse)
     ns0:updateSoftKeySet(ns0:UpdateSoftKeySetReq)
     ns0:updateSoftKeySetResponse(ns0:StandardResponse)
     ns0:updateSoftKeyTemplate(ns0:UpdateSoftKeyTemplateReq)
     ns0:updateSoftKeyTemplateResponse(ns0:StandardResponse)
     ns0:updateSrst(ns0:UpdateSrstReq)
     ns0:updateSrstResponse(ns0:StandardResponse)
     ns0:updateSyslogConfiguration(ns0:UpdateSyslogConfigurationReq)
     ns0:updateSyslogConfigurationResponse(ns0:UpdateSyslogConfigurationRes)
     ns0:updateTimePeriod(ns0:UpdateTimePeriodReq)
     ns0:updateTimePeriodResponse(ns0:StandardResponse)
     ns0:updateTimeSchedule(ns0:UpdateTimeScheduleReq)
     ns0:updateTimeScheduleResponse(ns0:StandardResponse)
     ns0:updateTodAccess(ns0:UpdateTodAccessReq)
     ns0:updateTodAccessResponse(ns0:StandardResponse)
     ns0:updateTransPattern(ns0:UpdateTransPatternReq)
     ns0:updateTransPatternResponse(ns0:StandardResponse)
     ns0:updateTranscoder(ns0:UpdateTranscoderReq)
     ns0:updateTranscoderResponse(ns0:StandardResponse)
     ns0:updateTransformationProfile(ns0:UpdateTransformationProfileReq)
     ns0:updateTransformationProfileResponse(ns0:StandardResponse)
     ns0:updateTvsCertificate(ns0:UpdateTvsCertificateReq)
     ns0:updateTvsCertificateResponse(ns0:StandardResponse)
     ns0:updateUcService(ns0:UpdateUcServiceReq)
     ns0:updateUcServiceResponse(ns0:StandardResponse)
     ns0:updateUser(ns0:UpdateUserReq)
     ns0:updateUserGroup(ns0:UpdateUserGroupReq)
     ns0:updateUserGroupResponse(ns0:StandardResponse)
     ns0:updateUserResponse(ns0:StandardResponse)
     ns0:updateVg224(ns0:UpdateVg224Req)
     ns0:updateVg224Response(ns0:StandardResponse)
     ns0:updateVoiceMailPilot(ns0:UpdateVoiceMailPilotReq)
     ns0:updateVoiceMailPilotResponse(ns0:StandardResponse)
     ns0:updateVoiceMailPort(ns0:UpdateVoiceMailPortReq)
     ns0:updateVoiceMailPortResponse(ns0:StandardResponse)
     ns0:updateVoiceMailProfile(ns0:UpdateVoiceMailProfileReq)
     ns0:updateVoiceMailProfileResponse(ns0:StandardResponse)
     ns0:updateVpnGateway(ns0:UpdateVpnGatewayReq)
     ns0:updateVpnGatewayResponse(ns0:StandardResponse)
     ns0:updateVpnGroup(ns0:UpdateVpnGroupReq)
     ns0:updateVpnGroupResponse(ns0:StandardResponse)
     ns0:updateVpnProfile(ns0:UpdateVpnProfileReq)
     ns0:updateVpnProfileResponse(ns0:StandardResponse)
     

Global types:
     xsd:anyType
     ns0:APIRequest(sequence: xsd:unsignedLong)
     ns0:APIResponse(sequence: xsd:unsignedLong)
     ns0:AddAarGroupMatrixReq(aarGroupMatrix: ns0:XAarGroupMatrix, sequence: xsd:unsignedLong)
     ns0:AddAarGroupReq(aarGroup: ns0:XAarGroup, sequence: xsd:unsignedLong)
     ns0:AddAnnouncementReq(announcement: ns0:XAnnouncement, sequence: xsd:unsignedLong)
     ns0:AddAnnunciatorReq(annunciator: ns0:XAnnunciator, sequence: xsd:unsignedLong)
     ns0:AddAppServerInfoReq(appServerInfo: ns0:XAppServerInfo, sequence: xsd:unsignedLong)
     ns0:AddAppUserReq(appUser: ns0:XAppUser, sequence: xsd:unsignedLong)
     ns0:AddApplicationDialRulesReq(applicationDialRules: ns0:XApplicationDialRules, sequence: xsd:unsignedLong)
     ns0:AddApplicationServerReq(applicationServer: ns0:XApplicationServer, sequence: xsd:unsignedLong)
     ns0:AddApplicationToSoftkeyTemplateReq(applicationToSoftkeyTemplate: ns0:XApplicationToSoftKeyTemplate, sequence: xsd:unsignedLong)
     ns0:AddApplicationUserCapfProfileReq(applicationUserCapfProfile: ns0:XApplicationUserCapfProfile, sequence: xsd:unsignedLong)
     ns0:AddAudioCodecPreferenceListReq(audioCodecPreferenceList: ns0:XAudioCodecPreferenceList, sequence: xsd:unsignedLong)
     ns0:AddBillingServerReq(billingServer: ns0:XBillingServer, sequence: xsd:unsignedLong)
     ns0:AddCallManagerGroupReq(callManagerGroup: ns0:XCallManagerGroup, sequence: xsd:unsignedLong)
     ns0:AddCallManagerReq(callManager: ns0:XCallManager, sequence: xsd:unsignedLong)
     ns0:AddCallParkReq(callPark: ns0:XCallPark, sequence: xsd:unsignedLong)
     ns0:AddCallPickupGroupReq(callPickupGroup: ns0:XCallPickupGroup, sequence: xsd:unsignedLong)
     ns0:AddCalledPartyTracingReq(calledPartyTracing: ns0:XCalledPartyTracing, sequence: xsd:unsignedLong)
     ns0:AddCalledPartyTransformationPatternReq(calledPartyTransformationPattern: ns0:XCalledPartyTransformationPattern, sequence: xsd:unsignedLong)
     ns0:AddCallerFilterListReq(callerFilterList: ns0:XCallerFilterList, sequence: xsd:unsignedLong)
     ns0:AddCallingPartyTransformationPatternReq(callingPartyTransformationPattern: ns0:XCallingPartyTransformationPattern, sequence: xsd:unsignedLong)
     ns0:AddCcdAdvertisingServiceReq(ccdAdvertisingService: ns0:XCcdAdvertisingService, sequence: xsd:unsignedLong)
     ns0:AddCcdHostedDNGroupReq(ccdHostedDNGroup: ns0:XCcdHostedDNGroup, sequence: xsd:unsignedLong)
     ns0:AddCcdHostedDNReq(ccdHostedDN: ns0:XCcdHostedDN, sequence: xsd:unsignedLong)
     ns0:AddCcdRequestingServiceReq(ccdRequestingService: ns0:XCcdRequestingService, sequence: xsd:unsignedLong)
     ns0:AddCiscoCatalyst600024PortFXSGatewayReq(ciscoCatalyst600024PortFXSGateway: ns0:XCiscoCatalyst600024PortFXSGateway, sequence: xsd:unsignedLong)
     ns0:AddCiscoCatalyst6000E1VoIPGatewayReq(ciscoCatalyst6000E1VoIPGateway: ns0:XCiscoCatalyst6000E1VoIPGateway, sequence: xsd:unsignedLong)
     ns0:AddCiscoCatalyst6000T1VoIPGatewayPriReq(ciscoCatalyst6000T1VoIPGatewayPri: ns0:XCiscoCatalyst6000T1VoIPGatewayPri, sequence: xsd:unsignedLong)
     ns0:AddCiscoCatalyst6000T1VoIPGatewayT1Req(ciscoCatalyst6000T1VoIPGatewayT1: ns0:XCiscoCatalyst6000T1VoIPGatewayT1, sequence: xsd:unsignedLong)
     ns0:AddCmcInfoReq(cmcInfo: ns0:XCmcInfo, sequence: xsd:unsignedLong)
     ns0:AddCommonDeviceConfigReq(commonDeviceConfig: ns0:XCommonDeviceConfig, sequence: xsd:unsignedLong)
     ns0:AddCommonPhoneConfigReq(commonPhoneConfig: ns0:XCommonPhoneConfig, sequence: xsd:unsignedLong)
     ns0:AddConferenceBridgeReq(conferenceBridge: ns0:XConferenceBridge, sequence: xsd:unsignedLong)
     ns0:AddCredentialPolicyReq(credentialPolicy: ns0:XCredentialPolicy, sequence: xsd:unsignedLong)
     ns0:AddCssReq(css: ns0:XCss, sequence: xsd:unsignedLong)
     ns0:AddCtiRoutePointReq(ctiRoutePoint: ns0:XCtiRoutePoint, sequence: xsd:unsignedLong)
     ns0:AddCumaServerSecurityProfileReq(cumaServerSecurityProfile: ns0:XCumaServerSecurityProfile, sequence: xsd:unsignedLong)
     ns0:AddCustomUserFieldReq(customUserField: ns0:XCustomUserField, sequence: xsd:unsignedLong)
     ns0:AddDateTimeGroupReq(dateTimeGroup: ns0:XDateTimeGroup, sequence: xsd:unsignedLong)
     ns0:AddDdiReq(ddi: ns0:XDdi, sequence: xsd:unsignedLong)
     ns0:AddDefaultDeviceProfileReq(defaultDeviceProfile: ns0:XDefaultDeviceProfile, sequence: xsd:unsignedLong)
     ns0:AddDeviceMobilityGroupReq(deviceMobilityGroup: ns0:XDeviceMobilityGroup, sequence: xsd:unsignedLong)
     ns0:AddDeviceMobilityReq(deviceMobility: ns0:XDeviceMobility, sequence: xsd:unsignedLong)
     ns0:AddDevicePoolReq(devicePool: ns0:XDevicePool, sequence: xsd:unsignedLong)
     ns0:AddDeviceProfileReq(deviceProfile: ns0:XDeviceProfile, sequence: xsd:unsignedLong)
     ns0:AddDhcpServerReq(dhcpServer: ns0:XDhcpServer, sequence: xsd:unsignedLong)
     ns0:AddDhcpSubnetReq(dhcpSubnet: ns0:XDhcpSubnet, sequence: xsd:unsignedLong)
     ns0:AddDialPlanReq(dialPlan: ns0:XDialPlan, sequence: xsd:unsignedLong)
     ns0:AddDialPlanTagReq(dialPlanTag: ns0:XDialPlanTag, sequence: xsd:unsignedLong)
     ns0:AddDirectedCallParkReq(directedCallPark: ns0:XDirectedCallPark, sequence: xsd:unsignedLong)
     ns0:AddDirectoryLookupDialRulesReq(directoryLookupDialRules: ns0:XDirectoryLookupDialRules, sequence: xsd:unsignedLong)
     ns0:AddEmccFeatureConfigReq(emccFeatureConfig: ns0:XEmccFeatureConfig, sequence: xsd:unsignedLong)
     ns0:AddEndUserCapfProfileReq(endUserCapfProfile: ns0:XEndUserCapfProfile, sequence: xsd:unsignedLong)
     ns0:AddEnterpriseFeatureAccessConfigurationReq(enterpriseFeatureAccessConfiguration: ns0:XEnterpriseFeatureAccessConfiguration, sequence: xsd:unsignedLong)
     ns0:AddExternalCallControlProfileReq(externalCallControlProfile: ns0:XExternalCallControlProfile, sequence: xsd:unsignedLong)
     ns0:AddFacInfoReq(facInfo: ns0:XFacInfo, sequence: xsd:unsignedLong)
     ns0:AddFallbackProfileReq(fallbackProfile: ns0:XFallbackProfile, sequence: xsd:unsignedLong)
     ns0:AddFeatureControlPolicyReq(featureControlPolicy: ns0:XFeatureControlPolicy, sequence: xsd:unsignedLong)
     ns0:AddFixedMohAudioSourceReq(fixedMohAudioSource: ns0:XFixedMohAudioSource, sequence: xsd:unsignedLong)
     ns0:AddGatekeeperReq(gatekeeper: ns0:XGatekeeper, sequence: xsd:unsignedLong)
     ns0:AddGatewayEndpointAnalogAccessReq(gatewayEndpointAnalogAccess: ns0:XGatewayEndpointAnalogAccess, sequence: xsd:unsignedLong)
     ns0:AddGatewayEndpointDigitalAccessBriReq(gatewayEndpointDigitalAccessBri: ns0:XGatewayEndpointDigitalAccessBri, sequence: xsd:unsignedLong)
     ns0:AddGatewayEndpointDigitalAccessPriReq(gatewayEndpointDigitalAccessPri: ns0:XGatewayEndpointDigitalAccessPri, sequence: xsd:unsignedLong)
     ns0:AddGatewayEndpointDigitalAccessT1Req(gatewayEndpointDigitalAccessT1: ns0:XGatewayEndpointDigitalAccessT1, sequence: xsd:unsignedLong)
     ns0:AddGatewayReq(gateway: ns0:XGateway, sequence: xsd:unsignedLong)
     ns0:AddGatewaySccpEndpointsReq(gatewaySccpEndpoints: ns0:XGatewaySccpEndpoints, sequence: xsd:unsignedLong)
     ns0:AddGatewaySubunitsReq(gatewaySubunits: ns0:XGatewaySubunits, sequence: xsd:unsignedLong)
     ns0:AddGeoLocationFilterReq(geoLocationFilter: ns0:XGeoLocationFilter, sequence: xsd:unsignedLong)
     ns0:AddGeoLocationPolicyReq(geoLocationPolicy: ns0:XGeoLocationPolicy, sequence: xsd:unsignedLong)
     ns0:AddGeoLocationReq(geoLocation: ns0:XGeoLocation, sequence: xsd:unsignedLong)
     ns0:AddH323GatewayReq(h323Gateway: ns0:XH323Gateway, sequence: xsd:unsignedLong)
     ns0:AddH323PhoneReq(h323Phone: ns0:XH323Phone, sequence: xsd:unsignedLong)
     ns0:AddH323TrunkReq(h323Trunk: ns0:XH323Trunk, sequence: xsd:unsignedLong)
     ns0:AddHandoffConfigurationReq(handoffConfiguration: ns0:XHandoffConfiguration, sequence: xsd:unsignedLong)
     ns0:AddHuntListReq(huntList: ns0:XHuntList, sequence: xsd:unsignedLong)
     ns0:AddHuntPilotReq(huntPilot: ns0:XHuntPilot, sequence: xsd:unsignedLong)
     ns0:AddImeClientReq(imeClient: ns0:XImeClient, sequence: xsd:unsignedLong)
     ns0:AddImeE164TransformationReq(imeE164Transformation: ns0:XImeE164Transformation, sequence: xsd:unsignedLong)
     ns0:AddImeEnrolledPatternGroupReq(imeEnrolledPatternGroup: ns0:XImeEnrolledPatternGroup, sequence: xsd:unsignedLong)
     ns0:AddImeEnrolledPatternReq(imeEnrolledPattern: ns0:XImeEnrolledPattern, sequence: xsd:unsignedLong)
     ns0:AddImeExclusionNumberGroupReq(imeExclusionNumberGroup: ns0:XImeExclusionNumberGroup, sequence: xsd:unsignedLong)
     ns0:AddImeExclusionNumberReq(imeExclusionNumber: ns0:XImeExclusionNumber, sequence: xsd:unsignedLong)
     ns0:AddImeFirewallReq(imeFirewall: ns0:XImeFirewall, sequence: xsd:unsignedLong)
     ns0:AddImeRouteFilterElementReq(imeRouteFilterElement: ns0:XImeRouteFilterElement, sequence: xsd:unsignedLong)
     ns0:AddImeRouteFilterGroupReq(imeRouteFilterGroup: ns0:XImeRouteFilterGroup, sequence: xsd:unsignedLong)
     ns0:AddImeServerReq(imeServer: ns0:XImeServer, sequence: xsd:unsignedLong)
     ns0:AddImportedDirectoryUriCatalogsReq(importedDirectoryUriCatalogs: ns0:XImportedDirectoryUriCatalogs, sequence: xsd:unsignedLong)
     ns0:AddInterClusterServiceProfileReq(interClusterServiceProfile: ns0:XInterClusterServiceProfile, sequence: xsd:unsignedLong)
     ns0:AddIpPhoneServicesReq(ipPhoneServices: ns0:XIpPhoneServices, sequence: xsd:unsignedLong)
     ns0:AddIvrUserLocaleReq(ivrUserLocale: ns0:XIvrUserLocale, sequence: xsd:unsignedLong)
     ns0:AddLbmGroupReq(lbmGroup: ns0:XLbmGroup, sequence: xsd:unsignedLong)
     ns0:AddLbmHubGroupReq(lbmHubGroup: ns0:XLbmHubGroup, sequence: xsd:unsignedLong)
     ns0:AddLdapDirectoryReq(ldapDirectory: ns0:XLdapDirectory, sequence: xsd:unsignedLong)
     ns0:AddLdapFilterReq(ldapFilter: ns0:XLdapFilter, sequence: xsd:unsignedLong)
     ns0:AddLdapSyncCustomFieldReq(ldapSyncCustomField: ns0:XLdapSyncCustomField, sequence: xsd:unsignedLong)
     ns0:AddLicenseCapabilitiesReq(licenseCapabilities: ns0:XLicenseCapabilities, sequence: xsd:unsignedLong)
     ns0:AddLineGroupReq(lineGroup: ns0:XLineGroup, sequence: xsd:unsignedLong)
     ns0:AddLineReq(line: ns0:XLine, sequence: xsd:unsignedLong)
     ns0:AddLocationReq(location: ns0:XLocation, sequence: xsd:unsignedLong)
     ns0:AddMediaResourceGroupReq(mediaResourceGroup: ns0:XMediaResourceGroup, sequence: xsd:unsignedLong)
     ns0:AddMediaResourceListReq(mediaResourceList: ns0:XMediaResourceList, sequence: xsd:unsignedLong)
     ns0:AddMeetMeReq(meetMe: ns0:XMeetMe, sequence: xsd:unsignedLong)
     ns0:AddMessageWaitingReq(messageWaiting: ns0:XMessageWaiting, sequence: xsd:unsignedLong)
     ns0:AddMlppDomainReq(mlppDomain: ns0:XMlppDomain, sequence: xsd:unsignedLong)
     ns0:AddMobileSmartClientProfileReq(mobileSmartClientProfile: ns0:XMobileSmartClientProfile, sequence: xsd:unsignedLong)
     ns0:AddMobileVoiceAccessReq(mobileVoiceAccess: ns0:XMobileVoiceAccess, sequence: xsd:unsignedLong)
     ns0:AddMobilityProfileReq(mobilityProfile: ns0:XMobilityProfile, sequence: xsd:unsignedLong)
     ns0:AddMobilityReq(mobility: ns0:XMobility, sequence: xsd:unsignedLong)
     ns0:AddMohAudioSourceReq(mohAudioSource: ns0:XMohAudioSource, sequence: xsd:unsignedLong)
     ns0:AddMohServerReq(mohServer: ns0:XMohServer, sequence: xsd:unsignedLong)
     ns0:AddMtpReq(mtp: ns0:XMtp, sequence: xsd:unsignedLong)
     ns0:AddPhoneButtonTemplateReq(phoneButtonTemplate: ns0:XPhoneButtonTemplate, sequence: xsd:unsignedLong)
     ns0:AddPhoneNtpReq(phoneNtp: ns0:XPhoneNtp, sequence: xsd:unsignedLong)
     ns0:AddPhoneReq(phone: ns0:XPhone, sequence: xsd:unsignedLong)
     ns0:AddPhoneSecurityProfileReq(phoneSecurityProfile: ns0:XPhoneSecurityProfile, sequence: xsd:unsignedLong)
     ns0:AddPhysicalLocationReq(physicalLocation: ns0:XPhysicalLocation, sequence: xsd:unsignedLong)
     ns0:AddPresenceGroupReq(presenceGroup: ns0:XPresenceGroup, sequence: xsd:unsignedLong)
     ns0:AddProcessNodeReq(processNode: ns0:XProcessNode, sequence: xsd:unsignedLong)
     ns0:AddProcessNodeServiceReq(processNodeService: ns0:XProcessNodeService, sequence: xsd:unsignedLong)
     ns0:AddRecordingProfileReq(recordingProfile: ns0:XRecordingProfile, sequence: xsd:unsignedLong)
     ns0:AddRegionMatrixReq(regionMatrix: ns0:XRegionMatrix, sequence: xsd:unsignedLong)
     ns0:AddRegionReq(region: ns0:XRegion, sequence: xsd:unsignedLong)
     ns0:AddRemoteClusterReq(remoteCluster: ns0:XRemoteCluster, sequence: xsd:unsignedLong)
     ns0:AddRemoteDestinationProfileReq(remoteDestinationProfile: ns0:XRemoteDestinationProfile, sequence: xsd:unsignedLong)
     ns0:AddRemoteDestinationReq(remoteDestination: ns0:XRemoteDestination, sequence: xsd:unsignedLong)
     ns0:AddResourcePriorityNamespaceListReq(resourcePriorityNamespaceList: ns0:XResourcePriorityNamespaceList, sequence: xsd:unsignedLong)
     ns0:AddResourcePriorityNamespaceReq(resourcePriorityNamespace: ns0:XResourcePriorityNamespace, sequence: xsd:unsignedLong)
     ns0:AddRouteFilterReq(routeFilter: ns0:XRouteFilter, sequence: xsd:unsignedLong)
     ns0:AddRouteGroupReq(routeGroup: ns0:XRouteGroup, sequence: xsd:unsignedLong)
     ns0:AddRouteListReq(routeList: ns0:XRouteList, sequence: xsd:unsignedLong)
     ns0:AddRoutePartitionReq(routePartition: ns0:XRoutePartition, sequence: xsd:unsignedLong)
     ns0:AddRoutePatternReq(routePattern: ns0:XRoutePattern, sequence: xsd:unsignedLong)
     ns0:AddRoutePlanReq(routePlan: ns0:XRoutePlan, sequence: xsd:unsignedLong)
     ns0:AddSIPNormalizationScriptReq(sIPNormalizationScript: ns0:XSIPNormalizationScript, sequence: xsd:unsignedLong)
     ns0:AddSNMPCommunityStringReq(CommunityString: ns0:RCommunityString, sequence: xsd:unsignedLong)
     ns0:AddSNMPCommunityStringRes(message: ns0:String32, sequence: xsd:unsignedLong)
     ns0:AddSNMPUserReq(user: ns0:RSNMPUser, sequence: xsd:unsignedLong)
     ns0:AddSNMPUserRes(message: ns0:String32, sequence: xsd:unsignedLong)
     ns0:AddSafCcdPurgeBlockLearnedRoutesReq(safCcdPurgeBlockLearnedRoutes: ns0:XSafCcdPurgeBlockLearnedRoutes, sequence: xsd:unsignedLong)
     ns0:AddSafForwarderReq(safForwarder: ns0:XSafForwarder, sequence: xsd:unsignedLong)
     ns0:AddSafSecurityProfileReq(safSecurityProfile: ns0:XSafSecurityProfile, sequence: xsd:unsignedLong)
     ns0:AddServiceParameterReq(serviceParameter: ns0:XServiceParameter, sequence: xsd:unsignedLong)
     ns0:AddServiceProfileReq(serviceProfile: ns0:XServiceProfile, sequence: xsd:unsignedLong)
     ns0:AddSipDialRulesReq(sipDialRules: ns0:XSipDialRules, sequence: xsd:unsignedLong)
     ns0:AddSipProfileReq(sipProfile: ns0:XSipProfile, sequence: xsd:unsignedLong)
     ns0:AddSipRealmReq(sipRealm: ns0:XSipRealm, sequence: xsd:unsignedLong)
     ns0:AddSipRoutePatternReq(sipRoutePattern: ns0:XSipRoutePattern, sequence: xsd:unsignedLong)
     ns0:AddSipTrunkReq(sipTrunk: ns0:XSipTrunk, sequence: xsd:unsignedLong)
     ns0:AddSipTrunkSecurityProfileReq(sipTrunkSecurityProfile: ns0:XSipTrunkSecurityProfile, sequence: xsd:unsignedLong)
     ns0:AddSoftKeyTemplateReq(softKeyTemplate: ns0:XSoftKeyTemplate, sequence: xsd:unsignedLong)
     ns0:AddSrstReq(srst: ns0:XSrst, sequence: xsd:unsignedLong)
     ns0:AddTimePeriodReq(timePeriod: ns0:XTimePeriod, sequence: xsd:unsignedLong)
     ns0:AddTimeScheduleReq(timeSchedule: ns0:XTimeSchedule, sequence: xsd:unsignedLong)
     ns0:AddTodAccessReq(todAccess: ns0:XTodAccess, sequence: xsd:unsignedLong)
     ns0:AddTransPatternReq(transPattern: ns0:XTransPattern, sequence: xsd:unsignedLong)
     ns0:AddTranscoderReq(transcoder: ns0:XTranscoder, sequence: xsd:unsignedLong)
     ns0:AddTransformationProfileReq(transformationProfile: ns0:XTransformationProfile, sequence: xsd:unsignedLong)
     ns0:AddTvsCertificateReq(tvsCertificate: ns0:XTvsCertificate, sequence: xsd:unsignedLong)
     ns0:AddUcServiceReq(ucService: ns0:XUcService, sequence: xsd:unsignedLong)
     ns0:AddUnitsToGatewayReq(unitsToGateway: ns0:XUnitsToGateway, sequence: xsd:unsignedLong)
     ns0:AddUserGroupReq(userGroup: ns0:XUserGroup, sequence: xsd:unsignedLong)
     ns0:AddUserPhoneAssociationReq(userPhoneAssociation: ns0:XUserPhoneAssociation, sequence: xsd:unsignedLong)
     ns0:AddUserReq(user: ns0:XUser, sequence: xsd:unsignedLong)
     ns0:AddVg224Req(vg224: ns0:XVg224, sequence: xsd:unsignedLong)
     ns0:AddVoiceMailPilotReq(voiceMailPilot: ns0:XVoiceMailPilot, sequence: xsd:unsignedLong)
     ns0:AddVoiceMailPortReq(voiceMailPort: ns0:XVoiceMailPort, sequence: xsd:unsignedLong)
     ns0:AddVoiceMailProfileReq(voiceMailProfile: ns0:XVoiceMailProfile, sequence: xsd:unsignedLong)
     ns0:AddVpnGatewayReq(vpnGateway: ns0:XVpnGateway, sequence: xsd:unsignedLong)
     ns0:AddVpnGroupReq(vpnGroup: ns0:XVpnGroup, sequence: xsd:unsignedLong)
     ns0:AddVpnProfileReq(vpnProfile: ns0:XVpnProfile, sequence: xsd:unsignedLong)
     ns0:DoAuthenticateUserReq(userid: xsd:string, ({password: xsd:string} | {pin: ns0:pin}), sequence: xsd:unsignedLong)
     ns0:DoAuthenticateUserRes(return: {userAuthenticated: ns0:boolean, code: xsd:integer, daysToExpiry: xsd:integer}, sequence: xsd:unsignedLong)
     ns0:DoDeviceLoginReq(deviceName: ns0:XFkType, loginDuration: xsd:nonNegativeInteger, profileName: ns0:XFkType, userId: xsd:string, sequence: xsd:unsignedLong)
     ns0:DoDeviceLoginRes(return: ns0:return, sequence: xsd:unsignedLong)
     ns0:DoDeviceLogoutReq(deviceName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:DoDeviceLogoutRes(return: ns0:return, sequence: xsd:unsignedLong)
     ns0:DoDeviceResetReq(deviceName: ns0:XFkType, ({isHardReset: ns0:boolean} | {deviceResetType: }), sequence: xsd:unsignedLong, isMGCP: ns0:boolean)
     ns0:DoDeviceResetRes(return: ns0:return, sequence: xsd:unsignedLong)
     ns0:DoLdapSyncReq(({name: xsd:string} | {uuid: ns0:XUUID}), sync: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:DoLdapSyncRes(return: ns0:return, sequence: xsd:unsignedLong)
     ns0:DoNotificationAckReq(registrationId: ns0:String32, object: ns0:String32, count: ns0:String32, sequence: xsd:unsignedLong)
     ns0:DoNotificationAckRes(message: ns0:String128, sequence: xsd:unsignedLong)
     ns0:DoNotificationObjectReq(registrationId: ns0:String32, operation: ns0:String32, object: ns0:String255, sequence: xsd:unsignedLong)
     ns0:DoNotificationObjectRes(message: ns0:String32, sequence: xsd:unsignedLong)
     ns0:DoNotificationRegisterReq(networkId: ns0:String32, clientName: ns0:String32, sequence: xsd:unsignedLong)
     ns0:DoNotificationRegisterRes(registrationId: ns0:String32, pollingInterval: ns0:String32, pollingStartTime: ns0:String32, sequence: xsd:unsignedLong)
     ns0:DoNotificationUnregisterReq(registrationId: ns0:String32, sequence: xsd:unsignedLong)
     ns0:DoNotificationUnregisterRes(message: ns0:String128, sequence: xsd:unsignedLong)
     ns0:DoUpdateRemoteClusterReq(server: ns0:String32, clusterId: ns0:String32, sequence: xsd:unsignedLong)
     ns0:DoUpdateRemoteClusterRes(value: ns0:String32, sequence: xsd:unsignedLong)
     ns0:ExecuteSQLQueryReq(sql: xsd:string, sequence: xsd:unsignedLong)
     ns0:ExecuteSQLQueryRes(return: {row: None[]}, sequence: xsd:unsignedLong)
     ns0:ExecuteSQLUpdateReq(sql: xsd:string, sequence: xsd:unsignedLong)
     ns0:ExecuteSQLUpdateRes(return: {rowsUpdated: xsd:integer}, sequence: xsd:unsignedLong)
     ns0:GetAarGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RAarGroup, sequence: xsd:unsignedLong)
     ns0:GetAarGroupRes(return: {aarGroup: ns0:RAarGroup}, sequence: xsd:unsignedLong)
     ns0:GetAnnouncementReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RAnnouncement, sequence: xsd:unsignedLong)
     ns0:GetAnnouncementRes(return: {announcement: ns0:RAnnouncement}, sequence: xsd:unsignedLong)
     ns0:GetAnnunciatorReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RAnnunciator, sequence: xsd:unsignedLong)
     ns0:GetAnnunciatorRes(return: {annunciator: ns0:RAnnunciator}, sequence: xsd:unsignedLong)
     ns0:GetAppServerInfoReq(uuid: ns0:XUUID, returnedTags: ns0:RAppServerInfo, sequence: xsd:unsignedLong)
     ns0:GetAppServerInfoRes(return: {appServerInfo: ns0:RAppServerInfo}, sequence: xsd:unsignedLong)
     ns0:GetAppUserReq(({userid: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RAppUser, sequence: xsd:unsignedLong)
     ns0:GetAppUserRes(return: {appUser: ns0:RAppUser}, sequence: xsd:unsignedLong)
     ns0:GetApplicationDialRulesReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RApplicationDialRules, sequence: xsd:unsignedLong)
     ns0:GetApplicationDialRulesRes(return: {applicationDialRules: ns0:RApplicationDialRules}, sequence: xsd:unsignedLong)
     ns0:GetApplicationServerReq(({uuid: ns0:XUUID}), returnedTags: ns0:RApplicationServer, sequence: xsd:unsignedLong)
     ns0:GetApplicationServerRes(return: {applicationServer: ns0:RApplicationServer}, sequence: xsd:unsignedLong)
     ns0:GetApplicationUserCapfProfileReq(({instanceId: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RApplicationUserCapfProfile, sequence: xsd:unsignedLong)
     ns0:GetApplicationUserCapfProfileRes(return: {applicationUserCapfProfile: ns0:RApplicationUserCapfProfile}, sequence: xsd:unsignedLong)
     ns0:GetAudioCodecPreferenceListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RAudioCodecPreferenceList, sequence: xsd:unsignedLong)
     ns0:GetAudioCodecPreferenceListRes(return: {audioCodecPreferenceList: ns0:RAudioCodecPreferenceList}, sequence: xsd:unsignedLong)
     ns0:GetBillingServerReq(uuid: ns0:XUUID, returnedTags: ns0:RBillingServer, sequence: xsd:unsignedLong)
     ns0:GetBillingServerRes(return: {billingServer: ns0:RBillingServer}, sequence: xsd:unsignedLong)
     ns0:GetCCMVersionReq(processNodeName: ns0:String255)
     ns0:GetCCMVersionRes(return: {componentVersion: {version: ns0:String50}}, sequence: xsd:unsignedLong)
     ns0:GetCallManagerGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCallManagerGroup, sequence: xsd:unsignedLong)
     ns0:GetCallManagerGroupRes(return: {callManagerGroup: ns0:RCallManagerGroup}, sequence: xsd:unsignedLong)
     ns0:GetCallManagerReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCallManager, sequence: xsd:unsignedLong)
     ns0:GetCallManagerRes(return: {callManager: ns0:RCallManager}, sequence: xsd:unsignedLong)
     ns0:GetCallParkReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RCallPark, sequence: xsd:unsignedLong)
     ns0:GetCallParkRes(return: {callPark: ns0:RCallPark}, sequence: xsd:unsignedLong)
     ns0:GetCallPickupGroupReq(({uuid: ns0:XUUID} | {name: xsd:Name} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RCallPickupGroup, sequence: xsd:unsignedLong)
     ns0:GetCallPickupGroupRes(return: {callPickupGroup: ns0:RCallPickupGroup}, sequence: xsd:unsignedLong)
     ns0:GetCalledPartyTransformationPatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), returnedTags: ns0:RCalledPartyTransformationPattern, sequence: xsd:unsignedLong)
     ns0:GetCalledPartyTransformationPatternRes(return: {calledPartyTransformationPattern: ns0:RCalledPartyTransformationPattern}, sequence: xsd:unsignedLong)
     ns0:GetCallerFilterListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCallerFilterList, sequence: xsd:unsignedLong)
     ns0:GetCallerFilterListRes(return: {callerFilterList: ns0:RCallerFilterList}, sequence: xsd:unsignedLong)
     ns0:GetCallingPartyTransformationPatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), returnedTags: ns0:RCallingPartyTransformationPattern, sequence: xsd:unsignedLong)
     ns0:GetCallingPartyTransformationPatternRes(return: {callingPartyTransformationPattern: ns0:RCallingPartyTransformationPattern}, sequence: xsd:unsignedLong)
     ns0:GetCcdAdvertisingServiceReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCcdAdvertisingService, sequence: xsd:unsignedLong)
     ns0:GetCcdAdvertisingServiceRes(return: {ccdAdvertisingService: ns0:RCcdAdvertisingService}, sequence: xsd:unsignedLong)
     ns0:GetCcdHostedDNGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCcdHostedDNGroup, sequence: xsd:unsignedLong)
     ns0:GetCcdHostedDNGroupRes(return: {ccdHostedDNGroup: ns0:RCcdHostedDNGroup}, sequence: xsd:unsignedLong)
     ns0:GetCcdHostedDNReq(({hostedPattern: ns0:String50} | {uuid: ns0:XUUID}), returnedTags: ns0:RCcdHostedDN, sequence: xsd:unsignedLong)
     ns0:GetCcdHostedDNRes(return: {ccdHostedDN: ns0:RCcdHostedDN}, sequence: xsd:unsignedLong)
     ns0:GetCcdRequestingServiceReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCcdRequestingService, sequence: xsd:unsignedLong)
     ns0:GetCcdRequestingServiceRes(return: {ccdRequestingService: ns0:RCcdRequestingService}, sequence: xsd:unsignedLong)
     ns0:GetCiscoCatalyst600024PortFXSGatewayReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCiscoCatalyst600024PortFXSGateway, sequence: xsd:unsignedLong)
     ns0:GetCiscoCatalyst600024PortFXSGatewayRes(return: {ciscoCatalyst600024PortFXSGateway: ns0:RCiscoCatalyst600024PortFXSGateway}, sequence: xsd:unsignedLong)
     ns0:GetCiscoCatalyst6000E1VoIPGatewayReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCiscoCatalyst6000E1VoIPGateway, sequence: xsd:unsignedLong)
     ns0:GetCiscoCatalyst6000E1VoIPGatewayRes(return: {ciscoCatalyst6000E1VoIPGateway: ns0:RCiscoCatalyst6000E1VoIPGateway}, sequence: xsd:unsignedLong)
     ns0:GetCiscoCatalyst6000T1VoIPGatewayPriReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCiscoCatalyst6000T1VoIPGatewayPri, sequence: xsd:unsignedLong)
     ns0:GetCiscoCatalyst6000T1VoIPGatewayPriRes(return: {ciscoCatalyst6000T1VoIPGatewayPri: ns0:RCiscoCatalyst6000T1VoIPGatewayPri}, sequence: xsd:unsignedLong)
     ns0:GetCiscoCatalyst6000T1VoIPGatewayT1Req(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCiscoCatalyst6000T1VoIPGatewayT1, sequence: xsd:unsignedLong)
     ns0:GetCiscoCatalyst6000T1VoIPGatewayT1Res(return: {ciscoCatalyst6000T1VoIPGatewayT1: ns0:RCiscoCatalyst6000T1VoIPGatewayT1}, sequence: xsd:unsignedLong)
     ns0:GetCmcInfoReq(({code: ns0:String16} | {uuid: ns0:XUUID}), returnedTags: ns0:RCmcInfo, sequence: xsd:unsignedLong)
     ns0:GetCmcInfoRes(return: {cmcInfo: ns0:RCmcInfo}, sequence: xsd:unsignedLong)
     ns0:GetCommonDeviceConfigReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCommonDeviceConfig, sequence: xsd:unsignedLong)
     ns0:GetCommonDeviceConfigRes(return: {commonDeviceConfig: ns0:RCommonDeviceConfig}, sequence: xsd:unsignedLong)
     ns0:GetCommonPhoneConfigReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCommonPhoneConfig, sequence: xsd:unsignedLong)
     ns0:GetCommonPhoneConfigRes(return: {commonPhoneConfig: ns0:RCommonPhoneConfig}, sequence: xsd:unsignedLong)
     ns0:GetConferenceBridgeReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RConferenceBridge, sequence: xsd:unsignedLong)
     ns0:GetConferenceBridgeRes(return: {conferenceBridge: ns0:RConferenceBridge}, sequence: xsd:unsignedLong)
     ns0:GetCredentialPolicyReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCredentialPolicy, sequence: xsd:unsignedLong)
     ns0:GetCredentialPolicyRes(return: {credentialPolicy: ns0:RCredentialPolicy}, sequence: xsd:unsignedLong)
     ns0:GetCssReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCss, sequence: xsd:unsignedLong)
     ns0:GetCssRes(return: {css: ns0:RCss}, sequence: xsd:unsignedLong)
     ns0:GetCtiRoutePointReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCtiRoutePoint, sequence: xsd:unsignedLong)
     ns0:GetCtiRoutePointRes(return: {ctiRoutePoint: ns0:RCtiRoutePoint}, sequence: xsd:unsignedLong)
     ns0:GetCumaServerSecurityProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCumaServerSecurityProfile, sequence: xsd:unsignedLong)
     ns0:GetCumaServerSecurityProfileRes(return: {cumaServerSecurityProfile: ns0:RCumaServerSecurityProfile}, sequence: xsd:unsignedLong)
     ns0:GetCustomUserFieldReq(({field: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RCustomUserField, sequence: xsd:unsignedLong)
     ns0:GetCustomUserFieldRes(return: {customUserField: ns0:RCustomUserField}, sequence: xsd:unsignedLong)
     ns0:GetDateTimeGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDateTimeGroup, sequence: xsd:unsignedLong)
     ns0:GetDateTimeGroupRes(return: {dateTimeGroup: ns0:RDateTimeGroup}, sequence: xsd:unsignedLong)
     ns0:GetDdiReq(({uuid: ns0:XUUID} | {name: ns0:String50, dialPlanName: ns0:XFkType}), returnedTags: ns0:RDdi, sequence: xsd:unsignedLong)
     ns0:GetDdiRes(return: {ddi: ns0:RDdi}, sequence: xsd:unsignedLong)
     ns0:GetDefaultDeviceProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDefaultDeviceProfile, sequence: xsd:unsignedLong)
     ns0:GetDefaultDeviceProfileRes(return: {defaultDeviceProfile: ns0:RDefaultDeviceProfile}, sequence: xsd:unsignedLong)
     ns0:GetDeviceMobilityGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDeviceMobilityGroup, sequence: xsd:unsignedLong)
     ns0:GetDeviceMobilityGroupRes(return: {deviceMobilityGroup: ns0:RDeviceMobilityGroup}, sequence: xsd:unsignedLong)
     ns0:GetDeviceMobilityReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDeviceMobility, sequence: xsd:unsignedLong)
     ns0:GetDeviceMobilityRes(return: {deviceMobility: ns0:RDeviceMobility}, sequence: xsd:unsignedLong)
     ns0:GetDevicePoolReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDevicePool, sequence: xsd:unsignedLong)
     ns0:GetDevicePoolRes(return: {devicePool: ns0:RDevicePool}, sequence: xsd:unsignedLong)
     ns0:GetDeviceProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDeviceProfile, sequence: xsd:unsignedLong)
     ns0:GetDeviceProfileRes(return: {deviceProfile: ns0:RDeviceProfile}, sequence: xsd:unsignedLong)
     ns0:GetDhcpServerReq(({processNodeName: ns0:XFkType} | {uuid: ns0:XUUID}), returnedTags: ns0:RDhcpServer, sequence: xsd:unsignedLong)
     ns0:GetDhcpServerRes(return: {dhcpServer: ns0:RDhcpServer}, sequence: xsd:unsignedLong)
     ns0:GetDhcpSubnetReq(({uuid: ns0:XUUID} | {dhcpServerName: ns0:XFkType, subnetIpAddress: xsd:string}), returnedTags: ns0:RDhcpSubnet, sequence: xsd:unsignedLong)
     ns0:GetDhcpSubnetRes(return: {dhcpSubnet: ns0:RDhcpSubnet}, sequence: xsd:unsignedLong)
     ns0:GetDialPlanReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDialPlan, sequence: xsd:unsignedLong)
     ns0:GetDialPlanRes(return: {dialPlan: ns0:RDialPlan}, sequence: xsd:unsignedLong)
     ns0:GetDialPlanTagReq(({uuid: ns0:XUUID} | {name: ns0:String50, dialPlanName: ns0:XFkType}), returnedTags: ns0:RDialPlanTag, sequence: xsd:unsignedLong)
     ns0:GetDialPlanTagRes(return: {dialPlanTag: ns0:RDialPlanTag}, sequence: xsd:unsignedLong)
     ns0:GetDirectedCallParkReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RDirectedCallPark, sequence: xsd:unsignedLong)
     ns0:GetDirectedCallParkRes(return: {directedCallPark: ns0:RDirectedCallPark}, sequence: xsd:unsignedLong)
     ns0:GetDirectoryLookupDialRulesReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDirectoryLookupDialRules, sequence: xsd:unsignedLong)
     ns0:GetDirectoryLookupDialRulesRes(return: {directoryLookupDialRules: ns0:RDirectoryLookupDialRules}, sequence: xsd:unsignedLong)
     ns0:GetEmccFeatureConfigReq(({parameterName: ns0:String50} | {uuid: ns0:XUUID}), returnedTags: ns0:REmccFeatureConfig, sequence: xsd:unsignedLong)
     ns0:GetEmccFeatureConfigRes(return: {emccFeatureConfig: ns0:REmccFeatureConfig}, sequence: xsd:unsignedLong)
     ns0:GetEndUserCapfProfileReq(({instanceId: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:REndUserCapfProfile, sequence: xsd:unsignedLong)
     ns0:GetEndUserCapfProfileRes(return: {endUserCapfProfile: ns0:REndUserCapfProfile}, sequence: xsd:unsignedLong)
     ns0:GetEnterpriseFeatureAccessConfigurationReq(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), returnedTags: ns0:REnterpriseFeatureAccessConfiguration, sequence: xsd:unsignedLong)
     ns0:GetEnterpriseFeatureAccessConfigurationRes(return: {enterpriseFeatureAccessConfiguration: ns0:REnterpriseFeatureAccessConfiguration}, sequence: xsd:unsignedLong)
     ns0:GetEnterprisePhoneConfigReq()
     ns0:GetEnterprisePhoneConfigRes(return: {enterprisePhoneConfig: ns0:XEnterprisePhoneConfig}, sequence: xsd:unsignedLong)
     ns0:GetExternalCallControlProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RExternalCallControlProfile, sequence: xsd:unsignedLong)
     ns0:GetExternalCallControlProfileRes(return: {externalCallControlProfile: ns0:RExternalCallControlProfile}, sequence: xsd:unsignedLong)
     ns0:GetFacInfoReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RFacInfo, sequence: xsd:unsignedLong)
     ns0:GetFacInfoRes(return: {facInfo: ns0:RFacInfo}, sequence: xsd:unsignedLong)
     ns0:GetFallbackFeatureConfigReq()
     ns0:GetFallbackFeatureConfigRes(return: {fallbackFeatureConfig: ns0:RFallbackFeatureConfig}, sequence: xsd:unsignedLong)
     ns0:GetFallbackProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RFallbackProfile, sequence: xsd:unsignedLong)
     ns0:GetFallbackProfileRes(return: {fallbackProfile: ns0:RFallbackProfile}, sequence: xsd:unsignedLong)
     ns0:GetFeatureControlPolicyReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RFeatureControlPolicy, sequence: xsd:unsignedLong)
     ns0:GetFeatureControlPolicyRes(return: {featureControlPolicy: ns0:RFeatureControlPolicy}, sequence: xsd:unsignedLong)
     ns0:GetFixedMohAudioSourceReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RFixedMohAudioSource, sequence: xsd:unsignedLong)
     ns0:GetFixedMohAudioSourceRes(return: {fixedMohAudioSource: ns0:RFixedMohAudioSource}, sequence: xsd:unsignedLong)
     ns0:GetGatekeeperReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatekeeper, sequence: xsd:unsignedLong)
     ns0:GetGatekeeperRes(return: {gatekeeper: ns0:RGatekeeper}, sequence: xsd:unsignedLong)
     ns0:GetGatewayEndpointAnalogAccessReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatewayEndpointAnalogAccess, sequence: xsd:unsignedLong)
     ns0:GetGatewayEndpointAnalogAccessRes(return: {gatewayEndpointAnalogAccess: ns0:RGatewayEndpointAnalogAccess}, sequence: xsd:unsignedLong)
     ns0:GetGatewayEndpointDigitalAccessBriReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatewayEndpointDigitalAccessBri, sequence: xsd:unsignedLong)
     ns0:GetGatewayEndpointDigitalAccessBriRes(return: {gatewayEndpointDigitalAccessBri: ns0:RGatewayEndpointDigitalAccessBri}, sequence: xsd:unsignedLong)
     ns0:GetGatewayEndpointDigitalAccessPriReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatewayEndpointDigitalAccessPri, sequence: xsd:unsignedLong)
     ns0:GetGatewayEndpointDigitalAccessPriRes(return: {gatewayEndpointDigitalAccessPri: ns0:RGatewayEndpointDigitalAccessPri}, sequence: xsd:unsignedLong)
     ns0:GetGatewayEndpointDigitalAccessT1Req(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatewayEndpointDigitalAccessT1, sequence: xsd:unsignedLong)
     ns0:GetGatewayEndpointDigitalAccessT1Res(return: {gatewayEndpointDigitalAccessT1: ns0:RGatewayEndpointDigitalAccessT1}, sequence: xsd:unsignedLong)
     ns0:GetGatewayReq(({domainName: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RGateway, sequence: xsd:unsignedLong)
     ns0:GetGatewayRes(return: {gateway: ns0:RGateway}, sequence: xsd:unsignedLong)
     ns0:GetGatewaySccpEndpointsReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatewaySccpEndpoints, sequence: xsd:unsignedLong)
     ns0:GetGatewaySccpEndpointsRes(return: {gatewaySccpEndpoints: ns0:RGatewaySccpEndpoints}, sequence: xsd:unsignedLong)
     ns0:GetGeoLocationFilterReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGeoLocationFilter, sequence: xsd:unsignedLong)
     ns0:GetGeoLocationFilterRes(return: {geoLocationFilter: ns0:RGeoLocationFilter}, sequence: xsd:unsignedLong)
     ns0:GetGeoLocationPolicyReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGeoLocationPolicy, sequence: xsd:unsignedLong)
     ns0:GetGeoLocationPolicyRes(return: {geoLocationPolicy: ns0:RGeoLocationPolicy}, sequence: xsd:unsignedLong)
     ns0:GetGeoLocationReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGeoLocation, sequence: xsd:unsignedLong)
     ns0:GetGeoLocationRes(return: {geoLocation: ns0:RGeoLocation}, sequence: xsd:unsignedLong)
     ns0:GetH323GatewayReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RH323Gateway, sequence: xsd:unsignedLong)
     ns0:GetH323GatewayRes(return: {h323Gateway: ns0:RH323Gateway}, sequence: xsd:unsignedLong)
     ns0:GetH323PhoneReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RH323Phone, sequence: xsd:unsignedLong)
     ns0:GetH323PhoneRes(return: {h323Phone: ns0:RH323Phone}, sequence: xsd:unsignedLong)
     ns0:GetH323TrunkReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RH323Trunk, sequence: xsd:unsignedLong)
     ns0:GetH323TrunkRes(return: {h323Trunk: ns0:RH323Trunk}, sequence: xsd:unsignedLong)
     ns0:GetHandoffConfigurationReq(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), returnedTags: ns0:RHandoffConfiguration, sequence: xsd:unsignedLong)
     ns0:GetHandoffConfigurationRes(return: {handoffConfiguration: ns0:RHandoffConfiguration}, sequence: xsd:unsignedLong)
     ns0:GetHuntListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RHuntList, sequence: xsd:unsignedLong)
     ns0:GetHuntListRes(return: {huntList: ns0:RHuntList}, sequence: xsd:unsignedLong)
     ns0:GetHuntPilotReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RHuntPilot, sequence: xsd:unsignedLong)
     ns0:GetHuntPilotRes(return: {huntPilot: ns0:RHuntPilot}, sequence: xsd:unsignedLong)
     ns0:GetIlsConfigReq(clusterId: xsd:string, returnedTags: ns0:NewIlsConfig)
     ns0:GetIlsConfigRes(return: {ilsConfig: ns0:NewIlsConfig}, sequence: xsd:unsignedLong)
     ns0:GetImeClientReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeClient, sequence: xsd:unsignedLong)
     ns0:GetImeClientRes(return: {imeClient: ns0:RImeClient}, sequence: xsd:unsignedLong)
     ns0:GetImeE164TransformationReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeE164Transformation, sequence: xsd:unsignedLong)
     ns0:GetImeE164TransformationRes(return: {imeE164Transformation: ns0:RImeE164Transformation}, sequence: xsd:unsignedLong)
     ns0:GetImeEnrolledPatternGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeEnrolledPatternGroup, sequence: xsd:unsignedLong)
     ns0:GetImeEnrolledPatternGroupRes(return: {imeEnrolledPatternGroup: ns0:RImeEnrolledPatternGroup}, sequence: xsd:unsignedLong)
     ns0:GetImeEnrolledPatternReq(({pattern: ns0:String16} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeEnrolledPattern, sequence: xsd:unsignedLong)
     ns0:GetImeEnrolledPatternRes(return: {imeEnrolledPattern: ns0:RImeEnrolledPattern}, sequence: xsd:unsignedLong)
     ns0:GetImeExclusionNumberGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeExclusionNumberGroup, sequence: xsd:unsignedLong)
     ns0:GetImeExclusionNumberGroupRes(return: {imeExclusionNumberGroup: ns0:RImeExclusionNumberGroup}, sequence: xsd:unsignedLong)
     ns0:GetImeExclusionNumberReq(({pattern: ns0:String16} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeExclusionNumber, sequence: xsd:unsignedLong)
     ns0:GetImeExclusionNumberRes(return: {imeExclusionNumber: ns0:RImeExclusionNumber}, sequence: xsd:unsignedLong)
     ns0:GetImeFeatureConfigReq()
     ns0:GetImeFeatureConfigRes(return: {imeFeatureConfig: ns0:RImeFeatureConfig}, sequence: xsd:unsignedLong)
     ns0:GetImeFirewallReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeFirewall, sequence: xsd:unsignedLong)
     ns0:GetImeFirewallRes(return: {imeFirewall: ns0:RImeFirewall}, sequence: xsd:unsignedLong)
     ns0:GetImeLearnedRoutesReq(({uuid: ns0:XUUID} | {e164Did: ns0:String32}), returnedTags: ns0:RImeLearnedRoutes, sequence: xsd:unsignedLong)
     ns0:GetImeLearnedRoutesRes(return: {imeLearnedRoutes: ns0:RImeLearnedRoutes}, sequence: xsd:unsignedLong)
     ns0:GetImeRouteFilterElementReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeRouteFilterElement, sequence: xsd:unsignedLong)
     ns0:GetImeRouteFilterElementRes(return: {imeRouteFilterElement: ns0:RImeRouteFilterElement}, sequence: xsd:unsignedLong)
     ns0:GetImeRouteFilterGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeRouteFilterGroup, sequence: xsd:unsignedLong)
     ns0:GetImeRouteFilterGroupRes(return: {imeRouteFilterGroup: ns0:RImeRouteFilterGroup}, sequence: xsd:unsignedLong)
     ns0:GetImeServerReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeServer, sequence: xsd:unsignedLong)
     ns0:GetImeServerRes(return: {imeServer: ns0:RImeServer}, sequence: xsd:unsignedLong)
     ns0:GetImportedDirectoryUriCatalogsReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImportedDirectoryUriCatalogs, sequence: xsd:unsignedLong)
     ns0:GetImportedDirectoryUriCatalogsRes(return: {importedDirectoryUriCatalogs: ns0:RImportedDirectoryUriCatalogs}, sequence: xsd:unsignedLong)
     ns0:GetInterClusterServiceProfileReq(({interClusterService: } | {uuid: ns0:XUUID}), returnedTags: ns0:RInterClusterServiceProfile, sequence: xsd:unsignedLong)
     ns0:GetInterClusterServiceProfileRes(return: {interClusterServiceProfile: ns0:RInterClusterServiceProfile}, sequence: xsd:unsignedLong)
     ns0:GetIpPhoneServicesReq(({serviceName: ns0:UniqueString128} | {uuid: ns0:XUUID}), returnedTags: ns0:RIpPhoneServices, sequence: xsd:unsignedLong)
     ns0:GetIpPhoneServicesRes(return: {ipPhoneServices: ns0:RIpPhoneServices}, sequence: xsd:unsignedLong)
     ns0:GetIvrUserLocaleReq(({userLocale: } | {uuid: ns0:XUUID}), returnedTags: ns0:RIvrUserLocale, sequence: xsd:unsignedLong)
     ns0:GetIvrUserLocaleRes(return: {ivrUserLocale: ns0:RIvrUserLocale}, sequence: xsd:unsignedLong)
     ns0:GetLbmGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLbmGroup, sequence: xsd:unsignedLong)
     ns0:GetLbmGroupRes(return: {lbmGroup: ns0:RLbmGroup}, sequence: xsd:unsignedLong)
     ns0:GetLbmHubGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLbmHubGroup, sequence: xsd:unsignedLong)
     ns0:GetLbmHubGroupRes(return: {lbmHubGroup: ns0:RLbmHubGroup}, sequence: xsd:unsignedLong)
     ns0:GetLdapAuthenticationReq()
     ns0:GetLdapAuthenticationRes(return: {ldapAuthentication: ns0:XLdapAuthentication}, sequence: xsd:unsignedLong)
     ns0:GetLdapDirectoryReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLdapDirectory, sequence: xsd:unsignedLong)
     ns0:GetLdapDirectoryRes(return: {ldapDirectory: ns0:RLdapDirectory}, sequence: xsd:unsignedLong)
     ns0:GetLdapFilterReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLdapFilter, sequence: xsd:unsignedLong)
     ns0:GetLdapFilterRes(return: {ldapFilter: ns0:RLdapFilter}, sequence: xsd:unsignedLong)
     ns0:GetLdapSyncCustomFieldReq(({uuid: ns0:XUUID} | {ldapConfigurationName: xsd:string, customUserField: xsd:string}), returnedTags: ns0:RLdapSyncCustomField, sequence: xsd:unsignedLong)
     ns0:GetLdapSyncCustomFieldRes(return: {ldapSyncCustomField: ns0:RLdapSyncCustomField}, sequence: xsd:unsignedLong)
     ns0:GetLdapSyncStatusReq(({name: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:GetLdapSyncStatusRes(return: ns0:return, sequence: xsd:unsignedLong)
     ns0:GetLdapSystemReq()
     ns0:GetLdapSystemRes(return: {ldapSystem: ns0:XLdapSystem}, sequence: xsd:unsignedLong)
     ns0:GetLicenseCapabilitiesReq(({userid: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RLicenseCapabilities, sequence: xsd:unsignedLong)
     ns0:GetLicenseCapabilitiesRes(return: {licenseCapabilities: ns0:RLicenseCapabilities}, sequence: xsd:unsignedLong)
     ns0:GetLicenseUnitReportReq()
     ns0:GetLicenseUnitReportRes(return: {licenseUnitReport: ns0:XLicenseUnitReport}, sequence: xsd:unsignedLong)
     ns0:GetLineGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLineGroup, sequence: xsd:unsignedLong)
     ns0:GetLineGroupRes(return: {lineGroup: ns0:RLineGroup}, sequence: xsd:unsignedLong)
     ns0:GetLineReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RLine, sequence: xsd:unsignedLong)
     ns0:GetLineRes(return: {line: ns0:RLine}, sequence: xsd:unsignedLong)
     ns0:GetLocationReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLocation, sequence: xsd:unsignedLong)
     ns0:GetLocationRes(return: {location: ns0:RLocation}, sequence: xsd:unsignedLong)
     ns0:GetMediaResourceGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMediaResourceGroup, sequence: xsd:unsignedLong)
     ns0:GetMediaResourceGroupRes(return: {mediaResourceGroup: ns0:RMediaResourceGroup}, sequence: xsd:unsignedLong)
     ns0:GetMediaResourceListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMediaResourceList, sequence: xsd:unsignedLong)
     ns0:GetMediaResourceListRes(return: {mediaResourceList: ns0:RMediaResourceList}, sequence: xsd:unsignedLong)
     ns0:GetMeetMeReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RMeetMe, sequence: xsd:unsignedLong)
     ns0:GetMeetMeRes(return: {meetMe: ns0:RMeetMe}, sequence: xsd:unsignedLong)
     ns0:GetMessageWaitingReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RMessageWaiting, sequence: xsd:unsignedLong)
     ns0:GetMessageWaitingRes(return: {messageWaiting: ns0:RMessageWaiting}, sequence: xsd:unsignedLong)
     ns0:GetMlppDomainReq(({domainName: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RMlppDomain, sequence: xsd:unsignedLong)
     ns0:GetMlppDomainRes(return: {mlppDomain: ns0:RMlppDomain}, sequence: xsd:unsignedLong)
     ns0:GetMobileSmartClientProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMobileSmartClientProfile, sequence: xsd:unsignedLong)
     ns0:GetMobileSmartClientProfileRes(return: {mobileSmartClientProfile: ns0:RMobileSmartClientProfile}, sequence: xsd:unsignedLong)
     ns0:GetMobileVoiceAccessReq(({pattern: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RMobileVoiceAccess, sequence: xsd:unsignedLong)
     ns0:GetMobileVoiceAccessRes(return: {mobileVoiceAccess: ns0:RMobileVoiceAccess}, sequence: xsd:unsignedLong)
     ns0:GetMobilityProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMobilityProfile, sequence: xsd:unsignedLong)
     ns0:GetMobilityProfileRes(return: {mobilityProfile: ns0:RMobilityProfile}, sequence: xsd:unsignedLong)
     ns0:GetMobilityReq(handoffNumber: ns0:XFkType, DTMFNumber: ns0:XFkType, returnedTags: ns0:RMobility)
     ns0:GetMobilityRes(return: {mobility: ns0:RMobility}, sequence: xsd:unsignedLong)
     ns0:GetMohAudioSourceReq(({sourceId: } | {uuid: ns0:XUUID}), returnedTags: ns0:RMohAudioSource, sequence: xsd:unsignedLong)
     ns0:GetMohAudioSourceRes(return: {mohAudioSource: ns0:RMohAudioSource}, sequence: xsd:unsignedLong)
     ns0:GetMohServerReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMohServer, sequence: xsd:unsignedLong)
     ns0:GetMohServerRes(return: {mohServer: ns0:RMohServer}, sequence: xsd:unsignedLong)
     ns0:GetMtpReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMtp, sequence: xsd:unsignedLong)
     ns0:GetMtpRes(return: {mtp: ns0:RMtp}, sequence: xsd:unsignedLong)
     ns0:GetNotificationChangesReq(registrationId: ns0:String32, returnedTags: ns0:RNotificationChange, sequence: xsd:unsignedLong)
     ns0:GetNotificationChangesRes(changeNotification: ns0:RNotificationChange, pollingInterval: ns0:String32, pollingStartTime: ns0:String32, sequence: xsd:unsignedLong)
     ns0:GetNotificationStatusReq(registrationId: ns0:String32, sequence: xsd:unsignedLong)
     ns0:GetNotificationStatusRes(objectList: ns0:RObjectList[], pollingInterval: ns0:String128, pollingStartTime: ns0:String128, sequence: xsd:unsignedLong)
     ns0:GetNumDevicesReq(class: , sequence: xsd:unsignedLong)
     ns0:GetNumDevicesRes(return: {xsd:nonNegativeInteger}, sequence: xsd:unsignedLong)
     ns0:GetOSVersionReq()
     ns0:GetOSVersionRes(return: {os: ns0:XOSVersion}, sequence: xsd:unsignedLong)
     ns0:GetPhoneButtonTemplateReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RPhoneButtonTemplate, sequence: xsd:unsignedLong)
     ns0:GetPhoneButtonTemplateRes(return: {phoneButtonTemplate: ns0:RPhoneButtonTemplate}, sequence: xsd:unsignedLong)
     ns0:GetPhoneNtpReq(({ipAddress: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RPhoneNtp, sequence: xsd:unsignedLong)
     ns0:GetPhoneNtpRes(return: {phoneNtp: ns0:RPhoneNtp}, sequence: xsd:unsignedLong)
     ns0:GetPhoneReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RPhone, sequence: xsd:unsignedLong)
     ns0:GetPhoneRes(return: {phone: ns0:RPhone}, sequence: xsd:unsignedLong)
     ns0:GetPhoneSecurityProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RPhoneSecurityProfile, sequence: xsd:unsignedLong)
     ns0:GetPhoneSecurityProfileRes(return: {phoneSecurityProfile: ns0:RPhoneSecurityProfile}, sequence: xsd:unsignedLong)
     ns0:GetPhoneTypeDisplayInstanceReq(productName: ns0:String32, protocol: ns0:String32, sequence: xsd:unsignedLong)
     ns0:GetPhoneTypeDisplayInstanceRes(displayInstance: ns0:String32, sequence: xsd:unsignedLong)
     ns0:GetPhysicalLocationReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RPhysicalLocation, sequence: xsd:unsignedLong)
     ns0:GetPhysicalLocationRes(return: {physicalLocation: ns0:RPhysicalLocation}, sequence: xsd:unsignedLong)
     ns0:GetPresenceGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RPresenceGroup, sequence: xsd:unsignedLong)
     ns0:GetPresenceGroupRes(return: {presenceGroup: ns0:RPresenceGroup}, sequence: xsd:unsignedLong)
     ns0:GetProcessNodeReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RProcessNode, sequence: xsd:unsignedLong)
     ns0:GetProcessNodeRes(return: {processNode: ns0:RProcessNode}, sequence: xsd:unsignedLong)
     ns0:GetProcessNodeServiceReq(({uuid: ns0:XUUID} | {processNodeName: ns0:XFkType, service: }), returnedTags: ns0:RProcessNodeService, sequence: xsd:unsignedLong)
     ns0:GetProcessNodeServiceRes(return: {processNodeService: ns0:RProcessNodeService}, sequence: xsd:unsignedLong)
     ns0:GetRecordingProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRecordingProfile, sequence: xsd:unsignedLong)
     ns0:GetRecordingProfileRes(return: {recordingProfile: ns0:RRecordingProfile}, sequence: xsd:unsignedLong)
     ns0:GetRegionReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRegion, sequence: xsd:unsignedLong)
     ns0:GetRegionRes(return: {region: ns0:RRegion}, sequence: xsd:unsignedLong)
     ns0:GetRemoteClusterReq(({clusterId: ns0:String255} | {uuid: ns0:XUUID}), returnedTags: ns0:RRemoteCluster, sequence: xsd:unsignedLong)
     ns0:GetRemoteClusterRes(return: {remoteCluster: ns0:RRemoteCluster}, sequence: xsd:unsignedLong)
     ns0:GetRemoteDestinationProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRemoteDestinationProfile, sequence: xsd:unsignedLong)
     ns0:GetRemoteDestinationProfileRes(return: {remoteDestinationProfile: ns0:RRemoteDestinationProfile}, sequence: xsd:unsignedLong)
     ns0:GetRemoteDestinationReq(({destination: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RRemoteDestination, sequence: xsd:unsignedLong)
     ns0:GetRemoteDestinationRes(return: {remoteDestination: ns0:RRemoteDestination}, sequence: xsd:unsignedLong)
     ns0:GetResourcePriorityNamespaceListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RResourcePriorityNamespaceList, sequence: xsd:unsignedLong)
     ns0:GetResourcePriorityNamespaceListRes(return: {resourcePriorityNamespaceList: ns0:RResourcePriorityNamespaceList}, sequence: xsd:unsignedLong)
     ns0:GetResourcePriorityNamespaceReq(({namespace: ns0:String10} | {uuid: ns0:XUUID}), returnedTags: ns0:RResourcePriorityNamespace, sequence: xsd:unsignedLong)
     ns0:GetResourcePriorityNamespaceRes(return: {resourcePriorityNamespace: ns0:RResourcePriorityNamespace}, sequence: xsd:unsignedLong)
     ns0:GetRouteFilterReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRouteFilter, sequence: xsd:unsignedLong)
     ns0:GetRouteFilterRes(return: {routeFilter: ns0:RRouteFilter}, sequence: xsd:unsignedLong)
     ns0:GetRouteGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRouteGroup, sequence: xsd:unsignedLong)
     ns0:GetRouteGroupRes(return: {routeGroup: ns0:RRouteGroup}, sequence: xsd:unsignedLong)
     ns0:GetRouteListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRouteList, sequence: xsd:unsignedLong)
     ns0:GetRouteListRes(return: {routeList: ns0:RRouteList}, sequence: xsd:unsignedLong)
     ns0:GetRoutePartitionReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRoutePartition, sequence: xsd:unsignedLong)
     ns0:GetRoutePartitionRes(return: {routePartition: ns0:RRoutePartition}, sequence: xsd:unsignedLong)
     ns0:GetRoutePatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), returnedTags: ns0:RRoutePattern, sequence: xsd:unsignedLong)
     ns0:GetRoutePatternRes(return: {routePattern: ns0:RRoutePattern}, sequence: xsd:unsignedLong)
     ns0:GetSIPNormalizationScriptReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSIPNormalizationScript, sequence: xsd:unsignedLong)
     ns0:GetSIPNormalizationScriptRes(return: {sIPNormalizationScript: ns0:RSIPNormalizationScript}, sequence: xsd:unsignedLong)
     ns0:GetSNMPCommunityStringReq(communityName: ns0:String32, sequence: xsd:unsignedLong)
     ns0:GetSNMPCommunityStringRes(return: {SNMPCommunityString: ns0:RSNMPCommunityString}, sequence: xsd:unsignedLong)
     ns0:GetSNMPMIB2ListReq(sysContact: ns0:String32, sequence: xsd:unsignedLong)
     ns0:GetSNMPMIB2ListRes(return: {SNMPMIB2List: ns0:RSNMPMIB2List}, sequence: xsd:unsignedLong)
     ns0:GetSNMPUserReq(userName: ns0:String32, sequence: xsd:unsignedLong)
     ns0:GetSNMPUserRes(return: {SNMPUser: ns0:RSNMPGetUser}, sequence: xsd:unsignedLong)
     ns0:GetSafCcdPurgeBlockLearnedRoutesReq(({uuid: ns0:XUUID} | {learnedPattern: ns0:String50, learnedPatternPrefix: ns0:String50, callControlIdentity: ns0:String50, ipAddress: ns0:String50}), returnedTags: ns0:RSafCcdPurgeBlockLearnedRoutes, sequence: xsd:unsignedLong)
     ns0:GetSafCcdPurgeBlockLearnedRoutesRes(return: {safCcdPurgeBlockLearnedRoutes: ns0:RSafCcdPurgeBlockLearnedRoutes}, sequence: xsd:unsignedLong)
     ns0:GetSafForwarderReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSafForwarder, sequence: xsd:unsignedLong)
     ns0:GetSafForwarderRes(return: {safForwarder: ns0:RSafForwarder}, sequence: xsd:unsignedLong)
     ns0:GetSafSecurityProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSafSecurityProfile, sequence: xsd:unsignedLong)
     ns0:GetSafSecurityProfileRes(return: {safSecurityProfile: ns0:RSafSecurityProfile}, sequence: xsd:unsignedLong)
     ns0:GetServiceParameterReq(({uuid: ns0:XUUID} | {processNodeName: ns0:XFkType, name: xsd:string, service: }), returnedTags: ns0:RServiceParameter, sequence: xsd:unsignedLong)
     ns0:GetServiceParameterRes(return: {serviceParameter: ns0:RServiceParameter}, sequence: xsd:unsignedLong)
     ns0:GetServiceProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RServiceProfile, sequence: xsd:unsignedLong)
     ns0:GetServiceProfileRes(return: {serviceProfile: ns0:RServiceProfile}, sequence: xsd:unsignedLong)
     ns0:GetSipDialRulesReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSipDialRules, sequence: xsd:unsignedLong)
     ns0:GetSipDialRulesRes(return: {sipDialRules: ns0:RSipDialRules}, sequence: xsd:unsignedLong)
     ns0:GetSipProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSipProfile, sequence: xsd:unsignedLong)
     ns0:GetSipProfileRes(return: {sipProfile: ns0:RSipProfile}, sequence: xsd:unsignedLong)
     ns0:GetSipRealmReq(({realm: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RSipRealm, sequence: xsd:unsignedLong)
     ns0:GetSipRealmRes(return: {sipRealm: ns0:RSipRealm}, sequence: xsd:unsignedLong)
     ns0:GetSipRoutePatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RSipRoutePattern, sequence: xsd:unsignedLong)
     ns0:GetSipRoutePatternRes(return: {sipRoutePattern: ns0:RSipRoutePattern}, sequence: xsd:unsignedLong)
     ns0:GetSipTrunkReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSipTrunk, sequence: xsd:unsignedLong)
     ns0:GetSipTrunkRes(return: {sipTrunk: ns0:RSipTrunk}, sequence: xsd:unsignedLong)
     ns0:GetSipTrunkSecurityProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSipTrunkSecurityProfile, sequence: xsd:unsignedLong)
     ns0:GetSipTrunkSecurityProfileRes(return: {sipTrunkSecurityProfile: ns0:RSipTrunkSecurityProfile}, sequence: xsd:unsignedLong)
     ns0:GetSoftKeySetReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSoftKeySet, sequence: xsd:unsignedLong)
     ns0:GetSoftKeySetRes(return: {softKeySet: ns0:RSoftKeySet}, sequence: xsd:unsignedLong)
     ns0:GetSoftKeyTemplateReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSoftKeyTemplate, sequence: xsd:unsignedLong)
     ns0:GetSoftKeyTemplateRes(return: {softKeyTemplate: ns0:RSoftKeyTemplate}, sequence: xsd:unsignedLong)
     ns0:GetSrstReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSrst, sequence: xsd:unsignedLong)
     ns0:GetSrstRes(return: {srst: ns0:RSrst}, sequence: xsd:unsignedLong)
     ns0:GetSyslogConfigurationReq(serverName: xsd:string, serviceGroup: , service: xsd:string, returnedTags: ns0:RSyslogConfiguration, sequence: xsd:unsignedLong)
     ns0:GetSyslogConfigurationRes(return: {syslogConfiguration: ns0:RSyslogConfiguration}, sequence: xsd:unsignedLong)
     ns0:GetTimePeriodReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RTimePeriod, sequence: xsd:unsignedLong)
     ns0:GetTimePeriodRes(return: {timePeriod: ns0:RTimePeriod}, sequence: xsd:unsignedLong)
     ns0:GetTimeScheduleReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RTimeSchedule, sequence: xsd:unsignedLong)
     ns0:GetTimeScheduleRes(return: {timeSchedule: ns0:RTimeSchedule}, sequence: xsd:unsignedLong)
     ns0:GetTodAccessReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RTodAccess, sequence: xsd:unsignedLong)
     ns0:GetTodAccessRes(return: {todAccess: ns0:RTodAccess}, sequence: xsd:unsignedLong)
     ns0:GetTransPatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), returnedTags: ns0:RTransPattern, sequence: xsd:unsignedLong)
     ns0:GetTransPatternRes(return: {transPattern: ns0:RTransPattern}, sequence: xsd:unsignedLong)
     ns0:GetTranscoderReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RTranscoder, sequence: xsd:unsignedLong)
     ns0:GetTranscoderRes(return: {transcoder: ns0:RTranscoder}, sequence: xsd:unsignedLong)
     ns0:GetTransformationProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RTransformationProfile, sequence: xsd:unsignedLong)
     ns0:GetTransformationProfileRes(return: {transformationProfile: ns0:RTransformationProfile}, sequence: xsd:unsignedLong)
     ns0:GetTvsCertificateReq(({uuid: ns0:XUUID} | {issuerName: xsd:string, serialNumber: xsd:string}), returnedTags: ns0:RTvsCertificate, sequence: xsd:unsignedLong)
     ns0:GetTvsCertificateRes(return: {tvsCertificate: ns0:RTvsCertificate}, sequence: xsd:unsignedLong)
     ns0:GetUcServiceReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RUcService, sequence: xsd:unsignedLong)
     ns0:GetUcServiceRes(return: {ucService: ns0:RUcService}, sequence: xsd:unsignedLong)
     ns0:GetUserGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RUserGroup, sequence: xsd:unsignedLong)
     ns0:GetUserGroupRes(return: {userGroup: ns0:RUserGroup}, sequence: xsd:unsignedLong)
     ns0:GetUserReq(({userid: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RUser, sequence: xsd:unsignedLong)
     ns0:GetUserRes(return: {user: ns0:RUser}, sequence: xsd:unsignedLong)
     ns0:GetVg224Req(({domainName: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RVg224, sequence: xsd:unsignedLong)
     ns0:GetVg224Res(return: {vg224: ns0:RVg224}, sequence: xsd:unsignedLong)
     ns0:GetVoiceMailPilotReq(({uuid: ns0:XUUID} | {dirn: ns0:String255, cssName: ns0:XFkType}), returnedTags: ns0:RVoiceMailPilot, sequence: xsd:unsignedLong)
     ns0:GetVoiceMailPilotRes(return: {voiceMailPilot: ns0:RVoiceMailPilot}, sequence: xsd:unsignedLong)
     ns0:GetVoiceMailPortReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RVoiceMailPort, sequence: xsd:unsignedLong)
     ns0:GetVoiceMailPortRes(return: {voiceMailPort: ns0:RVoiceMailPort}, sequence: xsd:unsignedLong)
     ns0:GetVoiceMailProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RVoiceMailProfile, sequence: xsd:unsignedLong)
     ns0:GetVoiceMailProfileRes(return: {voiceMailProfile: ns0:RVoiceMailProfile}, sequence: xsd:unsignedLong)
     ns0:GetVpnGatewayReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RVpnGateway, sequence: xsd:unsignedLong)
     ns0:GetVpnGatewayRes(return: {vpnGateway: ns0:RVpnGateway}, sequence: xsd:unsignedLong)
     ns0:GetVpnGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RVpnGroup, sequence: xsd:unsignedLong)
     ns0:GetVpnGroupRes(return: {vpnGroup: ns0:RVpnGroup}, sequence: xsd:unsignedLong)
     ns0:GetVpnProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RVpnProfile, sequence: xsd:unsignedLong)
     ns0:GetVpnProfileRes(return: {vpnProfile: ns0:RVpnProfile}, sequence: xsd:unsignedLong)
     ns0:LAarGroup(name: ns0:String32, uuid: ns0:XUUID)
     ns0:LAarGroupMatrix(prefixDigit: ns0:String255, aarGroupFromName: ns0:XFkType, aarGroupToName: ns0:XFkType)
     ns0:LAarGroupRelationship(aarGroupFromName: ns0:XFkType, aarGroupToName: ns0:XFkType, prefixDigit: ns0:String32, uuid: ns0:XUUID)
     ns0:LAddOnModule(loadInformation: ns0:XLoadInformation, model: , index: , uuid: ns0:XUUID)
     ns0:LAnalogPort(portNumber: , attendantDn: ns0:String255, unattendedPort: ns0:boolean, callerIdDn: ns0:String255, callerIdEnable: ns0:boolean, callingPartySelection: , digitSending: , expectedDigits: , sigDigits: {, enable: xsd:boolean}, lines: {({line: ns0:LPhoneLine} | {lineIdentifier: ns0:LNumplanIdentifier})}, prefixDn: ns0:String255, presentationBit: , silenceSuppressionThreshold: , smdiPortNumber: , startDialProtocol: , trunk: , trunkDirection: , trunkLevel: , trunkPadRx: , trunkPadTx: , vendorConfig: ns0:XVendorConfig, timer1: , timer2: , timer3: , timer4: , timer5: , timer6: , uuid: ns0:XUUID)
     ns0:LAnnouncement(name: xsd:string, description: xsd:string, announcementFile: xsd:string, uuid: ns0:XUUID)
     ns0:LAnnunciator(name: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, locationName: ns0:XFkType, useTrustedRelayPoint: , serverName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LAppServerInfo(appServerName: ns0:XFkType, appServerContent: , content: ns0:XContent, uuid: ns0:XUUID)
     ns0:LAppUser(userid: xsd:string, presenceGroupName: ns0:XFkType, acceptPresenceSubscription: ns0:boolean, acceptOutOfDialogRefer: ns0:boolean, acceptUnsolicitedNotification: ns0:boolean, allowReplaceHeader: ns0:boolean, isStandard: ns0:boolean, uuid: ns0:XUUID)
     ns0:LApplicationDialRules(name: xsd:string, description: xsd:string, numberBeginWith: xsd:string, numberOfDigits: , digitsToBeRemoved: , prefixPattern: xsd:string, priority: , uuid: ns0:XUUID)
     ns0:LApplicationServer(appServerType: , name: xsd:string, ipAddress: xsd:string, url: xsd:string, endUserUrl: xsd:string, processNodeName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LApplicationUserCapfProfile(applicationUser: ns0:XFkType, instanceId: xsd:string, certificateOperation: , authenticationMode: , authenticationString: xsd:string, keySize: , operationCompletion: xsd:string, certificationOperationStatus: , uuid: ns0:XUUID)
     ns0:LAudioCodecPreferenceList(name: xsd:string, description: xsd:string, uuid: ns0:XUUID)
     ns0:LBLFDirectedCallPark(label: ns0:String50, ({directedCallParkId: ns0:XUUID} | {directedCallParkDnAndPartition: {dnPattern: ns0:String255, routePartitionName: ns0:XFkType}}), labelAscii: ns0:String50, index: )
     ns0:LBillingServer(hostName: xsd:string, userId: xsd:string, password: xsd:string, directory: xsd:string, resendOnFailure: ns0:boolean, billingServerProtocol: , uuid: ns0:XUUID)
     ns0:LBusyLampField(blfDest: xsd:string, ({blfDirn: ns0:String255, routePartition: xsd:string}), label: xsd:string, asciiLabel: xsd:string, index: )
     ns0:LButton(feature: , label: ns0:String50, buttonNumber: , uuid: ns0:XUUID)
     ns0:LCallForwardAll(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, secondaryCallingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:LCallForwardAlternateParty(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, duration: )
     ns0:LCallForwardBusy(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:LCallForwardBusyInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:LCallForwardNoAnswer(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, duration: )
     ns0:LCallForwardNoAnswerInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, duration: )
     ns0:LCallForwardNoCoverage(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:LCallForwardNoCoverageInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:LCallForwardNotRegistered(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:LCallForwardNotRegisteredInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:LCallForwardOnFailure(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:LCallManager(name: ns0:String50, description: ns0:String50, autoRegistration: {startDn: ns0:String255, endDn: ns0:String255, nextDn: ns0:String255, routePartitionName: ns0:XFkType, e164Mask: ns0:String50}, processNodeName: ns0:XFkType, lbmGroup: ns0:XFkType, uuid: ns0:XUUID, ctiid: xsd:nonNegativeInteger)
     ns0:LCallManagerGroup(name: ns0:String50, tftpDefault: ns0:boolean, uuid: ns0:XUUID)
     ns0:LCallManagerMember(callManagerName: ns0:XFkType, priority: , uuid: ns0:XUUID)
     ns0:LCallPark(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, callManagerName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LCallPickupGroup(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, name: xsd:Name, pickupNotification: , pickupNotificationTimer: , callInfoForPickupNotification: {callingPartyInfo: ns0:boolean, calledPartyInfo: ns0:boolean}, uuid: ns0:XUUID)
     ns0:LCalledPartyTracing(directorynumber: xsd:string, description: xsd:string, uuid: ns0:XUUID)
     ns0:LCalledPartyTransformationPattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, calledPartyTransformationMask: xsd:string, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, routeFilterName: ns0:XFkType, calledPartyPrefixDigits: xsd:string, calledPartyNumberingPlan: , calledPartyNumberType: , uuid: ns0:XUUID)
     ns0:LCallerFilterList(name: ns0:String50, description: ns0:String128, isAllowedType: ns0:boolean, endUserIdName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LCallerFilterListMember(DnMask: ns0:String50, callerFilterMask: , uuid: ns0:XUUID)
     ns0:LCallingPartyTransformationPattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, callingPartyPrefixDigits: ns0:String50, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingPartyNumberingPlan: , callingPartyNumberType: , uuid: ns0:XUUID)
     ns0:LCallingSearchSpaceMember(routePartitionName: ns0:XFkType, index: , uuid: ns0:XUUID)
     ns0:LCallsQueue(maxCallersInQueue: , queueFullDestination: ns0:String50, callingSearchSpacePilotQueueFull: ns0:XFkType, maxWaitTimeInQueue: , maxWaitTimeDestination: ns0:String50, callingSearchSpaceMaxWaitTime: ns0:XFkType, noAgentDestination: ns0:String50, callingSearchSpaceNoAgent: ns0:XFkType, networkHoldMohAudioSourceID: , uuid: ns0:XUUID)
     ns0:LCcdAdvertisingService(name: ns0:String50, description: ns0:String50, isActivated: ns0:boolean, uuid: ns0:XUUID)
     ns0:LCcdHostedDN(hostedPattern: ns0:String50, description: ns0:String255, CcdHostedDnGroup: ns0:XFkType, pstnFailoverStripDigits: , pstnFailoverPrependDigits: ns0:String255, usePstnFailover: ns0:boolean, uuid: ns0:XUUID)
     ns0:LCcdHostedDNGroup(name: ns0:String255, description: ns0:String255, pstnFailoverStripDigits: , pstnFailoverPrependDigits: ns0:String255, usePstnFailover: ns0:boolean, uuid: ns0:XUUID)
     ns0:LCcdRequestingService(name: ns0:String50, description: ns0:String50, isActivated: ns0:boolean, routePartitionName: ns0:XFkType, learnedPatternPrefix: ns0:String50, pstnPrefix: ns0:String50, uuid: ns0:XUUID)
     ns0:LCcdRequestingServiceMember(trunkName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LCcmExternalIpMap(callManagerName: ns0:XFkType, ipAddressHost: ns0:String255, port: ns0:String255, uuid: ns0:XUUID)
     ns0:LCertificateRole(roleName: , uuid: ns0:XUUID)
     ns0:LCiscoCatalyst600024PortFXSGateway(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, traceFlag: ns0:boolean, useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, portSelectionOrder: , transmitUtf8: ns0:boolean, geoLocationFilterName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LCiscoCatalyst6000E1VoIPGateway(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIe: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIE: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , QSIGVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LCiscoCatalyst6000T1VoIPGatewayPri(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, mlppIndicationStatus: , mlppPreemption: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIe: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIE: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , QSIGVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LCiscoCatalyst6000T1VoIPGatewayT1(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, traceFlag: ns0:boolean, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, sendGeoLocation: ns0:boolean, trunkSelectionOrder: , clockReference: , csuParam: , digitSending: , pcmType: , fdlChannel: , yellowAlarm: , zeroSupression: , smdiBasePort: , handleDtmfPrecedenceSignals: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, geoLocationFilterName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LCmcInfo(code: ns0:String16, description: ns0:String50, uuid: ns0:XUUID)
     ns0:LCommonDeviceConfig(name: ns0:UniqueString50, softkeyTemplateName: ns0:XFkType, userLocale: , networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , mlppIndicationStatus: , useTrustedRelayPoint: ns0:boolean, preemption: , ipAddressingMode: , ipAddressingModePreferenceControl: , allowAutoConfigurationForPhones: , useImeForOutboundCalls: , uuid: ns0:XUUID)
     ns0:LCommonPhoneConfig(name: ns0:UniqueString50, description: ns0:String128, dndOption: , dndAlertingType: , backgroundImage: ns0:boolean, phonePersonalization: , phoneServiceDisplay: , sshUserId: ns0:String50, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , vpnGroupName: ns0:XFkType, vpnProfileName: ns0:XFkType, featureControlPolicy: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LConferenceBridge(name: ns0:UniqueName128, description: ns0:String128, product: , devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, subUnit: , loadInformation: ns0:XLoadInformation, maximumCapacity: , useTrustedRelayPoint: , securityProfileName: ns0:XFkType, destinationAddress: xsd:string, mcuConferenceBridgeSipPort: , sipProfile: ns0:XFkType, srtpAllowed: ns0:boolean, normalizationScript: ns0:XFkType, enableTrace: ns0:boolean, userName: xsd:string, password: xsd:string, httpPort: , useHttps: ns0:boolean, uuid: ns0:XUUID)
     ns0:LCredentialPolicy(name: ns0:String255, failedLogon: , resetFailedLogonAttempts: , lockoutDuration: , credChangeDuration: , credExpiresAfter: , minCredLength: , prevCredStoredNum: , inactiveDaysAllowed: , expiryWarningDays: , trivialCredCheck: ns0:boolean, uuid: ns0:XUUID)
     ns0:LCss(name: ns0:UniqueName50, description: ns0:String50, clause: ns0:String1024, dialPlanWizardGenId: , partitionUsage: , uuid: ns0:XUUID)
     ns0:LCtiRoutePoint(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, userLocale: , uuid: ns0:XUUID)
     ns0:LCumaServerSecurityProfile(name: xsd:string, description: xsd:string, securityMode: , transportType: , x509SubjectName: xsd:string, serverIpHostName: ns0:String255, uuid: ns0:XUUID)
     ns0:LCustomUserField(field: xsd:string, uuid: ns0:XUUID)
     ns0:LDateTimeGroup(name: xsd:string, timeZone: , dateformat: xsd:string, uuid: ns0:XUUID)
     ns0:LDateTimeGroupNtpReference(phoneNtpName: ns0:XFkType, selectionOrder: , uuid: ns0:XUUID)
     ns0:LDdi(name: ns0:String50, clause: ns0:String1024, dialPlanName: ns0:XFkType, digitAnalysisId: , uuid: ns0:XUUID)
     ns0:LDefaultDeviceProfile(name: ns0:UniqueString128, description: ns0:String255, product: , model: , class: , protocol: , protocolSide: , userHoldMohAudioSourceId: , userLocale: , phoneButtonTemplate: ns0:XFkType, softkeyTemplate: ns0:XFkType, privacy: , singleButtonBarge: , joinAcrossLines: , ignorePi: ns0:boolean, dndStatus: ns0:boolean, dndRingSetting: , dndOption: , mlppIndication: , preemption: , alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , uuid: ns0:XUUID)
     ns0:LDeviceMobility(name: xsd:string, subNet: xsd:string, subNetMaskSz: , uuid: ns0:XUUID)
     ns0:LDeviceMobilityGroup(name: xsd:string, description: xsd:string, uuid: ns0:XUUID)
     ns0:LDevicePool(name: ns0:UniqueString50, autoSearchSpaceName: ns0:XFkType, dateTimeSettingName: ns0:XFkType, callManagerGroupName: ns0:XFkType, mediaResourceListName: ns0:XFkType, regionName: ns0:XFkType, networkLocale: , srstName: ns0:XFkType, connectionMonitorDuration: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, locationName: ns0:XFkType, mobilityCssName: ns0:XFkType, physicalLocationName: ns0:XFkType, deviceMobilityGroupName: ns0:XFkType, revertPriority: , singleButtonBarge: , joinAcrossLines: , cgpnTransformationCssName: ns0:XFkType, cdpnTransformationCssName: ns0:XFkType, localRouteGroupName: ns0:XFkType, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, callingPartyNationalPrefix: ns0:String16, callingPartyInternationalPrefix: ns0:String16, callingPartyUnknownPrefix: ns0:String16, callingPartySubscriberPrefix: ns0:String16, adjunctCallingSearchSpace: ns0:XFkType, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, imeEnrolledPatternGroupName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LDevicePoolDeviceMobility(devicePoolName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LDeviceProfile(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , userHoldMohAudioSourceId: , traceFlag: ns0:boolean, mlppIndicationStatus: , preemption: , phoneTemplateName: ns0:XFkType, userLocale: , defaultProfileName: ns0:String50, currentProfileName: ns0:XFkType, loginTime: , loginDuration: , singleButtonBarge: , joinAcrossLines: , loginUserId: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, dndOption: , dndRingSetting: , dndStatus: ns0:boolean, emccCallingSearchSpace: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , softkeyTemplateName: ns0:XFkType, callInfoPrivacyStatus: , currentConfig: {userHoldMohAudioSourceId: , phoneTemplateName: ns0:XFkType, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , softkeyTemplateName: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, singleButtonBarge: , joinAcrossLines: , callInfoPrivacyStatus: , dndStatus: ns0:boolean, dndRingSetting: , dndOption: , alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , emccCallingSearchSpaceName: ns0:XFkType, deviceName: ns0:String255, model: , product: , deviceProtocol: , class: , addressMode: , allowAutoConfig: , remoteSrstOption: ns0:String50, remoteSrstIp: ns0:String15, remoteSrstPort: , remoteSipSrstIp: ns0:String15, remoteSipSrstPort: , geolocationInfo: ns0:String2048}, featureControlPolicy: ns0:XFkType, userlocale: , ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LDhcpServer(processNodeName: ns0:XFkType, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, primaryTftpServerIpAddress: xsd:string, secondaryTftpServerIpAddress: xsd:string, bootstrapServerIpAddress: xsd:string, domainName: xsd:string, tftpServerName: xsd:string, arpCacheTimeout: , ipAddressLeaseTime: , renewalTime: , rebindingTime: , uuid: ns0:XUUID)
     ns0:LDhcpSubnet(subnetIpAddress: xsd:string, primaryStartIpAddress: xsd:string, primaryEndIpAddress: xsd:string, secondaryStartIpAddress: xsd:string, secondaryEndIpAddress: xsd:string, primaryRouterIpAddress: xsd:string, secondaryRouterIpAddress: xsd:string, subnetMask: xsd:string, domainName: xsd:string, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, tftpServerName: xsd:string, primaryTftpServerIpAddress: xsd:string, secondaryTftpServerIpAddress: xsd:string, bootstrapServerIpAddress: xsd:string, arpCacheTimeout: , ipAddressLeaseTime: , renewalTime: , rebindingTime: , uuid: ns0:XUUID)
     ns0:LDialPlan(name: ns0:String50, description: ns0:String50, uuid: ns0:XUUID)
     ns0:LDialPlanTag(name: ns0:String50, dialPlanName: ns0:XFkType, operator: , suppressFromRouteFilter: ns0:boolean, uuid: ns0:XUUID)
     ns0:LDigitDiscardInstructionMember(dialPlanTagName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LDirectedCallPark(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, retrievalPrefix: xsd:string, reversionPattern: xsd:string, revertCssName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LDirectoryLookupDialRules(name: xsd:string, description: xsd:string, numberBeginWith: xsd:string, numberOfDigits: , digitsToBeRemoved: , prefixPattern: xsd:string, priority: , uuid: ns0:XUUID)
     ns0:LDirectoryUri(isPrimary: ns0:boolean, uri: ns0:String128, partition: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LDirn(pattern: xsd:string, routePartitionName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LEmccFeatureConfig(parameterName: ns0:String50, value: ns0:String255, uuid: ns0:XUUID)
     ns0:LEndUserCapfProfile(endUserId: ns0:XFkType, instanceId: xsd:string, certificationOperation: , authenticationMode: , authenticationString: xsd:string, keySize: , operationCompletion: xsd:string, certificationOperationStatus: , uuid: ns0:XUUID)
     ns0:LEnduserMember(userId: xsd:string)
     ns0:LEnterpriseFeatureAccessConfiguration(pattern: ns0:String16, routePartitionName: ns0:XFkType, description: xsd:string, uuid: ns0:XUUID)
     ns0:LExternalCallControlProfile(name: ns0:String50, primaryUri: ns0:String255, secondaryUri: ns0:String255, enableLoadBalancing: ns0:boolean, routingRequestTimer: , diversionReroutingCssName: ns0:XFkType, callTreatmentOnFailure: , uuid: ns0:XUUID)
     ns0:LFacInfo(name: ns0:String50, code: ns0:String16, authorizationLevel: , uuid: ns0:XUUID)
     ns0:LFallbackProfile(name: ns0:String50, description: xsd:string, advertisedFallbackDirectoryE164Number: xsd:string, qosSensistivityLevel: , callCss: , callAnswerTimer: , directoryNumberPartition: ns0:XFkType, directoryNumber: ns0:String16, numberOfDigitsForCallerIDPartialMatch: , numberOfCorrelationDtmfDigits: , uuid: ns0:XUUID)
     ns0:LFeatureControlConfig(featureName: ns0:String50, defaultValue: ns0:boolean, overrideDefault: ns0:boolean, enableSetting: ns0:boolean, uuid: ns0:XUUID)
     ns0:LFeatureControlPolicy(name: ns0:String50, description: ns0:String100, uuid: ns0:XUUID)
     ns0:LFixedMohAudioSource(sourceId: , name: xsd:string, multicast: ns0:boolean, enable: xsd:string, uuid: ns0:XUUID)
     ns0:LGatekeeper(name: ns0:UniqueString128, description: ns0:String128, rrqTimeToLive: , retryTimeout: , enableDevice: ns0:boolean, uuid: ns0:XUUID)
     ns0:LGateway(domainName: xsd:string, description: xsd:string, product: , protocol: , callManagerGroupName: ns0:XFkType, scratch: xsd:string, loadInformation: xsd:string, uuid: ns0:XUUID)
     ns0:LGatewayEndpointAnalog(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, port: ns0:LAnalogPort, trunkSelectionOrder: , transmitUtf8: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, callingPartyNumberPrefix: ns0:String16, callingPartyStripDigits: , callingPartyUnknownTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnknown: ns0:boolean, hotlineDevice: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, imeE164DirectoryNumber: ns0:String16, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LGatewayEndpointAnalogAccess(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:LGatewayEndpointAnalog, uuid: ns0:XUUID)
     ns0:LGatewayEndpointDigitalAccessBri(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:LGatewayEndpointDigitalBri, uuid: ns0:XUUID)
     ns0:LGatewayEndpointDigitalAccessPri(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:LGatewayEndpointDigitalPri, uuid: ns0:XUUID)
     ns0:LGatewayEndpointDigitalAccessT1(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:LGatewayEndpointDigitalT1, uuid: ns0:XUUID)
     ns0:LGatewayEndpointDigitalBri(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkLocale: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, briProtocol: , calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , clockReference: , csuParam: , dChannelEnable: ns0:boolean, channelSelectionOrder: , pcmType: , firstDelay: , intraDelay: , redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , prefix: xsd:string, presentationBit: , sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {xsd:nonNegativeInteger, enable: xsd:boolean}, statusPoll: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, geoLocationFilterName: ns0:XFkType, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, GClearEnable: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LGatewayEndpointDigitalPri(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, mlppIndicationStatus: , mlppPreemption: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIE: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIe: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {xsd:nonNegativeInteger, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , GClearEnable: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , qsigVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, routeClassSignalling: , nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LGatewayEndpointDigitalT1(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, v150: ns0:boolean, geoLocationFilterName: ns0:XFkType, trunkSelectionOrder: , clockReference: , csuParam: , digitSending: , pcmType: , fdlChannel: , yellowAlarm: , zeroSupression: , smdiBasePort: , handleDtmfPrecedenceSignals: ns0:boolean, encodeOutboundVoiceRouteClass: ns0:boolean, routeClassSignalling: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LGatewaySccp(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, transmitUtf8: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, callingPartyNumberPrefix: ns0:String16, callingPartyStripDigits: , callingPartyUnknownTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnknown: ns0:boolean, hotlineDevice: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, phoneTemplateName: ns0:XFkType, securityProfileName: ns0:XFkType, userLocale: , deviceMobilityMode: , ownerUserId: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVM: , allowCtiControlFlag: ns0:boolean, remoteDevice: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, unattendedPort: ns0:boolean, presenceGroupName: ns0:XFkType, mlppIndicationStatus: , preemption: , hlogStatus: ns0:boolean, ignorePresentationIndicators: , lines: {({line: ns0:LPhoneLine} | {lineIdentifier: ns0:LNumplanIdentifier})}, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LGatewaySccpEndpoints(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:LGatewaySccp, uuid: ns0:XUUID)
     ns0:LGatewaySubunits(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , uuid: ns0:XUUID)
     ns0:LGeoLocation(name: ns0:String50, country: xsd:string, description: ns0:String255, nationalSubDivision: ns0:String100, district: ns0:String255, communityName: ns0:String255, cityDivision: ns0:String255, neighbourhood: ns0:String255, street: ns0:String255, leadingStreetDirection: ns0:String50, trailingStreetSuffix: ns0:String50, streetSuffix: ns0:String255, houseNumber: ns0:String16, houseNumberSuffix: ns0:String100, landmark: ns0:String255, location: ns0:String255, floor: ns0:String16, occupantName: ns0:String255, postalCode: ns0:String100, uuid: ns0:XUUID)
     ns0:LGeoLocationFilter(name: ns0:String50, description: ns0:String255, useCountry: ns0:boolean, useNationalSubDivision: ns0:boolean, useDistrict: ns0:boolean, useCommunityName: ns0:boolean, useCityDivision: ns0:boolean, useNeighbourhood: ns0:boolean, useStreet: ns0:boolean, useLeadingStreetDirection: ns0:boolean, useTrailingStreetSuffix: ns0:boolean, useStreetSuffix: ns0:boolean, useHouseNumber: ns0:boolean, useHouseNumberSuffix: ns0:boolean, useLandmark: ns0:boolean, useLocation: ns0:boolean, useFloor: ns0:boolean, useOccupantName: ns0:boolean, usePostalCode: ns0:boolean, uuid: ns0:XUUID)
     ns0:LGeoLocationPolicy(name: ns0:String50, country: xsd:string, description: ns0:String255, nationalSubDivision: ns0:String100, district: ns0:String255, communityName: ns0:String255, cityDivision: ns0:String255, neighbourhood: ns0:String255, street: ns0:String255, leadingStreetDirection: ns0:String50, trailingStreetSuffix: ns0:String50, streetSuffix: ns0:String255, houseNumber: ns0:String16, houseNumberSuffix: ns0:String100, landmark: ns0:String255, location: ns0:String255, floor: ns0:String16, occupantName: ns0:String255, postalCode: ns0:String100, uuid: ns0:XUUID)
     ns0:LH323Gateway(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , pathReplacementSupport: ns0:boolean, traceFlag: ns0:boolean, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , srtpAllowed: ns0:boolean, mtpRequired: ns0:boolean, callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , enableInboundFaststart: ns0:boolean, enableOutboundFaststart: ns0:boolean, codecForOutboundFaststart: , transmitUtf8: ns0:boolean, signalingPort: , allowH235PassThrough: ns0:boolean, sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String50, calledPartyIeNumberType: , callingPartyIeNumberType: , calledNumberingPlan: , callingNumberingPlan: , callingPartyNationalPrefix: ns0:String16, callingPartyInternationalPrefix: ns0:String16, callingPartyUnknownPrefix: ns0:String16, callingPartySubscriberPrefix: ns0:String16, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, displayIeDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, useDevicePoolCalledCssNatl: ns0:boolean, useDevicePoolCalledCssIntl: ns0:boolean, useDevicePoolCalledCssUnkn: ns0:boolean, useDevicePoolCalledCssSubs: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LH323Line(index: , label: ns0:String50, asciiLabel: ns0:String50, display: ns0:String50, dirn: ns0:LDirn, displayAscii: ns0:String50, e164Mask: ns0:String255, dialPlanWizardId: , maxNumCalls: , busyTrigger: , callInfoDisplay: {callerName: ns0:boolean, callerNumber: ns0:boolean, redirectedNumber: ns0:boolean, dialedNumber: ns0:boolean}, recordingProfileName: ns0:XFkType, monitoringCssName: ns0:XFkType, recordingFlag: , audibleMwi: , speedDial: xsd:string, partitionUsage: , uuid: ns0:XUUID, ctiid: xsd:nonNegativeInteger)
     ns0:LH323Phone(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, traceFlag: ns0:boolean, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, remoteDevice: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , srtpAllowed: ns0:boolean, unattendedPort: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, mtpRequired: ns0:boolean, mtpPreferredCodec: , callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , displayIEDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, presenceGroupName: ns0:XFkType, hlogStatus: ns0:boolean, ownerUserName: ns0:XFkType, signalingPort: , ignorePresentationIndicators: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LH323Trunk(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, traceFlag: ns0:boolean, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , srtpAllowed: ns0:boolean, unattendedPort: ns0:boolean, mtpRequired: ns0:boolean, callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , displayIEDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, enableInboundFaststart: ns0:boolean, enableOutboundFaststart: ns0:boolean, codecForOutboundFaststart: , allowH235PassThrough: ns0:boolean, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , transmitUtf8: ns0:boolean, signalingPort: , nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String50, calledPartyIeNumberType: , callingPartyIeNumberType: , calledNumberingPlan: , callingNumberingPlan: , pathReplacementSupport: ns0:boolean, ({gateKeeperInfo: {gateKeeper: ns0:XFkType, terminalType: , technologyPrefix: ns0:String50, zone: ns0:String50}} | {remoteServerinfo: {server1: ns0:String255, server2: ns0:String255, server3: ns0:String255}}), ictPassingPrecedenceLevelThroughUuie: ns0:boolean, ictSecurityAccessLevel: , isSafEnabled: ns0:boolean, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, useDevicePoolCalledCssNatl: ns0:boolean, useDevicePoolCalledCssIntl: ns0:boolean, useDevicePoolCalledCssUnkn: ns0:boolean, useDevicePoolCalledCssSubs: ns0:boolean, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, runOnEveryNode: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LH323TrunkDestination(addressIpv4: ns0:String255, sortOrder: , uuid: ns0:XUUID)
     ns0:LHandoffConfiguration(pattern: ns0:String16, routePartitionName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LHuntForwardInfoBusy(usePersonalPreferences: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, maxHuntduration: )
     ns0:LHuntForwardInfoNoAnswer(usePersonalPreferences: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, maxHuntduration: )
     ns0:LHuntList(name: xsd:Name, description: xsd:string, callManagerGroupName: ns0:XFkType, routeListEnabled: ns0:boolean, voiceMailUsage: ns0:boolean, uuid: ns0:XUUID)
     ns0:LHuntListMember(lineGroupName: ns0:XFkType, selectionOrder: , uuid: ns0:XUUID)
     ns0:LHuntPilot(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , patternPrecedence: , provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , huntListName: ns0:XFkType, parkMonForwardNoRetrieve: {usePersonalPreferences: ns0:boolean, destination: ns0:String50, callingSearchSpaceName: ns0:XFkType}, alertingName: ns0:String50, asciiAlertingName: ns0:String32, aarNeighborhoodName: ns0:XFkType, forwardHuntNoAnswer: {usePersonalPreferences: ns0:boolean, destination: xsd:string, callingSearchSpaceName: ns0:XFkType}, forwardHuntBusy: {usePersonalPreferences: ns0:boolean, destination: xsd:string, callingSearchSpaceName: ns0:XFkType}, callPickupGroupName: ns0:XFkType, maxHuntduration: , releaseClause: , displayConnectedNumber: ns0:boolean, queueCalls: ns0:LCallsQueue, uuid: ns0:XUUID)
     ns0:LImeClient(name: ns0:String50, description: xsd:string, domain: ns0:String255, isActivated: ns0:boolean, sipTrunkName: ns0:XFkType, primaryImeServerName: ns0:XFkType, secondaryImeServerName: ns0:XFkType, learnedRouteFilterGroupName: ns0:XFkType, exclusionNumberGroupName: ns0:XFkType, firewallName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LImeClientMember(enrolledPatternGroupName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LImeE164Transformation(name: ns0:String50, description: xsd:string, cgpnTransformationCssName: ns0:XFkType, isCgpnPreTransformation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, isCdpnPreTransformation: ns0:boolean, incomingCgpnTransformationProfileName: ns0:XFkType, incomingCdpnTransformationProfileName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LImeEnrolledPattern(pattern: ns0:String16, description: xsd:string, imeEnrolledPatternGroupName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LImeEnrolledPatternGroup(name: ns0:String50, description: xsd:string, fallbackProfileName: ns0:XFkType, isPatternAllAlias: ns0:boolean, uuid: ns0:XUUID)
     ns0:LImeExclusionNumber(pattern: ns0:String16, description: xsd:string, imeExclusionNumberGroupName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LImeExclusionNumberGroup(name: ns0:String50, description: xsd:string, uuid: ns0:XUUID)
     ns0:LImeFirewall(name: ns0:String50, description: xsd:string, ipAddress: ns0:String15, port: , uuid: ns0:XUUID)
     ns0:LImeRouteFilterElement(name: ns0:String50, description: xsd:string, elementType: , imeRouteFilterGroupName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LImeRouteFilterGroup(name: ns0:String50, description: xsd:string, groupTrustSetting: ns0:boolean, uuid: ns0:XUUID)
     ns0:LImeServer(name: ns0:String50, description: xsd:string, ipAddress: xsd:string, port: , deviceSecurityMode: , applicationUser: ns0:XFkType, reconnectInterval: , uuid: ns0:XUUID)
     ns0:LImportedDirectoryUriCatalogs(name: xsd:string, description: xsd:string, routeString: xsd:string, lastLoadedFileName: xsd:string, fileLoadDateTime: , uuid: ns0:XUUID)
     ns0:LInterClusterServiceProfile(interClusterService: , isActivated: ns0:boolean, sipTrunkName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LIpPhoneServices(serviceName: ns0:UniqueString128, asciiServiceName: ns0:UniqueString128, serviceDescription: ns0:String128, serviceUrl: xsd:string, secureServiceUrl: xsd:string, serviceCategory: , serviceType: , serviceVendor: xsd:string, serviceVersion: xsd:string, enabled: ns0:boolean, enterpriseSubscription: ns0:boolean, uuid: ns0:XUUID)
     ns0:LIpPhoneServicesParameter(name: ns0:UniqueString50, displayName: ns0:String128, default: ns0:String255, description: ns0:String255, paramRequired: ns0:boolean, paramPassword: ns0:boolean, uuid: ns0:XUUID)
     ns0:LIvrUserLocale(userLocale: , orderIndex: , uuid: ns0:XUUID)
     ns0:LLbmGroup(name: xsd:string, Description: xsd:string, ProcessnodeActive: ns0:XFkType, ProcessnodeStandby: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LLbmHubGroup(name: xsd:string, description: xsd:string, member1: xsd:string, member2: xsd:string, member3: xsd:string, uuid: ns0:XUUID)
     ns0:LLdapDirectory(name: ns0:String50, ldapDn: ns0:String128, userSearchBase: ns0:String255, repeatable: ns0:boolean, intervalValue: , scheduleUnit: , nextExecTime: ns0:String32, uuid: ns0:XUUID)
     ns0:LLdapFilter(name: ns0:String4096, filter: ns0:String255, uuid: ns0:XUUID)
     ns0:LLdapSyncCustomField(ldapConfigurationName: xsd:string, customUserField: xsd:string, ldapUserField: xsd:string, uuid: ns0:XUUID)
     ns0:LLicenseCapabilities(userid: xsd:string, enableUps: ns0:boolean, enableUpc: ns0:boolean, uuid: ns0:XUUID)
     ns0:LLine(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, aarDestinationMask: ns0:String128, aarKeepCallHistory: ns0:boolean, aarVoiceMailEnabled: ns0:boolean, callPickupGroupName: ns0:XFkType, autoAnswer: , networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , alertingName: ns0:String50, asciiAlertingName: ns0:String32, presenceGroupName: ns0:XFkType, shareLineAppearanceCssName: ns0:XFkType, voiceMailProfileName: ns0:XFkType, patternPrecedence: , releaseClause: , hrDuration: , hrInterval: , cfaCssPolicy: , defaultActivatedDeviceName: ns0:XFkType, parkMonForwardNoRetrieveDn: ns0:String50, parkMonForwardNoRetrieveIntDn: ns0:String50, parkMonForwardNoRetrieveVmEnabled: ns0:boolean, parkMonForwardNoRetrieveIntVmEnabled: ns0:boolean, parkMonForwardNoRetrieveCssName: ns0:XFkType, parkMonForwardNoRetrieveIntCssName: ns0:XFkType, parkMonReversionTimer: , partyEntranceTone: , allowCtiControlFlag: ns0:boolean, rejectAnonymousCall: ns0:boolean, uuid: ns0:XUUID)
     ns0:LLineAppearanceAssociationForPresence(laapAssociate: ns0:XFkType, laapProductType: ns0:String128, laapDeviceName: ns0:String128, laapDirectory: ns0:String128, laapPartition: ns0:String128, laapDescription: ns0:String128, uuid: ns0:XUUID)
     ns0:LLineAssociation(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), index: )
     ns0:LLineGroup(name: xsd:Name, distributionAlgorithm: , rnaReversionTimeOut: , huntAlgorithmNoAnswer: , huntAlgorithmBusy: , huntAlgorithmNotAvailable: , autoLogOffHunt: ns0:boolean, uuid: ns0:XUUID)
     ns0:LLineGroupMember(lineSelectionOrder: , directoryNumber: ns0:LDirn, uuid: ns0:XUUID)
     ns0:LLocation(name: ns0:String50, id: , kbits: , videoKbits: , withinAudioBandwidth: , withinVideoBandwidth: , withinImmersiveKbits: , uuid: ns0:XUUID)
     ns0:LLocationBetween(locationName: ns0:XFkType, weight: , audioBandwidth: , videoBandwidth: , immersiveBandwidth: , uuid: ns0:XUUID)
     ns0:LLocationRelationship(locationName: ns0:XFkType, rsvpSetting: , uuid: ns0:XUUID)
     ns0:LMediaResourceGroup(name: ns0:String50, description: ns0:String50, multicast: ns0:boolean, uuid: ns0:XUUID)
     ns0:LMediaResourceGroupMember(deviceName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LMediaResourceList(name: ns0:String50, clause: ns0:String1024, uuid: ns0:XUUID)
     ns0:LMediaResourceListMember(mediaResourceGroupName: ns0:XFkType, order: , uuid: ns0:XUUID)
     ns0:LMeetMe(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, minimumSecurityLevel: , uuid: ns0:XUUID)
     ns0:LMessageWaiting(pattern: xsd:string, routePartitionName: ns0:XFkType, description: ns0:String128, messageWaitingIndicator: ns0:boolean, callingSearchSpaceName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LMlppDomain(domainName: xsd:string, domainId: xsd:string, uuid: ns0:XUUID)
     ns0:LMobileSmartClientProfile(name: xsd:string, mobileSmartClient: , enableSnrUri: xsd:string, enableCFAUri: xsd:string, handOffUri: xsd:string, uuid: ns0:XUUID)
     ns0:LMobileVoiceAccess(pattern: xsd:string, routePartitionName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LMobileVoiceMember(userLocale: , orderIndex: , uuid: ns0:XUUID)
     ns0:LMobilityProfile(name: ns0:String50, description: xsd:string, mobileClientCallingOption: , dvofServiceAccessNumber: xsd:string, dvorCallerId: xsd:string, uuid: ns0:XUUID)
     ns0:LMohAudioSource(sourceId: , name: ns0:String50, sourceFile: ns0:String255, multicast: ns0:boolean, repeat: ns0:boolean, mohFileStatus: , initialAnnouncement: ns0:XFkType, periodicAnnouncement: ns0:XFkType, periodicAnnouncementInterval: , localeAnnouncement: , initialAnnouncementPlayed: ns0:boolean, uuid: ns0:XUUID)
     ns0:LMohServer(name: xsd:string, description: xsd:string, processNodeName: ns0:XFkType, devicePoolName: ns0:XFkType, locationName: ns0:XFkType, maxUnicastConnections: , maxMulticastConnections: , fixedAudioSourceDevice: xsd:string, runFlag: ns0:boolean, useTrustedRelayPoint: , isMultiCastEnabled: ns0:boolean, baseMulticastIpaddress: xsd:string, baseMulticastPort: , multicastIncrementOnIp: ns0:boolean, uuid: ns0:XUUID)
     ns0:LMtp(mtpType: , name: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, trustedRelayPoint: ns0:boolean, uuid: ns0:XUUID)
     ns0:LNormalizationScriptInfo(parameterName: ns0:String128, parameterValue: ns0:String128, uuid: ns0:XUUID)
     ns0:LNumplanIdentifier(directoryNumber: ns0:String255, routePartitionName: ns0:String50)
     ns0:LParameterMember(parameter: , value: xsd:string, selectionOrder: )
     ns0:LPatternMember(description: xsd:string, selectionOrder: )
     ns0:LPhone(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, traceFlag: ns0:boolean, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, securityProfileName: ns0:XFkType, sipProfileName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, numberOfButtons: , phoneTemplateName: ns0:XFkType, primaryPhoneName: ns0:XFkType, ringSettingIdleBlfAudibleAlert: , ringSettingBusyBlfAudibleAlert: , userLocale: , networkLocale: , idleTimeout: , authenticationUrl: xsd:string, directoryUrl: xsd:string, idleUrl: xsd:string, informationUrl: xsd:string, messagesUrl: xsd:string, proxyServerUrl: xsd:string, servicesUrl: xsd:string, softkeyTemplateName: ns0:XFkType, loginUserId: ns0:String255, defaultProfileName: ns0:XFkType, enableExtensionMobility: ns0:boolean, currentProfileName: ns0:XFkType, loginTime: , loginDuration: , currentConfig: {userHoldMohAudioSourceId: , phoneTemplateName: ns0:XFkType, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , softkeyTemplateName: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, singleButtonBarge: , joinAcrossLines: , callInfoPrivacyStatus: , dndStatus: ns0:boolean, dndRingSetting: , dndOption: , alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , emccCallingSearchSpaceName: ns0:XFkType, deviceName: ns0:String255, model: , product: , deviceProtocol: , class: , addressMode: , allowAutoConfig: , remoteSrstOption: ns0:String50, remoteSrstIp: ns0:String15, remoteSrstPort: , remoteSipSrstIp: ns0:String15, remoteSipSrstPort: , geolocationInfo: ns0:String2048}, singleButtonBarge: , joinAcrossLines: , builtInBridgeStatus: , callInfoPrivacyStatus: , hlogStatus: , ownerUserName: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , subscribeCallingSearchSpaceName: ns0:XFkType, rerouteCallingSearchSpaceName: ns0:XFkType, allowCtiControlFlag: ns0:boolean, presenceGroupName: ns0:XFkType, unattendedPort: ns0:boolean, requireDtmfReception: ns0:boolean, rfc2833Disabled: ns0:boolean, certificateOperation: , authenticationMode: , keySize: , authenticationString: ns0:String128, certificateStatus: , upgradeFinishTime: xsd:string, deviceMobilityMode: , roamingDevicePoolName: ns0:XFkType, remoteDevice: ns0:boolean, dndOption: , dndRingSetting: , dndStatus: ns0:boolean, isActive: ns0:boolean, isDualMode: ns0:boolean, mobilityUserIdName: ns0:XFkType, phoneSuite: , phoneServiceDisplay: , isProtected: ns0:boolean, mobileSmartClientProfileName: ns0:XFkType, mtpRequired: ns0:boolean, mtpPreferedCodec: , dialRulesName: ns0:XFkType, sshUserId: ns0:String50, digestUser: ns0:String255, outboundCallRollover: , hotlineDevice: ns0:boolean, secureInformationUrl: ns0:String255, secureDirectoryUrl: ns0:String255, secureMessageUrl: ns0:String255, secureServicesUrl: ns0:String255, secureAuthenticationUrl: ns0:String255, secureIdleUrl: ns0:String255, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , featureControlPolicy: ns0:XFkType, deviceTrustMode: , earlyOfferSupportForVoiceCall: ns0:boolean, requireThirdPartyRegistration: ns0:boolean, blockIncomingCallsWhenRoaming: ns0:boolean, homeNetworkId: xsd:string, AllowPresentationSharingUsingBfcp: ns0:boolean, requireOffPremiseLocation: ns0:boolean, userlocale: , ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LPhoneButtonTemplate(name: xsd:string, isUserModifiable: ns0:boolean, uuid: ns0:XUUID)
     ns0:LPhoneLine(index: , label: ns0:String50, asciiLabel: ns0:String50, display: ns0:String50, dirn: ns0:LDirn, ringSetting: , consecutiveRingSetting: , ringSettingIdlePickupAlert: , ringSettingActivePickupAlert: , displayAscii: ns0:String50, e164Mask: ns0:String255, dialPlanWizardId: , mwlPolicy: , maxNumCalls: , busyTrigger: , callInfoDisplay: {callerName: ns0:boolean, callerNumber: ns0:boolean, redirectedNumber: ns0:boolean, dialedNumber: ns0:boolean}, recordingProfileName: ns0:XFkType, monitoringCssName: ns0:XFkType, recordingFlag: , audibleMwi: , speedDial: xsd:string, partitionUsage: , missedCallLogging: ns0:boolean, uuid: ns0:XUUID, ctiid: xsd:nonNegativeInteger)
     ns0:LPhoneNtp(ipAddress: xsd:string, description: xsd:string, mode: , uuid: ns0:XUUID)
     ns0:LPhoneSecurityProfile(phoneType: , protocol: , name: xsd:string, description: xsd:string, deviceSecurityMode: , authenticationMode: , keySize: , tftpEncryptedConfig: ns0:boolean, nonceValidityTime: , transportType: , sipPhonePort: , enableDigestAuthentication: ns0:boolean, excludeDigestCredentials: ns0:boolean, uuid: ns0:XUUID)
     ns0:LPhysicalLocation(name: xsd:string, description: xsd:string, uuid: ns0:XUUID)
     ns0:LPickupGroupMember(priority: , ({pickupGroupName: ns0:XFkType} | {pickupDnAndPartition: {dnPattern: ns0:String255, routePartitionName: ns0:XFkType}}), uuid: ns0:XUUID)
     ns0:LPolicyRelationship(geoLocationPolicyAName: ns0:XFkType, geoLocationDeviceA: , geoLocationPolicyBName: ns0:XFkType, geoLocationDeviceB: , logicalPartitionPolicy: , uuid: ns0:XUUID)
     ns0:LPresenceGroup(name: xsd:string, description: xsd:string, uuid: ns0:XUUID)
     ns0:LPresenceGroupMember(presenceGroupName: ns0:XFkType, subscriptionPermission: , uuid: ns0:XUUID)
     ns0:LProcessNode(name: ns0:String255, description: ns0:String50, mac: ns0:XMacAddress, ipv6Name: xsd:string, nodeUsage: , lbmHubGroup: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LProcessNodeService(processNodeName: ns0:XFkType, service: , traceLevel: , userCategories: , enable: ns0:boolean, numFiles: , maxFileSize: , isActive: ns0:boolean, uuid: ns0:XUUID)
     ns0:LRecordingProfile(name: ns0:String50, recordingCssName: ns0:XFkType, recorderDestination: xsd:string, uuid: ns0:XUUID)
     ns0:LRegion(name: ns0:String50, defaultCodec: , uuid: ns0:XUUID)
     ns0:LRegionMatrix(bandwidth: , videoBandwidth: , lossyNetwork: , regionAName: ns0:XFkType, regionBName: ns0:XFkType, codecPreference: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LRegionRelationship(regionName: ns0:XFkType, bandwidth: , videoBandwidth: , lossyNetwork: , codecPreference: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LRemoteCluster(clusterId: ns0:String255, description: xsd:string, fullyQualifiedName: ns0:String50, emcc: ns0:LRemoteClusterMember, pstnAccess: ns0:LRemoteClusterMember, rsvpAgent: ns0:LRemoteClusterMember, uuid: ns0:XUUID)
     ns0:LRemoteClusterMember(enabled: ns0:boolean, remoteIpAddress1: ns0:String15, remoteIpAddress2: ns0:String15, remoteIpAddress3: ns0:String15)
     ns0:LRemoteDestination(name: xsd:string, destination: xsd:string, answerTooSoonTimer: , answerTooLateTimer: , delayBeforeRingingCell: , ({remoteDestinationProfileName: ns0:XFkType} | {dualModeDeviceName: ns0:XFkType}), isMobilePhone: ns0:boolean, enableMobileConnect: ns0:boolean, timeZone: , todAccessName: ns0:XFkType, mobileSmartClientName: ns0:XFkType, mobilityProfileName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LRemoteDestinationProfile(name: xsd:string, description: xsd:string, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , callInfoPrivacyStatus: , userId: xsd:string, ignorePresentationIndicators: ns0:boolean, rerouteCallingSearchSpaceName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, userLocale: , primaryPhoneName: ns0:XFkType, dndOption: , dndStatus: ns0:boolean, mobileSmartClientProfileName: ns0:XFkType, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LResourcePriorityNamespace(namespace: ns0:String10, description: xsd:string, uuid: ns0:XUUID)
     ns0:LResourcePriorityNamespaceList(name: ns0:String50, description: xsd:string, uuid: ns0:XUUID)
     ns0:LResourcePriorityNamespaceListMember(resourcePriorityNamespaceName: ns0:XFkType, index: , uuid: ns0:XUUID)
     ns0:LRouteFilter(name: xsd:string, clause: xsd:string, dialPlanName: ns0:XFkType, dialPlanWizardGenId: , uuid: ns0:XUUID)
     ns0:LRouteFilterMember(dialPlanTagName: ns0:XFkType, digits: xsd:nonNegativeInteger, operator: , priority: , uuid: ns0:XUUID)
     ns0:LRouteGroup(name: xsd:Name, dialPlanWizardGenld: , distributionAlgorithm: , uuid: ns0:XUUID)
     ns0:LRouteGroupMember(deviceSelectionOrder: , dialPlanWizardGenId: , deviceName: ns0:XFkType, port: , uuid: ns0:XUUID)
     ns0:LRouteList(name: xsd:string, description: xsd:string, callManagerGroupName: ns0:XFkType, routeListEnabled: ns0:boolean, runOnEveryNode: ns0:boolean, uuid: ns0:XUUID)
     ns0:LRouteListMember(routeGroupName: ns0:XFkType, selectionOrder: , calledPartyTransformationMask: ns0:String50, callingPartyTransformationMask: ns0:String50, dialPlanWizardGenId: , digitDiscardInstructionName: ns0:XFkType, callingPartyPrefixDigits: ns0:String50, prefixDigitsOut: ns0:String50, useFullyQualifiedCallingPartyNumber: , callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , uuid: ns0:XUUID)
     ns0:LRoutePartition(name: xsd:string, description: xsd:string, dialPlanWizardGenId: , timeScheduleIdName: ns0:XFkType, useOriginatingDeviceTimeZone: ns0:boolean, timeZone: , partitionUsage: , uuid: ns0:XUUID)
     ns0:LRoutePattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, dialPlanWizardGenId: , digitDiscardInstructionName: ns0:XFkType, networkLocation: , patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , supportOverlapSending: ns0:boolean, patternPrecedence: , releaseClause: , allowDeviceOverride: ns0:boolean, provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , authorizationCodeRequired: ns0:boolean, authorizationLevelRequired: , clientCodeRequired: ns0:boolean, withTag: ns0:String50, withValueClause: ns0:String255, resourcePriorityNamespaceName: ns0:XFkType, routeClass: , uuid: ns0:XUUID)
     ns0:LRoutePlan(dnOrPattern: ns0:String255, partition: ns0:XFkType, type: , routeDetail: xsd:string, uuid: ns0:XUUID)
     ns0:LSIPNormalizationScript(name: xsd:string, description: xsd:string, content: xsd:string, scriptExecutionErrorRecoveryAction: , systemResourceErrorRecoveryAction: , maxMemoryThreshold: xsd:string, maxLuaInstructionsThreshold: xsd:string, isStandard: ns0:boolean, uuid: ns0:XUUID)
     ns0:LSafCcdPurgeBlockLearnedRoutes(learnedPattern: ns0:String50, learnedPatternPrefix: ns0:String50, callControlIdentity: ns0:String50, ipAddress: ns0:String50, uuid: ns0:XUUID)
     ns0:LSafForwarder(name: ns0:String255, description: ns0:String255, clientLabel: ns0:String255, safSecurityProfile: ns0:XFkType, ipAddress: ns0:String255, port: , safReconnectInterval: , safNotificationsWindowSize: , uuid: ns0:XUUID)
     ns0:LSafForwarderMember(callManagerName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LSafSecurityProfile(name: ns0:String255, description: ns0:String255, userid: ns0:String50, uuid: ns0:XUUID)
     ns0:LServiceParameter(processNodeName: ns0:XFkType, name: xsd:string, service: , value: xsd:string, valueType: , uuid: ns0:XUUID)
     ns0:LServiceProfile(name: xsd:string, description: xsd:string, isDefault: ns0:boolean, uuid: ns0:XUUID)
     ns0:LServiceProfileList(profileName: xsd:string, primary: xsd:string, secondary: xsd:string, tertiary: xsd:string, serverCertificateVerification: , serviceProfileXml: ns0:XVendorConfig, uuid: ns0:XUUID)
     ns0:LSipDialRules(dialPattern: , name: ns0:String50, description: xsd:string, uuid: ns0:XUUID)
     ns0:LSipProfile(name: ns0:String50, description: ns0:String100, defaultTelephonyEventPayloadType: , redirectByApplication: ns0:boolean, ringing180: ns0:boolean, timerInvite: , timerRegisterDelta: , timerRegister: , timerT1: , timerT2: , retryInvite: , retryNotInvite: , startMediaPort: , stopMediaPort: , callpickupUri: ns0:Name128, callpickupListUri: ns0:String128, callpickupGroupUri: ns0:String128, meetmeServiceUrl: ns0:String128, userInfo: , dtmfDbLevel: , callHoldRingback: , anonymousCallBlock: , callerIdBlock: , dndControl: , telnetLevel: , timerKeepAlive: , timerSubscribe: , timerSubscribeDelta: , maxRedirects: , timerOffHookToFirstDigit: , callForwardUri: ns0:String128, abbreviatedDialUri: ns0:String128, confJointEnable: ns0:boolean, rfc2543Hold: ns0:boolean, semiAttendedTransfer: ns0:boolean, enableVad: ns0:boolean, stutterMsgWaiting: ns0:boolean, callStats: ns0:boolean, t38Invite: ns0:boolean, rerouteIncomingRequest: , resourcePriorityNamespaceListName: ns0:XFkType, enableAnatForEarlyOfferCalls: ns0:boolean, rsvpOverSip: , fallbackToLocalRsvp: ns0:boolean, sipRe11XxEnabled: , gClear: , earlyOfferSupportForVoiceCall: ns0:boolean, sendRecvSDPInMidCallInvite: ns0:boolean, enableOutboundOptionsPing: ns0:boolean, optionsPingIntervalWhenStatusOK: , optionsPingIntervalWhenStatusNotOK: , deliverConferenceBridgeIdentifier: ns0:boolean, sipOptionsRetryCount: , sipOptionsRetryTimer: , sipBandwidthModifier: , enableUriOutdialSupport: ns0:boolean, userAgentServerHeaderInfo: , allowPresentationSharingUsingBfcp: ns0:boolean, scriptParameters: xsd:string, isScriptTraceEnabled: ns0:boolean, sipNormalizationScript: ns0:XFkType, allowiXApplicationMedia: ns0:boolean, dialStringInterpretation: , acceptAudioCodecPreferences: , mlppUserAuthorization: ns0:boolean, isAssuredSipServiceEnabled: ns0:boolean, resourcePriorityNamespace: ns0:XFkType, useCallerIdCallerNameinUriOutgoingRequest: ns0:boolean, callerIdDn: ns0:String50, callerName: ns0:String50, callingLineIdentification: , rejectAnonymousIncomingCall: ns0:boolean, rejectAnonymousOutgoingCall: ns0:boolean, videoCallTrafficClass: , inactiveSDPRequired: ns0:boolean, uuid: ns0:XUUID)
     ns0:LSipRealm(realm: xsd:string, userid: xsd:string, digestCredentials: xsd:string, uuid: ns0:XUUID)
     ns0:LSipRoutePattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , sipTrunkName: ns0:XFkType, dnOrPatternIpv6: xsd:string, routeOnUserPart: ns0:boolean, useCallerCss: ns0:boolean, domainRoutingCssName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LSipTrunk(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, packetCaptureMode: , packetCaptureDuration: , loadInformation: ns0:XLoadInformation, traceFlag: ns0:boolean, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, securityProfileName: ns0:XFkType, sipProfileName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, unattendedPort: ns0:boolean, transmitUtf8: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, rerouteCallingSearchSpaceName: ns0:XFkType, referCallingSearchSpaceName: ns0:XFkType, mtpRequired: ns0:boolean, presenceGroupName: ns0:XFkType, unknownPrefix: ns0:String16, destinationAddress: ns0:String50, destAddrIsSrv: ns0:boolean, destinationport: , tkSipCodec: , sigDigits: {, enable: xsd:boolean}, connectedNamePresentation: , connectedPartyIdPresentation: , callingPartySelection: , callingname: , callingLineIdPresentation: , prefixDn: ns0:String50, callerName: ns0:String50, callerIdDn: ns0:String50, acceptInboundRdnis: ns0:boolean, acceptOutboundRdnis: ns0:boolean, srtpAllowed: ns0:boolean, srtpFallbackAllowed: ns0:boolean, isPaiEnabled: ns0:boolean, sipPrivacy: , isRpidEnabled: ns0:boolean, sipAssertedType: , destinationAddressIpv6: xsd:string, dtmfSignalingMethod: , routeClassSignalling: , sipTrunkType: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useImePublicIpPort: ns0:boolean, useDevicePoolCntdPnTransformationCss: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, sipNormalizationScriptName: ns0:XFkType, runOnEveryNode: ns0:boolean, unknownStripDigits: xsd:nonNegativeInteger, cgpnTransformationUnknownCssName: ns0:XFkType, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , pathReplacementSupport: ns0:boolean, enableQsigUtf8: ns0:boolean, scriptParameters: xsd:string, scriptTraceEnabled: ns0:boolean, trunkTrafficSecure: , callingAndCalledPartyInfoFormat: , useCallerIdCallerNameinUriOutgoingRequest: ns0:boolean, requestUriDomainName: xsd:string, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:LSipTrunkDestination(addressIpv4: ns0:String255, addressIpv6: ns0:String255, port: , sortOrder: , uuid: ns0:XUUID)
     ns0:LSipTrunkSecurityProfile(name: ns0:String64, description: ns0:String100, securityMode: , incomingTransport: , outgoingTransport: , digestAuthentication: ns0:boolean, noncePolicyTime: , x509SubjectName: ns0:String4096, incomingPort: , applLevelAuthentication: ns0:boolean, acceptPresenceSubscription: ns0:boolean, acceptOutOfDialogRefer: ns0:boolean, acceptUnsolicitedNotification: ns0:boolean, allowReplaceHeader: ns0:boolean, transmitSecurityStatus: ns0:boolean, sipV150OutboundSdpOfferFiltering: , uuid: ns0:XUUID)
     ns0:LSoftKeyTemplate(name: ns0:String100, description: ns0:String100, baseSoftkeyTemplateName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LSpeeddial(dirn: ns0:String255, label: xsd:string, asciiLabel: xsd:string, index: )
     ns0:LSrst(name: xsd:string, port: , ipAddress: xsd:string, SipNetwork: xsd:string, SipPort: , srstCertificatePort: , isSecure: ns0:boolean, uuid: ns0:XUUID)
     ns0:LSubscribedService(telecasterServiceName: ns0:XFkType, name: ns0:String100, url: xsd:string, urlButtonIndex: , urlLabel: ns0:String50, urlLabelAscii: ns0:String100, serviceNameAscii: ns0:String50, phoneService: , phoneServiceCategory: , vendor: xsd:string, version: xsd:string, priority: xsd:int, uuid: ns0:XUUID)
     ns0:LSyslogConfig(AlarmLevelEvent: , RemoteServerName: xsd:string, monitor: xsd:string, Enable: ns0:boolean)
     ns0:LSyslogConfiguration(serverName: xsd:string, serviceGroup: , service: xsd:string, alarmConfigs: ns0:LSyslogConfig[], EndPointAlarm: ns0:boolean)
     ns0:LT1Port(portNumber: , attendantDn: ns0:String255, unattendedPort: ns0:boolean, callerIdDn: ns0:String255, callerIdEnable: ns0:boolean, callingPartySelection: , digitSending: , expectedDigits: , sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String255, presentationBit: , silenceSuppressionThreshold: , startDialProtocol: , trunk: , trunkDirection: , trunkLevel: , trunkPadRx: , trunkPadTx: , vendorConfig: ns0:XVendorConfig, callerId: , endpointId: ns0:String128, timer1: , timer2: , timer3: , timer4: , timer5: , timer6: , uuid: ns0:XUUID)
     ns0:LTODAccessMember(timeScheduleName: ns0:XFkType, accessListName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LTimePeriod(name: ns0:String50, startTime: , endTime: , startDay: , endDay: , monthOfYear: , dayOfMonth: , description: ns0:String255, isPublished: ns0:boolean, todOwnerIdName: ns0:XFkType, dayOfMonthEnd: , monthOfYearEnd: , uuid: ns0:XUUID)
     ns0:LTimeSchedule(name: ns0:String50, description: ns0:String255, isPublished: ns0:boolean, timeScheduleCategory: , todOwnerIdName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LTimeScheduleTimePeriod(timePeriodName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LTodAccess(name: ns0:String128, description: ns0:String255, ownerIdName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LTransPattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , patternPrecedence: , provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , callingSearchSpaceName: ns0:XFkType, resourcePriorityNamespaceName: ns0:XFkType, routeNextHopByCgpn: ns0:boolean, routeClass: , callInterceptProfileName: ns0:XFkType, releaseClause: , uuid: ns0:XUUID)
     ns0:LTranscoder(name: ns0:UniqueString255, description: ns0:String128, product: , subUnit: , devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, loadInformation: ns0:XLoadInformation, isTrustedRelayPoint: ns0:boolean, maximumCapacity: , uuid: ns0:XUUID)
     ns0:LTransformationProfile(name: ns0:String50, description: xsd:string, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, nationalCssName: ns0:XFkType, internationalCssName: ns0:XFkType, unknownCssName: ns0:XFkType, subscriberCssName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LTvsCertificate(subjectName: xsd:string, issuerName: xsd:string, serialNumber: xsd:string, timeToLive: xsd:integer, ipv4Address: xsd:string, ipv6Address: xsd:string, uuid: ns0:XUUID)
     ns0:LTvsCertificateService(serviceName: , uuid: ns0:XUUID)
     ns0:LUcService(serviceType: , productType: , name: ns0:String50, description: xsd:string, hostnameorip: ns0:String255, port: , protocol: , uuid: ns0:XUUID)
     ns0:LUnitsToGateway(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), uuid: ns0:XUUID)
     ns0:LUser(firstName: xsd:string, middleName: xsd:string, lastName: xsd:string, userid: xsd:string, telephoneNumber: ns0:String255, mailid: xsd:string, department: xsd:string, manager: xsd:string, userLocale: , primaryExtension: {pattern: ns0:String255, routePartitionName: ns0:String50}, associatedPc: xsd:string, enableCti: ns0:boolean, presenceGroupName: ns0:XFkType, subscribeCallingSearchSpaceName: ns0:XFkType, enableMobility: ns0:boolean, enableMobileVoiceAccess: ns0:boolean, maxDeskPickupWaitTime: , remoteDestinationLimit: , status: , enableEmcc: ns0:boolean, patternPrecedence: , numericUserId: xsd:string, mlppPassword: xsd:string, homeCluster: ns0:boolean, imAndPresenceEnable: ns0:boolean, serviceProfile: ns0:XFkType, directoryUri: xsd:string, uuid: ns0:XUUID)
     ns0:LUserCustomUserField(({name: xsd:string}), ({value: xsd:string}))
     ns0:LUserGroup(name: ns0:UniqueName128, uuid: ns0:XUUID)
     ns0:LUserGroupMember(userId: xsd:string, uuid: ns0:XUUID)
     ns0:LUserGroupRoles(roleName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LUserPhoneAssociation(userId: xsd:string, password: xsd:string, pin: , lastName: xsd:string, middleName: xsd:string, firstName: xsd:string, productType: , name: ns0:UniqueString128, dnCssName: ns0:XFkType, phoneCssName: ns0:XFkType, e164Mask: xsd:string, extension: xsd:string, routePartitionName: ns0:XFkType, voiceMailProfileName: ns0:XFkType, enableExtensionMobility: ns0:boolean, DirectoryURI: xsd:string, DirectoryNumberURIPartition: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LVg224(domainName: xsd:string, description: xsd:string, product: , protocol: , callManagerGroupName: ns0:XFkType, units: {unit: {index: , product: , subunits: {subunit: {index: , product: , beginPort: }}}}, uuid: ns0:XUUID)
     ns0:LVmPilot(dirn: ns0:String50, cssName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:LVoiceMailPilot(dirn: ns0:String255, description: ns0:String50, cssName: ns0:XFkType, isDefault: ns0:boolean, uuid: ns0:XUUID)
     ns0:LVoiceMailPort(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, preemption: , useTrustedRelayPoint: , securityProfileName: ns0:XFkType, geoLocationName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, dnPattern: xsd:string, callerIdDisplay: ns0:String128, callerIdDisplayAscii: ns0:String50, externalMask: xsd:string, ctiid: xsd:nonNegativeInteger, uuid: ns0:XUUID)
     ns0:LVoiceMailProfile(name: ns0:String50, description: ns0:String50, isDefault: ns0:boolean, voiceMailboxMask: xsd:string, uuid: ns0:XUUID)
     ns0:LVpnGateway(name: ns0:String50, description: xsd:string, url: ns0:String255, uuid: ns0:XUUID)
     ns0:LVpnGatewayMember(issuerName: ns0:String255, serialNumber: ns0:String50, uuid: ns0:XUUID)
     ns0:LVpnGroup(name: ns0:String50, description: xsd:string, uuid: ns0:XUUID)
     ns0:LVpnGroupMember(vpnGatewayName: ns0:XFkType, priority: , uuid: ns0:XUUID)
     ns0:LVpnProfile(name: ns0:String50, description: xsd:string, autoNetworkDetection: ns0:boolean, mtu: , failToConnect: , clientAuthentication: , pwdPersistant: ns0:boolean, enableHostIdCheck: ns0:boolean, uuid: ns0:XUUID)
     ns0:ListAarGroupReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LAarGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListAarGroupRes(return: {aarGroup: ns0:LAarGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListAnnouncementReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LAnnouncement, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListAnnouncementRes(return: {announcement: ns0:LAnnouncement[]}, sequence: xsd:unsignedLong)
     ns0:ListAnnunciatorReq(searchCriteria: {name: xsd:string, description: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LAnnunciator, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListAnnunciatorRes(return: {annunciator: ns0:LAnnunciator[]}, sequence: xsd:unsignedLong)
     ns0:ListAppUserReq(searchCriteria: {userid: xsd:string}, returnedTags: ns0:LAppUser, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListAppUserRes(return: {appUser: ns0:LAppUser[]}, sequence: xsd:unsignedLong)
     ns0:ListApplicationDialRulesReq(searchCriteria: {name: xsd:string, description: xsd:string, numberBeginWith: xsd:string}, returnedTags: ns0:LApplicationDialRules, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListApplicationDialRulesRes(return: {applicationDialRules: ns0:LApplicationDialRules[]}, sequence: xsd:unsignedLong)
     ns0:ListApplicationServerReq(searchCriteria: {name: xsd:string, ipAddress: xsd:string}, returnedTags: ns0:LApplicationServer, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListApplicationServerRes(return: {applicationServer: ns0:LApplicationServer[]}, sequence: xsd:unsignedLong)
     ns0:ListApplicationUserCapfProfileReq(searchCriteria: {applicationUser: xsd:string, instanceId: xsd:string}, returnedTags: ns0:LApplicationUserCapfProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListApplicationUserCapfProfileRes(return: {applicationUserCapfProfile: ns0:LApplicationUserCapfProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListAudioCodecPreferenceListReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LAudioCodecPreferenceList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListAudioCodecPreferenceListRes(return: {audioCodecPreferenceList: ns0:LAudioCodecPreferenceList[]}, sequence: xsd:unsignedLong)
     ns0:ListBillingServerReq(searchCriteria: {hostName: xsd:string}, returnedTags: ns0:LBillingServer, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListBillingServerRes(return: {billingServer: ns0:LBillingServer[]}, sequence: xsd:unsignedLong)
     ns0:ListCallManagerGroupReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LCallManagerGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCallManagerGroupRes(return: {callManagerGroup: ns0:LCallManagerGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListCallManagerReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LCallManager, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCallManagerRes(return: {callManager: ns0:LCallManager[]}, sequence: xsd:unsignedLong)
     ns0:ListCallParkReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string, callManagerName: xsd:string}, returnedTags: ns0:LCallPark, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCallParkRes(return: {callPark: ns0:LCallPark[]}, sequence: xsd:unsignedLong)
     ns0:ListCallPickupGroupReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LCallPickupGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCallPickupGroupRes(return: {callPickupGroup: ns0:LCallPickupGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListCalledPartyTracingReq(searchCriteria: {directorynumber: xsd:string}, returnedTags: ns0:LCalledPartyTracing, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCalledPartyTracingRes(return: {calledPartyTracing: ns0:LCalledPartyTracing[]}, sequence: xsd:unsignedLong)
     ns0:ListCalledPartyTransformationPatternReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string, dialPlanName: xsd:string, routeFilterName: xsd:string}, returnedTags: ns0:LCalledPartyTransformationPattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCalledPartyTransformationPatternRes(return: {calledPartyTransformationPattern: ns0:LCalledPartyTransformationPattern[]}, sequence: xsd:unsignedLong)
     ns0:ListCallerFilterListReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LCallerFilterList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCallerFilterListRes(return: {callerFilterList: ns0:LCallerFilterList[]}, sequence: xsd:unsignedLong)
     ns0:ListCallingPartyTransformationPatternReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string, dialPlanName: xsd:string, routeFilterName: xsd:string}, returnedTags: ns0:LCallingPartyTransformationPattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCallingPartyTransformationPatternRes(return: {callingPartyTransformationPattern: ns0:LCallingPartyTransformationPattern[]}, sequence: xsd:unsignedLong)
     ns0:ListCcdAdvertisingServiceReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LCcdAdvertisingService, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCcdAdvertisingServiceRes(return: {ccdAdvertisingService: ns0:LCcdAdvertisingService[]}, sequence: xsd:unsignedLong)
     ns0:ListCcdHostedDNGroupReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LCcdHostedDNGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCcdHostedDNGroupRes(return: {ccdHostedDNGroup: ns0:LCcdHostedDNGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListCcdHostedDNReq(searchCriteria: {hostedPattern: xsd:string, description: xsd:string}, returnedTags: ns0:LCcdHostedDN, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCcdHostedDNRes(return: {ccdHostedDN: ns0:LCcdHostedDN[]}, sequence: xsd:unsignedLong)
     ns0:ListCiscoCatalyst600024PortFXSGatewayReq(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LCiscoCatalyst600024PortFXSGateway, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCiscoCatalyst600024PortFXSGatewayRes(return: {ciscoCatalyst600024PortFXSGateway: ns0:LCiscoCatalyst600024PortFXSGateway[]}, sequence: xsd:unsignedLong)
     ns0:ListCiscoCatalyst6000E1VoIPGatewayReq(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LCiscoCatalyst6000E1VoIPGateway, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCiscoCatalyst6000E1VoIPGatewayRes(return: {ciscoCatalyst6000E1VoIPGateway: ns0:LCiscoCatalyst6000E1VoIPGateway[]}, sequence: xsd:unsignedLong)
     ns0:ListCiscoCatalyst6000T1VoIPGatewayPriReq(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LCiscoCatalyst6000T1VoIPGatewayPri, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCiscoCatalyst6000T1VoIPGatewayPriRes(return: {ciscoCatalyst6000T1VoIPGatewayPri: ns0:LCiscoCatalyst6000T1VoIPGatewayPri[]}, sequence: xsd:unsignedLong)
     ns0:ListCiscoCatalyst6000T1VoIPGatewayT1Req(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LCiscoCatalyst6000T1VoIPGatewayT1, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCiscoCatalyst6000T1VoIPGatewayT1Res(return: {ciscoCatalyst6000T1VoIPGatewayT1: ns0:LCiscoCatalyst6000T1VoIPGatewayT1[]}, sequence: xsd:unsignedLong)
     ns0:ListCmcInfoReq(searchCriteria: {code: xsd:string}, returnedTags: ns0:LCmcInfo, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCmcInfoRes(return: {cmcInfo: ns0:LCmcInfo[]}, sequence: xsd:unsignedLong)
     ns0:ListCommonDeviceConfigReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LCommonDeviceConfig, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCommonDeviceConfigRes(return: {commonDeviceConfig: ns0:LCommonDeviceConfig[]}, sequence: xsd:unsignedLong)
     ns0:ListCommonPhoneConfigReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LCommonPhoneConfig, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCommonPhoneConfigRes(return: {commonPhoneConfig: ns0:LCommonPhoneConfig[]}, sequence: xsd:unsignedLong)
     ns0:ListConferenceBridgeReq(searchCriteria: {name: xsd:string, description: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LConferenceBridge, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListConferenceBridgeRes(return: {conferenceBridge: ns0:LConferenceBridge[]}, sequence: xsd:unsignedLong)
     ns0:ListCredentialPolicyReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LCredentialPolicy, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCredentialPolicyRes(return: {credentialPolicy: ns0:LCredentialPolicy[]}, sequence: xsd:unsignedLong)
     ns0:ListCssReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LCss, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCssRes(return: {css: ns0:LCss[]}, sequence: xsd:unsignedLong)
     ns0:ListCtiRoutePointReq(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LCtiRoutePoint, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCtiRoutePointRes(return: {ctiRoutePoint: ns0:LCtiRoutePoint[]}, sequence: xsd:unsignedLong)
     ns0:ListCumaServerSecurityProfileReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LCumaServerSecurityProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCumaServerSecurityProfileRes(return: {cumaServerSecurityProfile: ns0:LCumaServerSecurityProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListCustomUserFieldReq(searchCriteria: {field: xsd:string}, returnedTags: ns0:LCustomUserField, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListCustomUserFieldRes(return: {customUserField: ns0:LCustomUserField[]}, sequence: xsd:unsignedLong)
     ns0:ListDateTimeGroupReq(searchCriteria: {name: xsd:string, timeZone: xsd:string}, returnedTags: ns0:LDateTimeGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDateTimeGroupRes(return: {dateTimeGroup: ns0:LDateTimeGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListDdiReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LDdi, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDdiRes(return: {ddi: ns0:LDdi[]}, sequence: xsd:unsignedLong)
     ns0:ListDefaultDeviceProfileReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LDefaultDeviceProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDefaultDeviceProfileRes(return: {defaultDeviceProfile: ns0:LDefaultDeviceProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListDeviceMobilityGroupReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LDeviceMobilityGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDeviceMobilityGroupRes(return: {deviceMobilityGroup: ns0:LDeviceMobilityGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListDeviceMobilityReq(searchCriteria: {name: xsd:string, subNet: xsd:string, subNetMaskSz: xsd:string}, returnedTags: ns0:LDeviceMobility, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDeviceMobilityRes(return: {deviceMobility: ns0:LDeviceMobility[]}, sequence: xsd:unsignedLong)
     ns0:ListDevicePoolReq(searchCriteria: {name: xsd:string, callManagerGroupName: xsd:string, regionName: xsd:string}, returnedTags: ns0:LDevicePool, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDevicePoolRes(return: {devicePool: ns0:LDevicePool[]}, sequence: xsd:unsignedLong)
     ns0:ListDeviceProfileReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LDeviceProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDeviceProfileRes(return: {deviceProfile: ns0:LDeviceProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListDhcpServerReq(searchCriteria: {processNodeName: xsd:string, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, domainName: xsd:string}, returnedTags: ns0:LDhcpServer, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDhcpServerRes(return: {dhcpServer: ns0:LDhcpServer[]}, sequence: xsd:unsignedLong)
     ns0:ListDhcpSubnetReq(searchCriteria: {dhcpServerName: xsd:string, subnetIpAddress: xsd:string, primaryStartIpAddress: xsd:string, primaryEndIpAddress: xsd:string, secondaryStartIpAddress: xsd:string, secondaryEndIpAddress: xsd:string}, returnedTags: ns0:LDhcpSubnet, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDhcpSubnetRes(return: {dhcpSubnet: ns0:LDhcpSubnet[]}, sequence: xsd:unsignedLong)
     ns0:ListDialPlanReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LDialPlan, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDialPlanRes(return: {dialPlan: ns0:LDialPlan[]}, sequence: xsd:unsignedLong)
     ns0:ListDialPlanTagReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LDialPlanTag, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDialPlanTagRes(return: {dialPlanTag: ns0:LDialPlanTag[]}, sequence: xsd:unsignedLong)
     ns0:ListDirectedCallParkReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string, reversionPattern: xsd:string}, returnedTags: ns0:LDirectedCallPark, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDirectedCallParkRes(return: {directedCallPark: ns0:LDirectedCallPark[]}, sequence: xsd:unsignedLong)
     ns0:ListDirectoryLookupDialRulesReq(searchCriteria: {name: xsd:string, description: xsd:string, numberBeginWith: xsd:string}, returnedTags: ns0:LDirectoryLookupDialRules, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListDirectoryLookupDialRulesRes(return: {directoryLookupDialRules: ns0:LDirectoryLookupDialRules[]}, sequence: xsd:unsignedLong)
     ns0:ListEndUserCapfProfileReq(searchCriteria: {endUserId: xsd:string, instanceId: xsd:string}, returnedTags: ns0:LEndUserCapfProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListEndUserCapfProfileRes(return: {endUserCapfProfile: ns0:LEndUserCapfProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListEnterpriseFeatureAccessConfigurationReq(searchCriteria: {pattern: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LEnterpriseFeatureAccessConfiguration, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListEnterpriseFeatureAccessConfigurationRes(return: {enterpriseFeatureAccessConfiguration: ns0:LEnterpriseFeatureAccessConfiguration[]}, sequence: xsd:unsignedLong)
     ns0:ListExternalCallControlProfileReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LExternalCallControlProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListExternalCallControlProfileRes(return: {externalCallControlProfile: ns0:LExternalCallControlProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListFacInfoReq(searchCriteria: {name: xsd:string, code: xsd:string, authorizationLevel: xsd:string}, returnedTags: ns0:LFacInfo, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListFacInfoRes(return: {facInfo: ns0:LFacInfo[]}, sequence: xsd:unsignedLong)
     ns0:ListFallbackProfileReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LFallbackProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListFallbackProfileRes(return: {fallbackProfile: ns0:LFallbackProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListFeatureControlPolicyReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LFeatureControlPolicy, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListFeatureControlPolicyRes(return: {featureControlPolicy: ns0:LFeatureControlPolicy[]}, sequence: xsd:unsignedLong)
     ns0:ListGatekeeperReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LGatekeeper, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListGatekeeperRes(return: {gatekeeper: ns0:LGatekeeper[]}, sequence: xsd:unsignedLong)
     ns0:ListGatewayReq(searchCriteria: {domainName: xsd:string, description: xsd:string}, returnedTags: ns0:LGateway, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListGatewayRes(return: {gateway: ns0:LGateway[]}, sequence: xsd:unsignedLong)
     ns0:ListGeoLocationFilterReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LGeoLocationFilter, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListGeoLocationFilterRes(return: {geoLocationFilter: ns0:LGeoLocationFilter[]}, sequence: xsd:unsignedLong)
     ns0:ListGeoLocationPolicyReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LGeoLocationPolicy, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListGeoLocationPolicyRes(return: {geoLocationPolicy: ns0:LGeoLocationPolicy[]}, sequence: xsd:unsignedLong)
     ns0:ListGeoLocationReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LGeoLocation, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListGeoLocationRes(return: {geoLocation: ns0:LGeoLocation[]}, sequence: xsd:unsignedLong)
     ns0:ListH323GatewayReq(searchCriteria: {name: xsd:string, description: xsd:string, protocol: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LH323Gateway, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListH323GatewayRes(return: {h323Gateway: ns0:LH323Gateway[]}, sequence: xsd:unsignedLong)
     ns0:ListH323PhoneReq(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LH323Phone, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListH323PhoneRes(return: {h323Phone: ns0:LH323Phone[]}, sequence: xsd:unsignedLong)
     ns0:ListH323TrunkReq(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LH323Trunk, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListH323TrunkRes(return: {h323Trunk: ns0:LH323Trunk[]}, sequence: xsd:unsignedLong)
     ns0:ListHuntListReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LHuntList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListHuntListRes(return: {huntList: ns0:LHuntList[]}, sequence: xsd:unsignedLong)
     ns0:ListHuntPilotReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LHuntPilot, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListHuntPilotRes(return: {huntPilot: ns0:LHuntPilot[]}, sequence: xsd:unsignedLong)
     ns0:ListImeClientReq(searchCriteria: {name: xsd:string, description: xsd:string, domain: xsd:string}, returnedTags: ns0:LImeClient, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImeClientRes(return: {imeClient: ns0:LImeClient[]}, sequence: xsd:unsignedLong)
     ns0:ListImeE164TransformationReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeE164Transformation, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImeE164TransformationRes(return: {imeE164Transformation: ns0:LImeE164Transformation[]}, sequence: xsd:unsignedLong)
     ns0:ListImeEnrolledPatternGroupReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeEnrolledPatternGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImeEnrolledPatternGroupRes(return: {imeEnrolledPatternGroup: ns0:LImeEnrolledPatternGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListImeEnrolledPatternReq(searchCriteria: {pattern: xsd:string, description: xsd:string, imeEnrolledPatternGroupName: xsd:string}, returnedTags: ns0:LImeEnrolledPattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImeEnrolledPatternRes(return: {imeEnrolledPattern: ns0:LImeEnrolledPattern[]}, sequence: xsd:unsignedLong)
     ns0:ListImeExclusionNumberGroupReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeExclusionNumberGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImeExclusionNumberGroupRes(return: {imeExclusionNumberGroup: ns0:LImeExclusionNumberGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListImeExclusionNumberReq(searchCriteria: {pattern: xsd:string, description: xsd:string, imeExclusionNumberGroupName: xsd:string}, returnedTags: ns0:LImeExclusionNumber, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImeExclusionNumberRes(return: {imeExclusionNumber: ns0:LImeExclusionNumber[]}, sequence: xsd:unsignedLong)
     ns0:ListImeFirewallReq(searchCriteria: {name: xsd:string, description: xsd:string, ipAddress: xsd:string}, returnedTags: ns0:LImeFirewall, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImeFirewallRes(return: {imeFirewall: ns0:LImeFirewall[]}, sequence: xsd:unsignedLong)
     ns0:ListImeRouteFilterElementReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeRouteFilterElement, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImeRouteFilterElementRes(return: {imeRouteFilterElement: ns0:LImeRouteFilterElement[]}, sequence: xsd:unsignedLong)
     ns0:ListImeRouteFilterGroupReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeRouteFilterGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImeRouteFilterGroupRes(return: {imeRouteFilterGroup: ns0:LImeRouteFilterGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListImeServerReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeServer, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImeServerRes(return: {imeServer: ns0:LImeServer[]}, sequence: xsd:unsignedLong)
     ns0:ListImportedDirectoryUriCatalogsReq(searchCriteria: {name: xsd:string, description: xsd:string, routeString: xsd:string}, returnedTags: ns0:LImportedDirectoryUriCatalogs, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListImportedDirectoryUriCatalogsRes(return: {importedDirectoryUriCatalogs: ns0:LImportedDirectoryUriCatalogs[]}, sequence: xsd:unsignedLong)
     ns0:ListIpPhoneServicesReq(searchCriteria: {serviceName: xsd:string, serviceDescription: xsd:string}, returnedTags: ns0:LIpPhoneServices, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListIpPhoneServicesRes(return: {ipPhoneServices: ns0:LIpPhoneServices[]}, sequence: xsd:unsignedLong)
     ns0:ListIvrUserLocaleReq(searchCriteria: {userLocale: xsd:string}, returnedTags: ns0:LIvrUserLocale, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListIvrUserLocaleRes(return: {ivrUserLocale: ns0:LIvrUserLocale[]}, sequence: xsd:unsignedLong)
     ns0:ListLbmGroupReq(searchCriteria: {name: xsd:string, Description: xsd:string}, returnedTags: ns0:LLbmGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListLbmGroupRes(return: {lbmGroup: ns0:LLbmGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListLbmHubGroupReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LLbmHubGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListLbmHubGroupRes(return: {lbmHubGroup: ns0:LLbmHubGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListLdapDirectoryReq(searchCriteria: {name: xsd:string, ldapDn: xsd:string, userSearchBase: xsd:string}, returnedTags: ns0:LLdapDirectory, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListLdapDirectoryRes(return: {ldapDirectory: ns0:LLdapDirectory[]}, sequence: xsd:unsignedLong)
     ns0:ListLdapFilterReq(searchCriteria: {name: xsd:string, filter: xsd:string}, returnedTags: ns0:LLdapFilter, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListLdapFilterRes(return: {ldapFilter: ns0:LLdapFilter[]}, sequence: xsd:unsignedLong)
     ns0:ListLdapSyncCustomFieldReq(searchCriteria: {ldapConfigurationName: xsd:string}, returnedTags: ns0:NewLLdapSyncCustomField, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListLdapSyncCustomFieldRes(return: {ldapSyncCustomField: ns0:NewLLdapSyncCustomField[]}, sequence: xsd:unsignedLong)
     ns0:ListLicenseCapabilitiesReq(searchCriteria: {userid: xsd:string}, returnedTags: ns0:LLicenseCapabilities, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListLicenseCapabilitiesRes(return: {licenseCapabilities: ns0:LLicenseCapabilities[]}, sequence: xsd:unsignedLong)
     ns0:ListLineGroupReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LLineGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListLineGroupRes(return: {lineGroup: ns0:LLineGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListLineReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LLine, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListLineRes(return: {line: ns0:LLine[]}, sequence: xsd:unsignedLong)
     ns0:ListLocationReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LLocation, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListLocationRes(return: {location: ns0:LLocation[]}, sequence: xsd:unsignedLong)
     ns0:ListMediaResourceGroupReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LMediaResourceGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListMediaResourceGroupRes(return: {mediaResourceGroup: ns0:LMediaResourceGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListMediaResourceListReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LMediaResourceList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListMediaResourceListRes(return: {mediaResourceList: ns0:LMediaResourceList[]}, sequence: xsd:unsignedLong)
     ns0:ListMeetMeReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LMeetMe, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListMeetMeRes(return: {meetMe: ns0:LMeetMe[]}, sequence: xsd:unsignedLong)
     ns0:ListMessageWaitingReq(searchCriteria: {pattern: xsd:string, routePartitionName: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string}, returnedTags: ns0:LMessageWaiting, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListMessageWaitingRes(return: {messageWaiting: ns0:LMessageWaiting[]}, sequence: xsd:unsignedLong)
     ns0:ListMlppDomainReq(searchCriteria: {domainName: xsd:string}, returnedTags: ns0:LMlppDomain, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListMlppDomainRes(return: {mlppDomain: ns0:LMlppDomain[]}, sequence: xsd:unsignedLong)
     ns0:ListMobileSmartClientProfileReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LMobileSmartClientProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListMobileSmartClientProfileRes(return: {mobileSmartClientProfile: ns0:LMobileSmartClientProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListMobilityProfileReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LMobilityProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListMobilityProfileRes(return: {mobilityProfile: ns0:LMobilityProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListMohAudioSourceReq(searchCriteria: {sourceId: xsd:string, name: xsd:string}, returnedTags: ns0:LMohAudioSource, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListMohAudioSourceRes(return: {mohAudioSource: ns0:LMohAudioSource[]}, sequence: xsd:unsignedLong)
     ns0:ListMohServerReq(searchCriteria: {name: xsd:string, description: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LMohServer, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListMohServerRes(return: {mohServer: ns0:LMohServer[]}, sequence: xsd:unsignedLong)
     ns0:ListMtpReq(searchCriteria: {name: xsd:string, description: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LMtp, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListMtpRes(return: {mtp: ns0:LMtp[]}, sequence: xsd:unsignedLong)
     ns0:ListPhoneButtonTemplateReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LPhoneButtonTemplate, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListPhoneButtonTemplateRes(return: {phoneButtonTemplate: ns0:LPhoneButtonTemplate[]}, sequence: xsd:unsignedLong)
     ns0:ListPhoneNtpReq(searchCriteria: {ipAddress: xsd:string, description: xsd:string}, returnedTags: ns0:LPhoneNtp, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListPhoneNtpRes(return: {phoneNtp: ns0:LPhoneNtp[]}, sequence: xsd:unsignedLong)
     ns0:ListPhoneReq(searchCriteria: {name: xsd:string, description: xsd:string, protocol: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string, securityProfileName: xsd:string}, returnedTags: ns0:LPhone, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListPhoneRes(return: {phone: ns0:LPhone[]}, sequence: xsd:unsignedLong)
     ns0:ListPhoneSecurityProfileReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LPhoneSecurityProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListPhoneSecurityProfileRes(return: {phoneSecurityProfile: ns0:LPhoneSecurityProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListPhysicalLocationReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LPhysicalLocation, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListPhysicalLocationRes(return: {physicalLocation: ns0:LPhysicalLocation[]}, sequence: xsd:unsignedLong)
     ns0:ListPresenceGroupReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LPresenceGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListPresenceGroupRes(return: {presenceGroup: ns0:LPresenceGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListProcessNodeReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LProcessNode, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListProcessNodeRes(return: {processNode: ns0:LProcessNode[]}, sequence: xsd:unsignedLong)
     ns0:ListProcessNodeServiceReq(searchCriteria: {processNodeName: xsd:string}, returnedTags: ns0:LProcessNodeService, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListProcessNodeServiceRes(return: {processNodeService: ns0:LProcessNodeService[]}, sequence: xsd:unsignedLong)
     ns0:ListRecordingProfileReq(searchCriteria: {name: xsd:string, recordingCssName: xsd:string, recorderDestination: xsd:string}, returnedTags: ns0:LRecordingProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRecordingProfileRes(return: {recordingProfile: ns0:LRecordingProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListRegionReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LRegion, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRegionRes(return: {region: ns0:LRegion[]}, sequence: xsd:unsignedLong)
     ns0:ListRemoteClusterReq(searchCriteria: {clusterId: xsd:string, description: xsd:string}, returnedTags: ns0:LRemoteCluster, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRemoteClusterRes(return: {remoteCluster: ns0:LRemoteCluster[]}, sequence: xsd:unsignedLong)
     ns0:ListRemoteDestinationProfileReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LRemoteDestinationProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRemoteDestinationProfileRes(return: {remoteDestinationProfile: ns0:LRemoteDestinationProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListRemoteDestinationReq(searchCriteria: {name: xsd:string, remoteDestinationProfileName: xsd:string, dualModeDeviceName: xsd:string}, returnedTags: ns0:LRemoteDestination, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRemoteDestinationRes(return: {remoteDestination: ns0:LRemoteDestination[]}, sequence: xsd:unsignedLong)
     ns0:ListResourcePriorityNamespaceListReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LResourcePriorityNamespaceList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListResourcePriorityNamespaceListRes(return: {resourcePriorityNamespaceList: ns0:LResourcePriorityNamespaceList[]}, sequence: xsd:unsignedLong)
     ns0:ListResourcePriorityNamespaceReq(searchCriteria: {namespace: xsd:string, description: xsd:string}, returnedTags: ns0:LResourcePriorityNamespace, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListResourcePriorityNamespaceRes(return: {resourcePriorityNamespace: ns0:LResourcePriorityNamespace[]}, sequence: xsd:unsignedLong)
     ns0:ListRouteFilterReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LRouteFilter, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRouteFilterRes(return: {routeFilter: ns0:LRouteFilter[]}, sequence: xsd:unsignedLong)
     ns0:ListRouteGroupReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LRouteGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRouteGroupRes(return: {routeGroup: ns0:LRouteGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListRouteListReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LRouteList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRouteListRes(return: {routeList: ns0:LRouteList[]}, sequence: xsd:unsignedLong)
     ns0:ListRoutePartitionReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LRoutePartition, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRoutePartitionRes(return: {routePartition: ns0:LRoutePartition[]}, sequence: xsd:unsignedLong)
     ns0:ListRoutePatternReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LRoutePattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRoutePatternRes(return: {routePattern: ns0:LRoutePattern[]}, sequence: xsd:unsignedLong)
     ns0:ListRoutePlanReq(searchCriteria: {dnOrPattern: xsd:string, partition: xsd:string, type: xsd:string}, returnedTags: ns0:LRoutePlan, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListRoutePlanRes(return: {routePlan: ns0:LRoutePlan[]}, sequence: xsd:unsignedLong)
     ns0:ListSIPNormalizationScriptReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LSIPNormalizationScript, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSIPNormalizationScriptRes(return: {sIPNormalizationScript: ns0:LSIPNormalizationScript[]}, sequence: xsd:unsignedLong)
     ns0:ListSafCcdPurgeBlockLearnedRoutesReq(searchCriteria: {learnedPattern: xsd:string, learnedPatternPrefix: xsd:string, callControlIdentity: xsd:string, ipAddress: xsd:string}, returnedTags: ns0:LSafCcdPurgeBlockLearnedRoutes, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSafCcdPurgeBlockLearnedRoutesRes(return: {safCcdPurgeBlockLearnedRoutes: ns0:LSafCcdPurgeBlockLearnedRoutes[]}, sequence: xsd:unsignedLong)
     ns0:ListSafForwarderReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LSafForwarder, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSafForwarderRes(return: {safForwarder: ns0:LSafForwarder[]}, sequence: xsd:unsignedLong)
     ns0:ListSafSecurityProfileReq(searchCriteria: {name: xsd:string, description: xsd:string, userid: xsd:string}, returnedTags: ns0:LSafSecurityProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSafSecurityProfileRes(return: {safSecurityProfile: ns0:LSafSecurityProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListServiceParameterReq(searchCriteria: {processNodeName: xsd:string, service: xsd:string}, returnedTags: ns0:LServiceParameter, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListServiceParameterRes(return: {serviceParameter: ns0:LServiceParameter[]}, sequence: xsd:unsignedLong)
     ns0:ListServiceProfileReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LServiceProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListServiceProfileRes(return: {serviceProfile: ns0:LServiceProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListSipDialRulesReq(searchCriteria: {dialPattern: xsd:string, name: xsd:string}, returnedTags: ns0:LSipDialRules, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSipDialRulesRes(return: {sipDialRules: ns0:LSipDialRules[]}, sequence: xsd:unsignedLong)
     ns0:ListSipProfileReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LSipProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSipProfileRes(return: {sipProfile: ns0:LSipProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListSipRealmReq(searchCriteria: {realm: xsd:string, userid: xsd:string}, returnedTags: ns0:LSipRealm, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSipRealmRes(return: {sipRealm: ns0:LSipRealm[]}, sequence: xsd:unsignedLong)
     ns0:ListSipRoutePatternReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string, dnOrPatternIpv6: xsd:string}, returnedTags: ns0:LSipRoutePattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSipRoutePatternRes(return: {sipRoutePattern: ns0:LSipRoutePattern[]}, sequence: xsd:unsignedLong)
     ns0:ListSipTrunkReq(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LSipTrunk, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSipTrunkRes(return: {sipTrunk: ns0:LSipTrunk[]}, sequence: xsd:unsignedLong)
     ns0:ListSipTrunkSecurityProfileReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LSipTrunkSecurityProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSipTrunkSecurityProfileRes(return: {sipTrunkSecurityProfile: ns0:LSipTrunkSecurityProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListSoftKeyTemplateReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LSoftKeyTemplate, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSoftKeyTemplateRes(return: {softKeyTemplate: ns0:LSoftKeyTemplate[]}, sequence: xsd:unsignedLong)
     ns0:ListSrstReq(searchCriteria: {name: xsd:string, ipAddress: xsd:string}, returnedTags: ns0:LSrst, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListSrstRes(return: {srst: ns0:LSrst[]}, sequence: xsd:unsignedLong)
     ns0:ListTimePeriodReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LTimePeriod, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListTimePeriodRes(return: {timePeriod: ns0:LTimePeriod[]}, sequence: xsd:unsignedLong)
     ns0:ListTimeScheduleReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LTimeSchedule, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListTimeScheduleRes(return: {timeSchedule: ns0:LTimeSchedule[]}, sequence: xsd:unsignedLong)
     ns0:ListTodAccessReq(searchCriteria: {name: xsd:string, description: xsd:string, ownerIdName: xsd:string}, returnedTags: ns0:LTodAccess, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListTodAccessRes(return: {todAccess: ns0:LTodAccess[]}, sequence: xsd:unsignedLong)
     ns0:ListTransPatternReq(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LTransPattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListTransPatternRes(return: {transPattern: ns0:LTransPattern[]}, sequence: xsd:unsignedLong)
     ns0:ListTranscoderReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LTranscoder, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListTranscoderRes(return: {transcoder: ns0:LTranscoder[]}, sequence: xsd:unsignedLong)
     ns0:ListTransformationProfileReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LTransformationProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListTransformationProfileRes(return: {transformationProfile: ns0:LTransformationProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListTvsCertificateReq(searchCriteria: {subjectName: xsd:string, issuerName: xsd:string, serialNumber: xsd:string, timeToLive: xsd:string}, returnedTags: ns0:LTvsCertificate, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListTvsCertificateRes(return: {tvsCertificate: ns0:LTvsCertificate[]}, sequence: xsd:unsignedLong)
     ns0:ListUcServiceReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LUcService, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListUcServiceRes(return: {ucService: ns0:LUcService[]}, sequence: xsd:unsignedLong)
     ns0:ListUserGroupReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LUserGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListUserGroupRes(return: {userGroup: ns0:LUserGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListUserReq(searchCriteria: {firstName: xsd:string, lastName: xsd:string, userid: xsd:string, department: xsd:string}, returnedTags: ns0:LUser, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListUserRes(return: {user: ns0:LUser[]}, sequence: xsd:unsignedLong)
     ns0:ListVoiceMailPilotReq(searchCriteria: {dirn: xsd:string, description: xsd:string, cssName: xsd:string}, returnedTags: ns0:LVoiceMailPilot, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListVoiceMailPilotRes(return: {voiceMailPilot: ns0:LVoiceMailPilot[]}, sequence: xsd:unsignedLong)
     ns0:ListVoiceMailPortReq(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string, securityProfileName: xsd:string, dnPattern: xsd:string}, returnedTags: ns0:LVoiceMailPort, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListVoiceMailPortRes(return: {voiceMailPort: ns0:LVoiceMailPort[]}, sequence: xsd:unsignedLong)
     ns0:ListVoiceMailProfileReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LVoiceMailProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListVoiceMailProfileRes(return: {voiceMailProfile: ns0:LVoiceMailProfile[]}, sequence: xsd:unsignedLong)
     ns0:ListVpnGatewayReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LVpnGateway, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListVpnGatewayRes(return: {vpnGateway: ns0:LVpnGateway[]}, sequence: xsd:unsignedLong)
     ns0:ListVpnGroupReq(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LVpnGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListVpnGroupRes(return: {vpnGroup: ns0:LVpnGroup[]}, sequence: xsd:unsignedLong)
     ns0:ListVpnProfileReq(searchCriteria: {name: xsd:string}, returnedTags: ns0:LVpnProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong)
     ns0:ListVpnProfileRes(return: {vpnProfile: ns0:LVpnProfile[]}, sequence: xsd:unsignedLong)
     ns0:Name128
     ns0:Name50
     ns0:NameAndGUIDRequest(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:NewIlsConfig(clusterId: xsd:string, lastContactTime: xsd:string, clusterUriString: xsd:string, role: xsd:string, lastDataRecieved: xsd:string, syncronizationStatus: xsd:string, uuid: ns0:XUUID)
     ns0:NewLLdapSyncCustomField(ldapUserField: xsd:string, uuid: ns0:XUUID)
     ns0:RAarGroup(name: ns0:String32, relatedGroups: {relatedGroup: ns0:RAarGroupRelationship[]}, uuid: ns0:XUUID)
     ns0:RAarGroupMatrix(prefixDigit: ns0:String255, aarGroupFromName: ns0:XFkType, aarGroupToName: ns0:XFkType)
     ns0:RAarGroupRelationship(aarGroupFromName: ns0:XFkType, aarGroupToName: ns0:XFkType, prefixDigit: ns0:String32, uuid: ns0:XUUID)
     ns0:RAddOnModule(loadInformation: ns0:XLoadInformation, model: , index: , uuid: ns0:XUUID)
     ns0:RAnalogPort(portNumber: , attendantDn: ns0:String255, unattendedPort: ns0:boolean, callerIdDn: ns0:String255, callerIdEnable: ns0:boolean, callingPartySelection: , digitSending: , expectedDigits: , sigDigits: {, enable: xsd:boolean}, lines: {({line: ns0:RPhoneLine} | {lineIdentifier: ns0:RNumplanIdentifier})}, prefixDn: ns0:String255, presentationBit: , silenceSuppressionThreshold: , smdiPortNumber: , startDialProtocol: , trunk: , trunkDirection: , trunkLevel: , trunkPadRx: , trunkPadTx: , vendorConfig: ns0:XVendorConfig, timer1: , timer2: , timer3: , timer4: , timer5: , timer6: , uuid: ns0:XUUID)
     ns0:RAnnouncement(name: xsd:string, description: xsd:string, announcementFile: xsd:string, uuid: ns0:XUUID)
     ns0:RAnnunciator(name: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, locationName: ns0:XFkType, useTrustedRelayPoint: , serverName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RAppServerInfo(appServerName: ns0:XFkType, appServerContent: , content: ns0:XContent, uuid: ns0:XUUID)
     ns0:RAppUser(userid: xsd:string, password: xsd:string, passwordCredentials: {pwdCredPolicyName: ns0:XFkType, pwdCredUserCantChange: ns0:boolean, pwdCredUserMustChange: ns0:boolean, pwdCredDoesNotExpire: ns0:boolean, pwdCredTimeChanged: xsd:string, pwdCredTimeAdminLockout: xsd:string, pwdCredLockedByAdministrator: ns0:boolean}, digestCredentials: xsd:string, presenceGroupName: ns0:XFkType, acceptPresenceSubscription: ns0:boolean, acceptOutOfDialogRefer: ns0:boolean, acceptUnsolicitedNotification: ns0:boolean, allowReplaceHeader: ns0:boolean, isStandard: ns0:boolean, associatedDevices: {device: ns0:String50[]}, associatedGroups: {userGroup: {name: ns0:String100, userRoles: {userRole: ns0:String100[]}}[]}, associatedCapfProfiles: {capfProfileInstanceId: ns0:String128[]}, ctiControlledDeviceProfiles: {deviceProfile: ns0:String50[]}, uuid: ns0:XUUID)
     ns0:RApplicationDialRules(name: xsd:string, description: xsd:string, numberBeginWith: xsd:string, numberOfDigits: , digitsToBeRemoved: , prefixPattern: xsd:string, priority: , uuid: ns0:XUUID)
     ns0:RApplicationServer(appServerType: , name: xsd:string, ipAddress: xsd:string, appUsers: {selectedAppUser: {appUserName: ns0:XFkType, content: ns0:XContent}[]}, url: xsd:string, endUserUrl: xsd:string, processNodeName: ns0:XFkType, endUsers: {selectedEndUser: {endUserName: ns0:XFkType, content: ns0:XContent}[]}, uuid: ns0:XUUID)
     ns0:RApplicationUserCapfProfile(applicationUser: ns0:XFkType, instanceId: xsd:string, certificateOperation: , authenticationMode: , authenticationString: xsd:string, keySize: , operationCompletion: xsd:string, certificationOperationStatus: , uuid: ns0:XUUID)
     ns0:RArrayOfCommunityString(item: ns0:RCommunityString[])
     ns0:RArrayOfHosts(item: xsd:string[])
     ns0:RAudioCodecPreferenceList(name: xsd:string, description: xsd:string, codecsInList: {codecNames: xsd:string[]}, uuid: ns0:XUUID)
     ns0:RBLFDirectedCallPark(label: ns0:String50, ({directedCallParkId: ns0:XUUID} | {directedCallParkDnAndPartition: {dnPattern: ns0:String255, routePartitionName: ns0:XFkType}}), labelAscii: ns0:String50, index: )
     ns0:RBillingServer(hostName: xsd:string, userId: xsd:string, password: xsd:string, directory: xsd:string, resendOnFailure: ns0:boolean, billingServerProtocol: , uuid: ns0:XUUID)
     ns0:RBusyLampField(blfDest: xsd:string, ({blfDirn: ns0:String255, routePartition: xsd:string}), label: xsd:string, asciiLabel: xsd:string, associatedBlfSdFeatures: {feature: []}, index: )
     ns0:RButton(feature: , label: ns0:String50, buttonNumber: , uuid: ns0:XUUID)
     ns0:RCallForwardAll(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, secondaryCallingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:RCallForwardAlternateParty(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, duration: )
     ns0:RCallForwardBusy(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:RCallForwardBusyInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:RCallForwardNoAnswer(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, duration: )
     ns0:RCallForwardNoAnswerInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, duration: )
     ns0:RCallForwardNoCoverage(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:RCallForwardNoCoverageInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:RCallForwardNotRegistered(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:RCallForwardNotRegisteredInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:RCallForwardOnFailure(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:RCallManager(name: ns0:String50, description: ns0:String50, autoRegistration: {startDn: ns0:String255, endDn: ns0:String255, nextDn: ns0:String255, routePartitionName: ns0:XFkType, e164Mask: ns0:String50}, ports: {ethernetPhonePort: , mgcpPorts: {listen: , keepAlive: }, sipPorts: {sipPhonePort: , sipPhoneSecurePort: }}, processNodeName: ns0:XFkType, lbmGroup: ns0:XFkType, uuid: ns0:XUUID, ctiid: xsd:nonNegativeInteger)
     ns0:RCallManagerGroup(name: ns0:String50, tftpDefault: ns0:boolean, members: {member: ns0:RCallManagerMember[]}, uuid: ns0:XUUID)
     ns0:RCallManagerMember(callManagerName: ns0:XFkType, priority: , uuid: ns0:XUUID)
     ns0:RCallPark(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, callManagerName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RCallPickupGroup(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, name: xsd:Name, members: {member: ns0:RPickupGroupMember[]}, pickupNotification: , pickupNotificationTimer: , callInfoForPickupNotification: {callingPartyInfo: ns0:boolean, calledPartyInfo: ns0:boolean}, uuid: ns0:XUUID)
     ns0:RCallStateMember(callStateName: xsd:string, softKeys: {softKey: ns0:RSoftKeyMember[]})
     ns0:RCalledPartyTracing(directorynumber: xsd:string, description: xsd:string, uuid: ns0:XUUID)
     ns0:RCalledPartyTransformationPattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, calledPartyTransformationMask: xsd:string, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, routeFilterName: ns0:XFkType, calledPartyPrefixDigits: xsd:string, calledPartyNumberingPlan: , calledPartyNumberType: , uuid: ns0:XUUID)
     ns0:RCallerFilterList(name: ns0:String50, description: ns0:String128, isAllowedType: ns0:boolean, endUserIdName: ns0:XFkType, members: {member: ns0:RCallerFilterListMember[]}, uuid: ns0:XUUID)
     ns0:RCallerFilterListMember(DnMask: ns0:String50, callerFilterMask: , uuid: ns0:XUUID)
     ns0:RCallingPartyTransformationPattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, callingPartyPrefixDigits: ns0:String50, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingPartyNumberingPlan: , callingPartyNumberType: , uuid: ns0:XUUID)
     ns0:RCallingSearchSpaceMember(routePartitionName: ns0:XFkType, index: , uuid: ns0:XUUID)
     ns0:RCallsQueue(maxCallersInQueue: , queueFullDestination: ns0:String50, callingSearchSpacePilotQueueFull: ns0:XFkType, maxWaitTimeInQueue: , maxWaitTimeDestination: ns0:String50, callingSearchSpaceMaxWaitTime: ns0:XFkType, noAgentDestination: ns0:String50, callingSearchSpaceNoAgent: ns0:XFkType, networkHoldMohAudioSourceID: , uuid: ns0:XUUID)
     ns0:RCcdAdvertisingService(name: ns0:String50, description: ns0:String50, isActivated: ns0:boolean, hostDnGroup: ns0:XFkType, safSipTrunk: ns0:XFkType, safH323Trunk: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RCcdHostedDN(hostedPattern: ns0:String50, description: ns0:String255, CcdHostedDnGroup: ns0:XFkType, pstnFailoverStripDigits: , pstnFailoverPrependDigits: ns0:String255, usePstnFailover: ns0:boolean, uuid: ns0:XUUID)
     ns0:RCcdHostedDNGroup(name: ns0:String255, description: ns0:String255, pstnFailoverStripDigits: , pstnFailoverPrependDigits: ns0:String255, usePstnFailover: ns0:boolean, uuid: ns0:XUUID)
     ns0:RCcdRequestingService(name: ns0:String50, description: ns0:String50, isActivated: ns0:boolean, routePartitionName: ns0:XFkType, learnedPatternPrefix: ns0:String50, pstnPrefix: ns0:String50, associatedTrunks: {associatedTrunk: ns0:RCcdRequestingServiceMember[]}, uuid: ns0:XUUID)
     ns0:RCcdRequestingServiceMember(trunkName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RCcmExternalIpMap(callManagerName: ns0:XFkType, ipAddressHost: ns0:String255, port: ns0:String255, uuid: ns0:XUUID)
     ns0:RCertificateRole(roleName: , uuid: ns0:XUUID)
     ns0:RCiscoCatalyst600024PortFXSGateway(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, versionStamp: ns0:String128, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, ports: {port: ns0:RAnalogPort[]}, portSelectionOrder: , transmitUtf8: ns0:boolean, geoLocationFilterName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RCiscoCatalyst6000E1VoIPGateway(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIe: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIE: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , QSIGVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RCiscoCatalyst6000T1VoIPGatewayPri(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, mlppIndicationStatus: , mlppPreemption: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIe: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIE: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , QSIGVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RCiscoCatalyst6000T1VoIPGatewayT1(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, sendGeoLocation: ns0:boolean, ports: {port: ns0:RT1Port[]}, trunkSelectionOrder: , clockReference: , csuParam: , digitSending: , pcmType: , fdlChannel: , yellowAlarm: , zeroSupression: , smdiBasePort: , handleDtmfPrecedenceSignals: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, geoLocationFilterName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RCmcInfo(code: ns0:String16, description: ns0:String50, uuid: ns0:XUUID)
     ns0:RCommonDeviceConfig(name: ns0:UniqueString50, softkeyTemplateName: ns0:XFkType, userLocale: , networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , mlppDomainId: ns0:String128, mlppIndicationStatus: , useTrustedRelayPoint: ns0:boolean, preemption: , ipAddressingMode: , ipAddressingModePreferenceControl: , allowAutoConfigurationForPhones: , useImeForOutboundCalls: , uuid: ns0:XUUID)
     ns0:RCommonPhoneConfig(name: ns0:UniqueString50, description: ns0:String128, unlockPwd: ns0:String50, dndOption: , dndAlertingType: , backgroundImage: ns0:boolean, phonePersonalization: , phoneServiceDisplay: , sshUserId: ns0:String50, sshPwd: ns0:String255, vendorConfig: ns0:XVendorConfig, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , vpnGroupName: ns0:XFkType, vpnProfileName: ns0:XFkType, featureControlPolicy: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RCommunityString(communityName: xsd:string, accessPrivilege: xsd:string, ArrayOfHosts: ns0:RArrayOfHosts)
     ns0:RConferenceBridge(name: ns0:UniqueName128, description: ns0:String128, product: , devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, subUnit: , loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, maximumCapacity: , useTrustedRelayPoint: , securityProfileName: ns0:XFkType, destinationAddress: xsd:string, mcuConferenceBridgeSipPort: , sipProfile: ns0:XFkType, srtpAllowed: ns0:boolean, normalizationScript: ns0:XFkType, enableTrace: ns0:boolean, normalizationScriptInfos: {normalizationScriptInfo: ns0:RNormalizationScriptInfo[]}, userName: xsd:string, password: xsd:string, httpPort: , useHttps: ns0:boolean, uuid: ns0:XUUID)
     ns0:RCredentialPolicy(name: ns0:String255, failedLogon: , resetFailedLogonAttempts: , lockoutDuration: , credChangeDuration: , credExpiresAfter: , minCredLength: , prevCredStoredNum: , inactiveDaysAllowed: , expiryWarningDays: , trivialCredCheck: ns0:boolean, uuid: ns0:XUUID)
     ns0:RCss(name: ns0:UniqueName50, description: ns0:String50, clause: ns0:String1024, dialPlanWizardGenId: , members: {member: ns0:RCallingSearchSpaceMember[]}, partitionUsage: , uuid: ns0:XUUID)
     ns0:RCtiRoutePoint(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, userLocale: , lines: {({line: ns0:RPhoneLine[]} | {lineIdentifier: ns0:RNumplanIdentifier[]})}, uuid: ns0:XUUID)
     ns0:RCumaServerSecurityProfile(name: xsd:string, description: xsd:string, securityMode: , transportType: , x509SubjectName: xsd:string, serverIpHostName: ns0:String255, uuid: ns0:XUUID)
     ns0:RCustomUserField(field: xsd:string, uuid: ns0:XUUID)
     ns0:RDateTimeGroup(name: xsd:string, timeZone: , separator: xsd:string, dateformat: xsd:string, timeFormat: xsd:string, phoneNtpReferences: {selectedPhoneNtpReference: ns0:RDateTimeGroupNtpReference[]}, uuid: ns0:XUUID)
     ns0:RDateTimeGroupNtpReference(phoneNtpName: ns0:XFkType, selectionOrder: , uuid: ns0:XUUID)
     ns0:RDdi(name: ns0:String50, clause: ns0:String1024, dialPlanName: ns0:XFkType, digitAnalysisId: , members: {member: ns0:RDigitDiscardInstructionMember[]}, uuid: ns0:XUUID)
     ns0:RDefaultDeviceProfile(name: ns0:UniqueString128, description: ns0:String255, product: , model: , class: , protocol: , protocolSide: , userHoldMohAudioSourceId: , userLocale: , phoneButtonTemplate: ns0:XFkType, softkeyTemplate: ns0:XFkType, privacy: , singleButtonBarge: , joinAcrossLines: , ignorePi: ns0:boolean, dndStatus: ns0:boolean, dndRingSetting: , dndOption: , mlppDomainId: ns0:String128, mlppIndication: , preemption: , alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , emccCallingSearchSpace: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RDeviceMobility(name: xsd:string, subNet: xsd:string, subNetMaskSz: , members: {member: ns0:RDevicePoolDeviceMobility[]}, uuid: ns0:XUUID)
     ns0:RDeviceMobilityGroup(name: xsd:string, description: xsd:string, uuid: ns0:XUUID)
     ns0:RDevicePool(name: ns0:UniqueString50, autoSearchSpaceName: ns0:XFkType, dateTimeSettingName: ns0:XFkType, callManagerGroupName: ns0:XFkType, mediaResourceListName: ns0:XFkType, regionName: ns0:XFkType, networkLocale: , srstName: ns0:XFkType, connectionMonitorDuration: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, locationName: ns0:XFkType, mobilityCssName: ns0:XFkType, physicalLocationName: ns0:XFkType, deviceMobilityGroupName: ns0:XFkType, revertPriority: , singleButtonBarge: , joinAcrossLines: , cgpnTransformationCssName: ns0:XFkType, cdpnTransformationCssName: ns0:XFkType, localRouteGroupName: ns0:XFkType, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, callingPartyNationalPrefix: ns0:String16, callingPartyInternationalPrefix: ns0:String16, callingPartyUnknownPrefix: ns0:String16, callingPartySubscriberPrefix: ns0:String16, adjunctCallingSearchSpace: ns0:XFkType, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, imeEnrolledPatternGroupName: ns0:XFkType, cntdPnTransformationCssName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RDevicePoolDeviceMobility(devicePoolName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RDeviceProfile(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , userHoldMohAudioSourceId: , vendorConfig: ns0:XVendorConfig, versionStamp: ns0:String128, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , lines: {({line: ns0:RPhoneLine[]} | {lineIdentifier: ns0:RNumplanIdentifier[]})}, numberOfButtons: , phoneTemplateName: ns0:XFkType, speeddials: {speeddial: ns0:RSpeeddial[]}, busyLampFields: {busyLampField: ns0:RBusyLampField[]}, blfDirectedCallParks: {blfDirectedCallPark: ns0:RBLFDirectedCallPark[]}, addOnModules: {addOnModule: ns0:RAddOnModule[]}, userLocale: , defaultProfileName: ns0:String50, currentProfileName: ns0:XFkType, loginTime: , loginDuration: , singleButtonBarge: , joinAcrossLines: , loginUserId: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, dndOption: , dndRingSetting: , dndStatus: ns0:boolean, emccCallingSearchSpace: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , softkeyTemplateName: ns0:XFkType, callInfoPrivacyStatus: , currentConfig: {userHoldMohAudioSourceId: , phoneTemplateName: ns0:XFkType, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , softkeyTemplateName: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, singleButtonBarge: , joinAcrossLines: , callInfoPrivacyStatus: , dndStatus: ns0:boolean, dndRingSetting: , dndOption: , alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , emccCallingSearchSpaceName: ns0:XFkType, deviceName: ns0:String255, model: , product: , deviceProtocol: , class: , addressMode: , allowAutoConfig: , remoteSrstOption: ns0:String50, remoteSrstIp: ns0:String15, remoteSrstPort: , remoteSipSrstIp: ns0:String15, remoteSipSrstPort: , geolocationInfo: ns0:String2048}, services: {service: ns0:RSubscribedService[]}, featureControlPolicy: ns0:XFkType, userlocale: , ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RDhcpServer(processNodeName: ns0:XFkType, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, primaryTftpServerIpAddress: xsd:string, secondaryTftpServerIpAddress: xsd:string, bootstrapServerIpAddress: xsd:string, domainName: xsd:string, tftpServerName: xsd:string, arpCacheTimeout: , ipAddressLeaseTime: , renewalTime: , rebindingTime: , uuid: ns0:XUUID)
     ns0:RDhcpSubnet(dhcpServerName: ns0:XFkType, subnetIpAddress: xsd:string, primaryStartIpAddress: xsd:string, primaryEndIpAddress: xsd:string, secondaryStartIpAddress: xsd:string, secondaryEndIpAddress: xsd:string, primaryRouterIpAddress: xsd:string, secondaryRouterIpAddress: xsd:string, subnetMask: xsd:string, domainName: xsd:string, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, tftpServerName: xsd:string, primaryTftpServerIpAddress: xsd:string, secondaryTftpServerIpAddress: xsd:string, bootstrapServerIpAddress: xsd:string, arpCacheTimeout: , ipAddressLeaseTime: , renewalTime: , rebindingTime: , uuid: ns0:XUUID)
     ns0:RDialPlan(name: ns0:String50, description: ns0:String50, uuid: ns0:XUUID)
     ns0:RDialPlanTag(name: ns0:String50, dialPlanName: ns0:XFkType, operator: , suppressFromRouteFilter: ns0:boolean, uuid: ns0:XUUID)
     ns0:RDigitDiscardInstructionMember(dialPlanTagName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RDirectedCallPark(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, retrievalPrefix: xsd:string, reversionPattern: xsd:string, revertCssName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RDirectoryLookupDialRules(name: xsd:string, description: xsd:string, numberBeginWith: xsd:string, numberOfDigits: , digitsToBeRemoved: , prefixPattern: xsd:string, priority: , uuid: ns0:XUUID)
     ns0:RDirectoryUri(isPrimary: ns0:boolean, uri: ns0:String128, partition: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RDirn(pattern: xsd:string, routePartitionName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:REmccFeatureConfig(parameterName: ns0:String50, value: ns0:String255, uuid: ns0:XUUID)
     ns0:REndUserCapfProfile(endUserId: ns0:XFkType, instanceId: xsd:string, certificationOperation: , authenticationMode: , authenticationString: xsd:string, keySize: , operationCompletion: xsd:string, certificationOperationStatus: , uuid: ns0:XUUID)
     ns0:REnduserMember(userId: xsd:string)
     ns0:REnterpriseFeatureAccessConfiguration(pattern: ns0:String16, routePartitionName: ns0:XFkType, description: xsd:string, isDefaultEafNumber: ns0:boolean, uuid: ns0:XUUID)
     ns0:RExternalCallControlProfile(name: ns0:String50, primaryUri: ns0:String255, secondaryUri: ns0:String255, enableLoadBalancing: ns0:boolean, routingRequestTimer: , diversionReroutingCssName: ns0:XFkType, callTreatmentOnFailure: , uuid: ns0:XUUID)
     ns0:RFacInfo(name: ns0:String50, code: ns0:String16, authorizationLevel: , uuid: ns0:XUUID)
     ns0:RFallbackFeatureConfig(enableFallbackForImeCalls: ns0:boolean, qosSensistivityLevel: , dtmfCorrelationDigits: , dtmfCollectionTimer: , callAnswerTimer: , clearImeCallDelayTimer: , dtmfInterDigitDelayTimer: , postConnectFallbackDelayTimer: , fallbackSplitDelayTimer: , callCss: )
     ns0:RFallbackProfile(name: ns0:String50, description: xsd:string, advertisedFallbackDirectoryE164Number: xsd:string, qosSensistivityLevel: , callCss: , callAnswerTimer: , directoryNumberPartition: ns0:XFkType, directoryNumber: ns0:String16, numberOfDigitsForCallerIDPartialMatch: , numberOfCorrelationDtmfDigits: , uuid: ns0:XUUID)
     ns0:RFeatureControlConfig(featureName: ns0:String50, defaultValue: ns0:boolean, overrideDefault: ns0:boolean, enableSetting: ns0:boolean, uuid: ns0:XUUID)
     ns0:RFeatureControlPolicy(name: ns0:String50, description: ns0:String100, features: {feature: ns0:RFeatureControlConfig[]}, uuid: ns0:XUUID)
     ns0:RFixedMohAudioSource(sourceId: , name: xsd:string, multicast: ns0:boolean, enable: xsd:string, uuid: ns0:XUUID)
     ns0:RGatekeeper(name: ns0:UniqueString128, description: ns0:String128, rrqTimeToLive: , retryTimeout: , enableDevice: ns0:boolean, uuid: ns0:XUUID)
     ns0:RGateway(domainName: xsd:string, description: xsd:string, product: , protocol: , callManagerGroupName: ns0:XFkType, units: {unit: {index: , product: , subunits: {subunit: {index: , product: , beginPort: }[]}}[]}, scratch: xsd:string, vendorConfig: ns0:XVendorConfig, versionStamp: xsd:string, loadInformation: xsd:string, uuid: ns0:XUUID)
     ns0:RGatewayEndpointAnalog(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, port: ns0:RAnalogPort, trunkSelectionOrder: , transmitUtf8: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, callingPartyNumberPrefix: ns0:String16, callingPartyStripDigits: , callingPartyUnknownTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnknown: ns0:boolean, hotlineDevice: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, imeE164DirectoryNumber: ns0:String16, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RGatewayEndpointAnalogAccess(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:RGatewayEndpointAnalog, uuid: ns0:XUUID)
     ns0:RGatewayEndpointDigitalAccessBri(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:RGatewayEndpointDigitalBri, uuid: ns0:XUUID)
     ns0:RGatewayEndpointDigitalAccessPri(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:RGatewayEndpointDigitalPri, uuid: ns0:XUUID)
     ns0:RGatewayEndpointDigitalAccessT1(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:RGatewayEndpointDigitalT1, uuid: ns0:XUUID)
     ns0:RGatewayEndpointDigitalBri(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkLocale: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, briProtocol: , calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , clockReference: , csuParam: , dChannelEnable: ns0:boolean, channelSelectionOrder: , pcmType: , firstDelay: , intraDelay: , redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , prefix: xsd:string, presentationBit: , sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {xsd:nonNegativeInteger, enable: xsd:boolean}, statusPoll: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, geoLocationFilterName: ns0:XFkType, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, GClearEnable: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RGatewayEndpointDigitalPri(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, mlppIndicationStatus: , mlppPreemption: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIE: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIe: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {xsd:nonNegativeInteger, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , GClearEnable: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , qsigVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, routeClassSignalling: , nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RGatewayEndpointDigitalT1(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, v150: ns0:boolean, geoLocationFilterName: ns0:XFkType, ports: {port: ns0:RT1Port[]}, trunkSelectionOrder: , clockReference: , csuParam: , digitSending: , pcmType: , fdlChannel: , yellowAlarm: , zeroSupression: , smdiBasePort: , handleDtmfPrecedenceSignals: ns0:boolean, encodeOutboundVoiceRouteClass: ns0:boolean, routeClassSignalling: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RGatewaySccp(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, transmitUtf8: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, callingPartyNumberPrefix: ns0:String16, callingPartyStripDigits: , callingPartyUnknownTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnknown: ns0:boolean, hotlineDevice: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, phoneTemplateName: ns0:XFkType, securityProfileName: ns0:XFkType, userLocale: , deviceMobilityMode: , ownerUserId: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVM: , allowCtiControlFlag: ns0:boolean, remoteDevice: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, unattendedPort: ns0:boolean, presenceGroupName: ns0:XFkType, mlppIndicationStatus: , preemption: , hlogStatus: ns0:boolean, ignorePresentationIndicators: , lines: {({line: ns0:RPhoneLine} | {lineIdentifier: ns0:RNumplanIdentifier})}, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RGatewaySccpEndpoints(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:RGatewaySccp, uuid: ns0:XUUID)
     ns0:RGatewaySubunits(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunits: {subunit: {index: , product: , beginPort: }[]}, uuid: ns0:XUUID)
     ns0:RGeoLocation(name: ns0:String50, country: xsd:string, description: ns0:String255, nationalSubDivision: ns0:String100, district: ns0:String255, communityName: ns0:String255, cityDivision: ns0:String255, neighbourhood: ns0:String255, street: ns0:String255, leadingStreetDirection: ns0:String50, trailingStreetSuffix: ns0:String50, streetSuffix: ns0:String255, houseNumber: ns0:String16, houseNumberSuffix: ns0:String100, landmark: ns0:String255, location: ns0:String255, floor: ns0:String16, occupantName: ns0:String255, postalCode: ns0:String100, uuid: ns0:XUUID)
     ns0:RGeoLocationFilter(name: ns0:String50, description: ns0:String255, useCountry: ns0:boolean, useNationalSubDivision: ns0:boolean, useDistrict: ns0:boolean, useCommunityName: ns0:boolean, useCityDivision: ns0:boolean, useNeighbourhood: ns0:boolean, useStreet: ns0:boolean, useLeadingStreetDirection: ns0:boolean, useTrailingStreetSuffix: ns0:boolean, useStreetSuffix: ns0:boolean, useHouseNumber: ns0:boolean, useHouseNumberSuffix: ns0:boolean, useLandmark: ns0:boolean, useLocation: ns0:boolean, useFloor: ns0:boolean, useOccupantName: ns0:boolean, usePostalCode: ns0:boolean, uuid: ns0:XUUID)
     ns0:RGeoLocationPolicy(name: ns0:String50, country: xsd:string, description: ns0:String255, nationalSubDivision: ns0:String100, district: ns0:String255, communityName: ns0:String255, cityDivision: ns0:String255, neighbourhood: ns0:String255, street: ns0:String255, leadingStreetDirection: ns0:String50, trailingStreetSuffix: ns0:String50, streetSuffix: ns0:String255, houseNumber: ns0:String16, houseNumberSuffix: ns0:String100, landmark: ns0:String255, location: ns0:String255, floor: ns0:String16, occupantName: ns0:String255, postalCode: ns0:String100, relatedPolicies: {relatedPolicy: ns0:RPolicyRelationship[]}, uuid: ns0:XUUID)
     ns0:RH323Gateway(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , vendorConfig: ns0:XVendorConfig, pathReplacementSupport: ns0:boolean, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , srtpAllowed: ns0:boolean, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , enableInboundFaststart: ns0:boolean, enableOutboundFaststart: ns0:boolean, codecForOutboundFaststart: , transmitUtf8: ns0:boolean, signalingPort: , allowH235PassThrough: ns0:boolean, sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String50, calledPartyIeNumberType: , callingPartyIeNumberType: , calledNumberingPlan: , callingNumberingPlan: , callingPartyNationalPrefix: ns0:String16, callingPartyInternationalPrefix: ns0:String16, callingPartyUnknownPrefix: ns0:String16, callingPartySubscriberPrefix: ns0:String16, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, displayIeDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, useDevicePoolCalledCssNatl: ns0:boolean, useDevicePoolCalledCssIntl: ns0:boolean, useDevicePoolCalledCssUnkn: ns0:boolean, useDevicePoolCalledCssSubs: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RH323Line(index: , label: ns0:String50, asciiLabel: ns0:String50, display: ns0:String50, dirn: ns0:RDirn, displayAscii: ns0:String50, e164Mask: ns0:String255, dialPlanWizardId: , maxNumCalls: , busyTrigger: , callInfoDisplay: {callerName: ns0:boolean, callerNumber: ns0:boolean, redirectedNumber: ns0:boolean, dialedNumber: ns0:boolean}, recordingProfileName: ns0:XFkType, monitoringCssName: ns0:XFkType, recordingFlag: , audibleMwi: , speedDial: xsd:string, partitionUsage: , associatedEndusers: {enduser: ns0:REnduserMember[]}, uuid: ns0:XUUID, ctiid: xsd:nonNegativeInteger)
     ns0:RH323Phone(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, remoteDevice: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , srtpAllowed: ns0:boolean, unattendedPort: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, mtpPreferredCodec: , callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , displayIEDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, presenceGroupName: ns0:XFkType, hlogStatus: ns0:boolean, ownerUserName: ns0:XFkType, signalingPort: , gateKeeperInfo: {gateKeeperName: ns0:XFkType, e164: ns0:String50, technologyPrefix: ns0:String50, zone: ns0:String50}, lines: {({line: ns0:RH323Line[]} | {lineIdentifier: ns0:RNumplanIdentifier[]})}, ignorePresentationIndicators: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RH323Trunk(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , srtpAllowed: ns0:boolean, unattendedPort: ns0:boolean, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , displayIEDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, enableInboundFaststart: ns0:boolean, enableOutboundFaststart: ns0:boolean, codecForOutboundFaststart: , allowH235PassThrough: ns0:boolean, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , transmitUtf8: ns0:boolean, signalingPort: , nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String50, calledPartyIeNumberType: , callingPartyIeNumberType: , calledNumberingPlan: , callingNumberingPlan: , pathReplacementSupport: ns0:boolean, ({gateKeeperInfo: {gateKeeper: ns0:XFkType, terminalType: , technologyPrefix: ns0:String50, zone: ns0:String50}} | {remoteServerinfo: {server1: ns0:String255, server2: ns0:String255, server3: ns0:String255}}), ictPassingPrecedenceLevelThroughUuie: ns0:boolean, ictSecurityAccessLevel: , isSafEnabled: ns0:boolean, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, useDevicePoolCalledCssNatl: ns0:boolean, useDevicePoolCalledCssIntl: ns0:boolean, useDevicePoolCalledCssUnkn: ns0:boolean, useDevicePoolCalledCssSubs: ns0:boolean, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, runOnEveryNode: ns0:boolean, destinations: {destination: ns0:RH323TrunkDestination[]}, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RH323TrunkDestination(addressIpv4: ns0:String255, sortOrder: , uuid: ns0:XUUID)
     ns0:RHandoffConfiguration(pattern: ns0:String16, routePartitionName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RHuntForwardInfoBusy(usePersonalPreferences: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, maxHuntduration: )
     ns0:RHuntForwardInfoNoAnswer(usePersonalPreferences: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, maxHuntduration: )
     ns0:RHuntList(name: xsd:Name, description: xsd:string, callManagerGroupName: ns0:XFkType, routeListEnabled: ns0:boolean, voiceMailUsage: ns0:boolean, members: {member: ns0:RHuntListMember[]}, uuid: ns0:XUUID)
     ns0:RHuntListMember(lineGroupName: ns0:XFkType, selectionOrder: , uuid: ns0:XUUID)
     ns0:RHuntPilot(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , patternPrecedence: , provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , huntListName: ns0:XFkType, parkMonForwardNoRetrieve: {usePersonalPreferences: ns0:boolean, destination: ns0:String50, callingSearchSpaceName: ns0:XFkType}, alertingName: ns0:String50, asciiAlertingName: ns0:String32, e164Mask: xsd:string, aarNeighborhoodName: ns0:XFkType, forwardHuntNoAnswer: {usePersonalPreferences: ns0:boolean, destination: xsd:string, callingSearchSpaceName: ns0:XFkType}, forwardHuntBusy: {usePersonalPreferences: ns0:boolean, destination: xsd:string, callingSearchSpaceName: ns0:XFkType}, callPickupGroupName: ns0:XFkType, maxHuntduration: , releaseClause: , displayConnectedNumber: ns0:boolean, queueCalls: ns0:RCallsQueue, uuid: ns0:XUUID)
     ns0:RImeClient(name: ns0:String50, description: xsd:string, domain: ns0:String255, isActivated: ns0:boolean, sipTrunkName: ns0:XFkType, primaryImeServerName: ns0:XFkType, secondaryImeServerName: ns0:XFkType, learnedRouteFilterGroupName: ns0:XFkType, exclusionNumberGroupName: ns0:XFkType, firewallName: ns0:XFkType, members: {member: ns0:RImeClientMember[]}, ccmExternalIpMaps: {ccmExternalIpMap: ns0:RCcmExternalIpMap[]}, uuid: ns0:XUUID)
     ns0:RImeClientMember(enrolledPatternGroupName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RImeE164Transformation(name: ns0:String50, description: xsd:string, cgpnTransformationCssName: ns0:XFkType, isCgpnPreTransformation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, isCdpnPreTransformation: ns0:boolean, incomingCgpnTransformationProfileName: ns0:XFkType, incomingCdpnTransformationProfileName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RImeEnrolledPattern(pattern: ns0:String16, description: xsd:string, imeEnrolledPatternGroupName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RImeEnrolledPatternGroup(name: ns0:String50, description: xsd:string, fallbackProfileName: ns0:XFkType, isPatternAllAlias: ns0:boolean, uuid: ns0:XUUID)
     ns0:RImeExclusionNumber(pattern: ns0:String16, description: xsd:string, imeExclusionNumberGroupName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RImeExclusionNumberGroup(name: ns0:String50, description: xsd:string, uuid: ns0:XUUID)
     ns0:RImeFeatureConfig(preventImeCallsFromAnalogGateways: ns0:boolean, enableIntraDomain: ns0:boolean, allowMwiNotification: ns0:boolean, trunkConnectionTimer: , firewallConnectionTimer: , firewallTranscationTimer: , firewallIdleTimer: , failedCallAttemptThreshold: , callFallbackAttemptThreshold: , qualityTimer: , useImeForOutboundCalls: ns0:boolean)
     ns0:RImeFirewall(name: ns0:String50, description: xsd:string, ipAddress: ns0:String15, port: , uuid: ns0:XUUID)
     ns0:RImeLearnedRoutes(e164Did: ns0:String32, domain: ns0:String255, signaling: ns0:String1024, learnedOn: ns0:String32, expiresOn: ns0:String32, adminEnabled: ns0:boolean, uuid: ns0:XUUID)
     ns0:RImeRouteFilterElement(name: ns0:String50, description: xsd:string, elementType: , imeRouteFilterGroupName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RImeRouteFilterGroup(name: ns0:String50, description: xsd:string, groupTrustSetting: ns0:boolean, uuid: ns0:XUUID)
     ns0:RImeServer(name: ns0:String50, description: xsd:string, ipAddress: xsd:string, port: , deviceSecurityMode: , applicationUser: ns0:XFkType, reconnectInterval: , uuid: ns0:XUUID)
     ns0:RImportedDirectoryUriCatalogs(name: xsd:string, description: xsd:string, routeString: xsd:string, lastLoadedFileName: xsd:string, fileLoadDateTime: , uuid: ns0:XUUID)
     ns0:RInterClusterServiceProfile(interClusterService: , isActivated: ns0:boolean, sipTrunkName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RIpPhoneServices(serviceName: ns0:UniqueString128, asciiServiceName: ns0:UniqueString128, serviceDescription: ns0:String128, serviceUrl: xsd:string, secureServiceUrl: xsd:string, serviceCategory: , serviceType: , serviceVendor: xsd:string, serviceVersion: xsd:string, enabled: ns0:boolean, enterpriseSubscription: ns0:boolean, parameters: {parameter: ns0:RIpPhoneServicesParameter[]}, uuid: ns0:XUUID)
     ns0:RIpPhoneServicesParameter(name: ns0:UniqueString50, displayName: ns0:String128, default: ns0:String255, description: ns0:String255, paramRequired: ns0:boolean, paramPassword: ns0:boolean, uuid: ns0:XUUID)
     ns0:RIvrUserLocale(userLocale: , orderIndex: , uuid: ns0:XUUID)
     ns0:RLbmGroup(name: xsd:string, Description: xsd:string, ProcessnodeActive: ns0:XFkType, ProcessnodeStandby: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RLbmHubGroup(name: xsd:string, description: xsd:string, member1: xsd:string, member2: xsd:string, member3: xsd:string, uuid: ns0:XUUID)
     ns0:RLdapDirectory(name: ns0:String50, ldapDn: ns0:String128, ldapPassword: ns0:String128, userSearchBase: ns0:String255, repeatable: ns0:boolean, intervalValue: , scheduleUnit: , nextExecTime: ns0:String32, servers: {server: {hostName: ns0:String128, ldapPortNumber: , sslEnabled: ns0:boolean}[]}, middleName: ns0:String128, phoneNumber: ns0:String128, mailId: ns0:String128, userId: ns0:String128, managerId: ns0:String128, firstName: ns0:String128, lastName: ns0:String128, department: ns0:String128, ldapFilter: ns0:XFkType, directoryUri: ns0:String128, uuid: ns0:XUUID)
     ns0:RLdapFilter(name: ns0:String4096, filter: ns0:String255, uuid: ns0:XUUID)
     ns0:RLdapSyncCustomField(ldapConfigurationName: xsd:string, customUserField: xsd:string, ldapUserField: xsd:string, uuid: ns0:XUUID)
     ns0:RLicenseCapabilities(userid: xsd:string, enableUps: ns0:boolean, enableUpc: ns0:boolean, uuid: ns0:XUUID)
     ns0:RLine(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, aarDestinationMask: ns0:String128, aarKeepCallHistory: ns0:boolean, aarVoiceMailEnabled: ns0:boolean, callForwardAll: ns0:RCallForwardAll, callForwardBusy: ns0:RCallForwardBusy, callForwardBusyInt: ns0:RCallForwardBusyInt, callForwardNoAnswer: ns0:RCallForwardNoAnswer, callForwardNoAnswerInt: ns0:RCallForwardNoAnswerInt, callForwardNoCoverage: ns0:RCallForwardNoCoverage, callForwardNoCoverageInt: ns0:RCallForwardNoCoverageInt, callForwardOnFailure: ns0:RCallForwardOnFailure, callForwardAlternateParty: ns0:RCallForwardAlternateParty, callForwardNotRegistered: ns0:RCallForwardNotRegistered, callForwardNotRegisteredInt: ns0:RCallForwardNotRegisteredInt, callPickupGroupName: ns0:XFkType, autoAnswer: , networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , alertingName: ns0:String50, asciiAlertingName: ns0:String32, presenceGroupName: ns0:XFkType, shareLineAppearanceCssName: ns0:XFkType, voiceMailProfileName: ns0:XFkType, patternPrecedence: , releaseClause: , hrDuration: , hrInterval: , cfaCssPolicy: , defaultActivatedDeviceName: ns0:XFkType, parkMonForwardNoRetrieveDn: ns0:String50, parkMonForwardNoRetrieveIntDn: ns0:String50, parkMonForwardNoRetrieveVmEnabled: ns0:boolean, parkMonForwardNoRetrieveIntVmEnabled: ns0:boolean, parkMonForwardNoRetrieveCssName: ns0:XFkType, parkMonForwardNoRetrieveIntCssName: ns0:XFkType, parkMonReversionTimer: , partyEntranceTone: , directoryURIs: {directoryUri: ns0:RDirectoryUri[]}, allowCtiControlFlag: ns0:boolean, rejectAnonymousCall: ns0:boolean, uuid: ns0:XUUID)
     ns0:RLineAppearanceAssociationForPresence(laapAssociate: ns0:XFkType, laapProductType: ns0:String128, laapDeviceName: ns0:String128, laapDirectory: ns0:String128, laapPartition: ns0:String128, laapDescription: ns0:String128, uuid: ns0:XUUID)
     ns0:RLineAssociation(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), index: )
     ns0:RLineGroup(name: xsd:Name, distributionAlgorithm: , rnaReversionTimeOut: , huntAlgorithmNoAnswer: , huntAlgorithmBusy: , huntAlgorithmNotAvailable: , members: {member: ns0:RLineGroupMember[]}, autoLogOffHunt: ns0:boolean, uuid: ns0:XUUID)
     ns0:RLineGroupMember(lineSelectionOrder: , directoryNumber: ns0:RDirn, uuid: ns0:XUUID)
     ns0:RLocation(name: ns0:String50, id: , kbits: , videoKbits: , relatedLocations: {relatedLocation: ns0:RLocationRelationship[]}, withinAudioBandwidth: , withinVideoBandwidth: , withinImmersiveKbits: , betweenLocations: {betweenLocation: ns0:RLocationBetween[]}, uuid: ns0:XUUID)
     ns0:RLocationBetween(locationName: ns0:XFkType, weight: , audioBandwidth: , videoBandwidth: , immersiveBandwidth: , uuid: ns0:XUUID)
     ns0:RLocationRelationship(locationName: ns0:XFkType, rsvpSetting: , uuid: ns0:XUUID)
     ns0:RMediaResourceGroup(name: ns0:String50, description: ns0:String50, multicast: ns0:boolean, members: {member: ns0:RMediaResourceGroupMember[]}, uuid: ns0:XUUID)
     ns0:RMediaResourceGroupMember(deviceName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RMediaResourceList(name: ns0:String50, clause: ns0:String1024, members: {member: ns0:RMediaResourceListMember[]}, uuid: ns0:XUUID)
     ns0:RMediaResourceListMember(mediaResourceGroupName: ns0:XFkType, order: , uuid: ns0:XUUID)
     ns0:RMeetMe(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, minimumSecurityLevel: , uuid: ns0:XUUID)
     ns0:RMessageWaiting(pattern: xsd:string, routePartitionName: ns0:XFkType, description: ns0:String128, messageWaitingIndicator: ns0:boolean, callingSearchSpaceName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RMlppDomain(domainName: xsd:string, domainId: xsd:string, uuid: ns0:XUUID)
     ns0:RMobileSmartClientProfile(name: xsd:string, mobileSmartClient: , enableSnrUri: xsd:string, enableCFAUri: xsd:string, handOffUri: xsd:string, uuid: ns0:XUUID)
     ns0:RMobileVoiceAccess(pattern: xsd:string, routePartitionName: ns0:XFkType, locales: {locale: ns0:RMobileVoiceMember[]}, uuid: ns0:XUUID)
     ns0:RMobileVoiceMember(userLocale: , orderIndex: , uuid: ns0:XUUID)
     ns0:RMobility(handoffNumber: ns0:XFkType, handoffPartitionName: ns0:XFkType, DTMFNumber: ns0:XFkType, DTMFPartitionName: ns0:XFkType)
     ns0:RMobilityProfile(name: ns0:String50, description: xsd:string, mobileClientCallingOption: , dvofServiceAccessNumber: xsd:string, dirn: ns0:RDirn, dvorCallerId: xsd:string, uuid: ns0:XUUID)
     ns0:RMohAudioSource(sourceId: , name: ns0:String50, sourceFile: ns0:String255, multicast: ns0:boolean, repeat: ns0:boolean, mohFileStatus: , initialAnnouncement: ns0:XFkType, periodicAnnouncement: ns0:XFkType, periodicAnnouncementInterval: , localeAnnouncement: , initialAnnouncementPlayed: ns0:boolean, uuid: ns0:XUUID)
     ns0:RMohServer(name: xsd:string, description: xsd:string, processNodeName: ns0:XFkType, devicePoolName: ns0:XFkType, locationName: ns0:XFkType, maxUnicastConnections: , maxMulticastConnections: , fixedAudioSourceDevice: xsd:string, runFlag: ns0:boolean, useTrustedRelayPoint: , isMultiCastEnabled: ns0:boolean, baseMulticastIpaddress: xsd:string, baseMulticastPort: , multicastIncrementOnIp: ns0:boolean, audioSources: {audioSource: {sourceId: , maxHops: }[]}, uuid: ns0:XUUID)
     ns0:RMtp(mtpType: , name: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, trustedRelayPoint: ns0:boolean, uuid: ns0:XUUID)
     ns0:RNormalizationScriptInfo(parameterName: ns0:String128, parameterValue: ns0:String128, uuid: ns0:XUUID)
     ns0:RNotification(objectList: ns0:XNotification[])
     ns0:RNotificationChange(objectLists: ns0:RNotification)
     ns0:RNumplanIdentifier(directoryNumber: ns0:String255, routePartitionName: ns0:String50)
     ns0:RObjectList(object: ns0:String32)
     ns0:RParameterMember(parameter: , value: xsd:string, selectionOrder: )
     ns0:RPatternMember(description: xsd:string, dialParameters: {dialParameter: ns0:RParameterMember[]}, selectionOrder: )
     ns0:RPhone(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, versionStamp: ns0:String128, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, securityProfileName: ns0:XFkType, sipProfileName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, lines: {({line: ns0:RPhoneLine[]} | {lineIdentifier: ns0:RNumplanIdentifier[]})}, numberOfButtons: , phoneTemplateName: ns0:XFkType, speeddials: {speeddial: ns0:RSpeeddial[]}, busyLampFields: {busyLampField: ns0:RBusyLampField[]}, primaryPhoneName: ns0:XFkType, ringSettingIdleBlfAudibleAlert: , ringSettingBusyBlfAudibleAlert: , blfDirectedCallParks: {blfDirectedCallPark: ns0:RBLFDirectedCallPark[]}, addOnModules: {addOnModule: ns0:RAddOnModule[]}, userLocale: , networkLocale: , idleTimeout: , authenticationUrl: xsd:string, directoryUrl: xsd:string, idleUrl: xsd:string, informationUrl: xsd:string, messagesUrl: xsd:string, proxyServerUrl: xsd:string, servicesUrl: xsd:string, services: {service: ns0:RSubscribedService[]}, softkeyTemplateName: ns0:XFkType, loginUserId: ns0:String255, defaultProfileName: ns0:XFkType, enableExtensionMobility: ns0:boolean, currentProfileName: ns0:XFkType, loginTime: , loginDuration: , currentConfig: {userHoldMohAudioSourceId: , phoneTemplateName: ns0:XFkType, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , softkeyTemplateName: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, singleButtonBarge: , joinAcrossLines: , callInfoPrivacyStatus: , dndStatus: ns0:boolean, dndRingSetting: , dndOption: , alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , emccCallingSearchSpaceName: ns0:XFkType, deviceName: ns0:String255, model: , product: , deviceProtocol: , class: , addressMode: , allowAutoConfig: , remoteSrstOption: ns0:String50, remoteSrstIp: ns0:String15, remoteSrstPort: , remoteSipSrstIp: ns0:String15, remoteSipSrstPort: , geolocationInfo: ns0:String2048}, singleButtonBarge: , joinAcrossLines: , builtInBridgeStatus: , callInfoPrivacyStatus: , hlogStatus: , ownerUserName: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , subscribeCallingSearchSpaceName: ns0:XFkType, rerouteCallingSearchSpaceName: ns0:XFkType, allowCtiControlFlag: ns0:boolean, presenceGroupName: ns0:XFkType, unattendedPort: ns0:boolean, requireDtmfReception: ns0:boolean, rfc2833Disabled: ns0:boolean, certificateOperation: , authenticationMode: , keySize: , authenticationString: ns0:String128, certificateStatus: , upgradeFinishTime: xsd:string, deviceMobilityMode: , roamingDevicePoolName: ns0:XFkType, remoteDevice: ns0:boolean, dndOption: , dndRingSetting: , dndStatus: ns0:boolean, isActive: ns0:boolean, isDualMode: ns0:boolean, mobilityUserIdName: ns0:XFkType, phoneSuite: , phoneServiceDisplay: , isProtected: ns0:boolean, mobileSmartClientProfileName: ns0:XFkType, mtpRequired: ns0:boolean, mtpPreferedCodec: , dialRulesName: ns0:XFkType, sshUserId: ns0:String50, sshPwd: ns0:String255, digestUser: ns0:String255, outboundCallRollover: , hotlineDevice: ns0:boolean, secureInformationUrl: ns0:String255, secureDirectoryUrl: ns0:String255, secureMessageUrl: ns0:String255, secureServicesUrl: ns0:String255, secureAuthenticationUrl: ns0:String255, secureIdleUrl: ns0:String255, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , featureControlPolicy: ns0:XFkType, deviceTrustMode: , earlyOfferSupportForVoiceCall: ns0:boolean, requireThirdPartyRegistration: ns0:boolean, blockIncomingCallsWhenRoaming: ns0:boolean, homeNetworkId: xsd:string, AllowPresentationSharingUsingBfcp: ns0:boolean, requireOffPremiseLocation: ns0:boolean, userlocale: , ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RPhoneButtonTemplate(name: xsd:string, isUserModifiable: ns0:boolean, buttons: {button: ns0:RButton[]}, uuid: ns0:XUUID)
     ns0:RPhoneLine(index: , label: ns0:String50, asciiLabel: ns0:String50, display: ns0:String50, dirn: ns0:RDirn, ringSetting: , consecutiveRingSetting: , ringSettingIdlePickupAlert: , ringSettingActivePickupAlert: , displayAscii: ns0:String50, e164Mask: ns0:String255, dialPlanWizardId: , mwlPolicy: , maxNumCalls: , busyTrigger: , callInfoDisplay: {callerName: ns0:boolean, callerNumber: ns0:boolean, redirectedNumber: ns0:boolean, dialedNumber: ns0:boolean}, recordingProfileName: ns0:XFkType, monitoringCssName: ns0:XFkType, recordingFlag: , audibleMwi: , speedDial: xsd:string, partitionUsage: , associatedEndusers: {enduser: ns0:REnduserMember[]}, missedCallLogging: ns0:boolean, uuid: ns0:XUUID, ctiid: xsd:nonNegativeInteger)
     ns0:RPhoneNtp(ipAddress: xsd:string, description: xsd:string, mode: , uuid: ns0:XUUID)
     ns0:RPhoneSecurityProfile(phoneType: , protocol: , name: xsd:string, description: xsd:string, deviceSecurityMode: , authenticationMode: , keySize: , tftpEncryptedConfig: ns0:boolean, nonceValidityTime: , transportType: , sipPhonePort: , enableDigestAuthentication: ns0:boolean, excludeDigestCredentials: ns0:boolean, uuid: ns0:XUUID)
     ns0:RPhysicalLocation(name: xsd:string, description: xsd:string, uuid: ns0:XUUID)
     ns0:RPickupGroupMember(priority: , ({pickupGroupName: ns0:XFkType} | {pickupDnAndPartition: {dnPattern: ns0:String255, routePartitionName: ns0:XFkType}}), uuid: ns0:XUUID)
     ns0:RPolicyRelationship(geoLocationPolicyAName: ns0:XFkType, geoLocationDeviceA: , geoLocationPolicyBName: ns0:XFkType, geoLocationDeviceB: , logicalPartitionPolicy: , uuid: ns0:XUUID)
     ns0:RPresenceGroup(name: xsd:string, description: xsd:string, presenceGroups: {presenceGroup: ns0:RPresenceGroupMember[]}, uuid: ns0:XUUID)
     ns0:RPresenceGroupMember(presenceGroupName: ns0:XFkType, subscriptionPermission: , uuid: ns0:XUUID)
     ns0:RProcessNode(name: ns0:String255, description: ns0:String50, mac: ns0:XMacAddress, ipv6Name: xsd:string, nodeUsage: , lbmHubGroup: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RProcessNodeService(processNodeName: ns0:XFkType, service: , traceLevel: , userCategories: , enable: ns0:boolean, numFiles: , maxFileSize: , isActive: ns0:boolean, uuid: ns0:XUUID)
     ns0:RRecordingProfile(name: ns0:String50, recordingCssName: ns0:XFkType, recorderDestination: xsd:string, uuid: ns0:XUUID)
     ns0:RRegion(name: ns0:String50, relatedRegions: {relatedRegion: ns0:RRegionRelationship[]}, defaultCodec: , uuid: ns0:XUUID)
     ns0:RRegionMatrix(bandwidth: , videoBandwidth: , lossyNetwork: , regionAName: ns0:XFkType, regionBName: ns0:XFkType, codecPreference: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RRegionRelationship(regionName: ns0:XFkType, bandwidth: , videoBandwidth: , lossyNetwork: , codecPreference: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RRemoteCluster(clusterId: ns0:String255, description: xsd:string, fullyQualifiedName: ns0:String50, emcc: ns0:RRemoteClusterMember, pstnAccess: ns0:RRemoteClusterMember, rsvpAgent: ns0:RRemoteClusterMember, uuid: ns0:XUUID)
     ns0:RRemoteClusterMember(enabled: ns0:boolean, remoteIpAddress1: ns0:String15, remoteIpAddress2: ns0:String15, remoteIpAddress3: ns0:String15)
     ns0:RRemoteDestination(name: xsd:string, destination: xsd:string, answerTooSoonTimer: , answerTooLateTimer: , delayBeforeRingingCell: , ({remoteDestinationProfileName: ns0:XFkType} | {dualModeDeviceName: ns0:XFkType}), isMobilePhone: ns0:boolean, enableMobileConnect: ns0:boolean, lineAssociations: {lineAssociation: ns0:RLineAssociation[]}, timeZone: , todAccessName: ns0:XFkType, mobileSmartClientName: ns0:XFkType, mobilityProfileName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RRemoteDestinationProfile(name: xsd:string, description: xsd:string, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , lines: {({line: ns0:RPhoneLine[]} | {lineIdentifier: ns0:RNumplanIdentifier[]})}, callInfoPrivacyStatus: , userId: xsd:string, ignorePresentationIndicators: ns0:boolean, rerouteCallingSearchSpaceName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, userLocale: , primaryPhoneName: ns0:XFkType, dndOption: , dndStatus: ns0:boolean, mobileSmartClientProfileName: ns0:XFkType, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RResourcePriorityNamespace(namespace: ns0:String10, description: xsd:string, isDefault: ns0:boolean, uuid: ns0:XUUID)
     ns0:RResourcePriorityNamespaceList(name: ns0:String50, description: xsd:string, members: {member: ns0:RResourcePriorityNamespaceListMember[]}, uuid: ns0:XUUID)
     ns0:RResourcePriorityNamespaceListMember(resourcePriorityNamespaceName: ns0:XFkType, index: , uuid: ns0:XUUID)
     ns0:RRouteFilter(name: xsd:string, clause: xsd:string, dialPlanName: ns0:XFkType, dialPlanWizardGenId: , members: {member: ns0:RRouteFilterMember[]}, uuid: ns0:XUUID)
     ns0:RRouteFilterMember(dialPlanTagName: ns0:XFkType, digits: xsd:nonNegativeInteger, operator: , priority: , uuid: ns0:XUUID)
     ns0:RRouteGroup(name: xsd:Name, dialPlanWizardGenld: , distributionAlgorithm: , members: {member: ns0:RRouteGroupMember[]}, uuid: ns0:XUUID)
     ns0:RRouteGroupMember(deviceSelectionOrder: , dialPlanWizardGenId: , deviceName: ns0:XFkType, port: , uuid: ns0:XUUID)
     ns0:RRouteList(name: xsd:string, description: xsd:string, callManagerGroupName: ns0:XFkType, routeListEnabled: ns0:boolean, members: {member: ns0:RRouteListMember[]}, runOnEveryNode: ns0:boolean, uuid: ns0:XUUID)
     ns0:RRouteListMember(routeGroupName: ns0:XFkType, selectionOrder: , calledPartyTransformationMask: ns0:String50, callingPartyTransformationMask: ns0:String50, dialPlanWizardGenId: , digitDiscardInstructionName: ns0:XFkType, callingPartyPrefixDigits: ns0:String50, prefixDigitsOut: ns0:String50, useFullyQualifiedCallingPartyNumber: , callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , uuid: ns0:XUUID)
     ns0:RRoutePartition(name: xsd:string, description: xsd:string, dialPlanWizardGenId: , timeScheduleIdName: ns0:XFkType, useOriginatingDeviceTimeZone: ns0:boolean, timeZone: , partitionUsage: , uuid: ns0:XUUID)
     ns0:RRoutePattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, dialPlanWizardGenId: , digitDiscardInstructionName: ns0:XFkType, networkLocation: , patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , supportOverlapSending: ns0:boolean, patternPrecedence: , releaseClause: , allowDeviceOverride: ns0:boolean, provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , destination: {({gatewayName: ns0:XFkType} | {routeListName: ns0:XFkType})}, authorizationCodeRequired: ns0:boolean, authorizationLevelRequired: , clientCodeRequired: ns0:boolean, withTag: ns0:String50, withValueClause: ns0:String255, isdnNsfInfoElement: {cic: xsd:string, networkServiceProtocol: , networkService: , paramValue: xsd:string}, resourcePriorityNamespaceName: ns0:XFkType, routeClass: , enableDccEnforcement: ns0:boolean, blockedCallPercentage: xsd:string, uuid: ns0:XUUID)
     ns0:RRoutePlan(dnOrPattern: ns0:String255, partition: ns0:XFkType, type: , routeDetail: xsd:string, uuid: ns0:XUUID)
     ns0:RSIPNormalizationScript(name: xsd:string, description: xsd:string, content: xsd:string, scriptExecutionErrorRecoveryAction: , systemResourceErrorRecoveryAction: , maxMemoryThreshold: xsd:string, maxLuaInstructionsThreshold: xsd:string, isStandard: ns0:boolean, uuid: ns0:XUUID)
     ns0:RSNMPCommunityString(communityName: xsd:string, version: xsd:string, accessPrivilege: xsd:string, ArrayOfHosts: ns0:RArrayOfHosts)
     ns0:RSNMPCommunityString1(accessPrivilege: xsd:string, ArrayOfHosts: ns0:RArrayOfHosts)
     ns0:RSNMPGetUser(userName: xsd:string, authRequired: ns0:boolean, authPassword: xsd:string, authProtocol: xsd:string, privacyRequired: ns0:boolean, privacyPassword: xsd:string, privacyProtocol: xsd:string, accessPrivilege: xsd:string, snmpEngineID: xsd:string, ArrayOfHosts: ns0:RArrayOfHosts)
     ns0:RSNMPMIB2List(sysLocation: xsd:string, sysContact: xsd:string)
     ns0:RSNMPUser(userName: xsd:string, authRequired: ns0:boolean, authPassword: xsd:string, authProtocol: xsd:string, privacyRequired: ns0:boolean, privacyPassword: xsd:string, privacyProtocol: xsd:string, accessPrivilege: xsd:string, ArrayOfHosts: ns0:RArrayOfHosts)
     ns0:RSafCcdPurgeBlockLearnedRoutes(learnedPattern: ns0:String50, learnedPatternPrefix: ns0:String50, callControlIdentity: ns0:String50, ipAddress: ns0:String50, uuid: ns0:XUUID)
     ns0:RSafForwarder(name: ns0:String255, description: ns0:String255, clientLabel: ns0:String255, safSecurityProfile: ns0:XFkType, ipAddress: ns0:String255, port: , safReconnectInterval: , safNotificationsWindowSize: , associatedCucms: {associatedCucm: ns0:RSafForwarderMember[]}, uuid: ns0:XUUID)
     ns0:RSafForwarderMember(callManagerName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RSafSecurityProfile(name: ns0:String255, description: ns0:String255, userid: ns0:String50, password: ns0:String128, uuid: ns0:XUUID)
     ns0:RServiceParameter(processNodeName: ns0:XFkType, name: xsd:string, service: , value: xsd:string, valueType: , uuid: ns0:XUUID)
     ns0:RServiceProfile(name: xsd:string, description: xsd:string, isDefault: ns0:boolean, serviceProfileInfos: {serviceProfileInfo: ns0:RServiceProfileList[]}, uuid: ns0:XUUID)
     ns0:RServiceProfileList(profileName: xsd:string, primary: xsd:string, secondary: xsd:string, tertiary: xsd:string, serverCertificateVerification: , serviceProfileXml: ns0:XVendorConfig, uuid: ns0:XUUID)
     ns0:RSipDialRules(dialPattern: , name: ns0:String50, description: xsd:string, patterns: {pattern: ns0:RPatternMember[]}, plars: {plar: ns0:RPatternMember[]}, uuid: ns0:XUUID)
     ns0:RSipProfile(name: ns0:String50, description: ns0:String100, defaultTelephonyEventPayloadType: , redirectByApplication: ns0:boolean, ringing180: ns0:boolean, timerInvite: , timerRegisterDelta: , timerRegister: , timerT1: , timerT2: , retryInvite: , retryNotInvite: , startMediaPort: , stopMediaPort: , callpickupUri: ns0:Name128, callpickupListUri: ns0:String128, callpickupGroupUri: ns0:String128, meetmeServiceUrl: ns0:String128, userInfo: , dtmfDbLevel: , callHoldRingback: , anonymousCallBlock: , callerIdBlock: , dndControl: , telnetLevel: , timerKeepAlive: , timerSubscribe: , timerSubscribeDelta: , maxRedirects: , timerOffHookToFirstDigit: , callForwardUri: ns0:String128, abbreviatedDialUri: ns0:String128, confJointEnable: ns0:boolean, rfc2543Hold: ns0:boolean, semiAttendedTransfer: ns0:boolean, enableVad: ns0:boolean, stutterMsgWaiting: ns0:boolean, callStats: ns0:boolean, t38Invite: ns0:boolean, rerouteIncomingRequest: , resourcePriorityNamespaceListName: ns0:XFkType, enableAnatForEarlyOfferCalls: ns0:boolean, rsvpOverSip: , fallbackToLocalRsvp: ns0:boolean, sipRe11XxEnabled: , gClear: , earlyOfferSupportForVoiceCall: ns0:boolean, sendRecvSDPInMidCallInvite: ns0:boolean, enableOutboundOptionsPing: ns0:boolean, optionsPingIntervalWhenStatusOK: , optionsPingIntervalWhenStatusNotOK: , deliverConferenceBridgeIdentifier: ns0:boolean, sipOptionsRetryCount: , sipOptionsRetryTimer: , sipBandwidthModifier: , enableUriOutdialSupport: ns0:boolean, userAgentServerHeaderInfo: , allowPresentationSharingUsingBfcp: ns0:boolean, scriptParameters: xsd:string, isScriptTraceEnabled: ns0:boolean, sipNormalizationScript: ns0:XFkType, allowiXApplicationMedia: ns0:boolean, dialStringInterpretation: , acceptAudioCodecPreferences: , mlppUserAuthorization: ns0:boolean, isAssuredSipServiceEnabled: ns0:boolean, resourcePriorityNamespace: ns0:XFkType, useCallerIdCallerNameinUriOutgoingRequest: ns0:boolean, callerIdDn: ns0:String50, callerName: ns0:String50, callingLineIdentification: , rejectAnonymousIncomingCall: ns0:boolean, rejectAnonymousOutgoingCall: ns0:boolean, videoCallTrafficClass: , inactiveSDPRequired: ns0:boolean, uuid: ns0:XUUID)
     ns0:RSipRealm(realm: xsd:string, userid: xsd:string, digestCredentials: xsd:string, uuid: ns0:XUUID)
     ns0:RSipRoutePattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , sipTrunkName: ns0:XFkType, dnOrPatternIpv6: xsd:string, routeOnUserPart: ns0:boolean, useCallerCss: ns0:boolean, domainRoutingCssName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RSipTrunk(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, packetCaptureMode: , packetCaptureDuration: , loadInformation: ns0:XLoadInformation, versionStamp: ns0:String128, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, securityProfileName: ns0:XFkType, sipProfileName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, unattendedPort: ns0:boolean, transmitUtf8: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, rerouteCallingSearchSpaceName: ns0:XFkType, referCallingSearchSpaceName: ns0:XFkType, mtpRequired: ns0:boolean, presenceGroupName: ns0:XFkType, unknownPrefix: ns0:String16, destinationAddress: ns0:String50, destAddrIsSrv: ns0:boolean, destinationport: , tkSipCodec: , sigDigits: {, enable: xsd:boolean}, connectedNamePresentation: , connectedPartyIdPresentation: , callingPartySelection: , callingname: , callingLineIdPresentation: , prefixDn: ns0:String50, callerName: ns0:String50, callerIdDn: ns0:String50, acceptInboundRdnis: ns0:boolean, acceptOutboundRdnis: ns0:boolean, srtpAllowed: ns0:boolean, srtpFallbackAllowed: ns0:boolean, isPaiEnabled: ns0:boolean, sipPrivacy: , isRpidEnabled: ns0:boolean, sipAssertedType: , destinationAddressIpv6: xsd:string, dtmfSignalingMethod: , routeClassSignalling: , sipTrunkType: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useImePublicIpPort: ns0:boolean, useDevicePoolCntdPnTransformationCss: ns0:boolean, cntdPnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, sipNormalizationScriptName: ns0:XFkType, runOnEveryNode: ns0:boolean, destinations: {destination: ns0:RSipTrunkDestination[]}, unknownStripDigits: xsd:nonNegativeInteger, cgpnTransformationUnknownCssName: ns0:XFkType, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , pathReplacementSupport: ns0:boolean, enableQsigUtf8: ns0:boolean, scriptParameters: xsd:string, scriptTraceEnabled: ns0:boolean, trunkTrafficSecure: , callingAndCalledPartyInfoFormat: , useCallerIdCallerNameinUriOutgoingRequest: ns0:boolean, requestUriDomainName: xsd:string, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:RSipTrunkDestination(addressIpv4: ns0:String255, addressIpv6: ns0:String255, port: , sortOrder: , uuid: ns0:XUUID)
     ns0:RSipTrunkSecurityProfile(name: ns0:String64, description: ns0:String100, securityMode: , incomingTransport: , outgoingTransport: , digestAuthentication: ns0:boolean, noncePolicyTime: , x509SubjectName: ns0:String4096, incomingPort: , applLevelAuthentication: ns0:boolean, acceptPresenceSubscription: ns0:boolean, acceptOutOfDialogRefer: ns0:boolean, acceptUnsolicitedNotification: ns0:boolean, allowReplaceHeader: ns0:boolean, transmitSecurityStatus: ns0:boolean, sipV150OutboundSdpOfferFiltering: , uuid: ns0:XUUID)
     ns0:RSoftKeyMember(positionId: xsd:nonNegativeInteger, softKeyName: xsd:string)
     ns0:RSoftKeySet(softKeyTemplateName: ns0:XFkType, callStates: {callState: ns0:RCallStateMember[]}, uuid: ns0:XUUID)
     ns0:RSoftKeyTemplate(name: ns0:String100, description: ns0:String100, baseSoftkeyTemplateName: ns0:XFkType, isDefault: ns0:boolean, applications: {application: ns0:String50[]}, uuid: ns0:XUUID)
     ns0:RSpeeddial(dirn: ns0:String255, label: xsd:string, asciiLabel: xsd:string, index: )
     ns0:RSrst(name: xsd:string, port: , ipAddress: xsd:string, SipNetwork: xsd:string, SipPort: , srstCertificatePort: , isSecure: ns0:boolean, uuid: ns0:XUUID)
     ns0:RSubscribedService(telecasterServiceName: ns0:XFkType, name: ns0:String100, url: xsd:string, urlButtonIndex: , urlLabel: ns0:String50, urlLabelAscii: ns0:String100, serviceNameAscii: ns0:String50, phoneService: , phoneServiceCategory: , vendor: xsd:string, version: xsd:string, priority: xsd:int, uuid: ns0:XUUID)
     ns0:RSyslogConfig(AlarmLevelEvent: , RemoteServerName1: xsd:string, RemoteServerName2: xsd:string, RemoteServerName3: xsd:string, RemoteServerName4: xsd:string, RemoteServerName5: xsd:string, monitor: xsd:string, Enable: ns0:boolean)
     ns0:RSyslogConfiguration(serverName: xsd:string, serviceGroup: , service: xsd:string, alarmConfigs: {AlarmConfig: ns0:RSyslogConfig[]}, EndPointAlarm: ns0:boolean)
     ns0:RT1Port(portNumber: , attendantDn: ns0:String255, unattendedPort: ns0:boolean, callerIdDn: ns0:String255, callerIdEnable: ns0:boolean, callingPartySelection: , digitSending: , expectedDigits: , sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String255, presentationBit: , silenceSuppressionThreshold: , startDialProtocol: , trunk: , trunkDirection: , trunkLevel: , trunkPadRx: , trunkPadTx: , vendorConfig: ns0:XVendorConfig, callerId: , endpointId: ns0:String128, timer1: , timer2: , timer3: , timer4: , timer5: , timer6: , uuid: ns0:XUUID)
     ns0:RTODAccessMember(timeScheduleName: ns0:XFkType, accessListName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RTimePeriod(name: ns0:String50, startTime: , endTime: , startDay: , endDay: , monthOfYear: , dayOfMonth: , description: ns0:String255, isPublished: ns0:boolean, todOwnerIdName: ns0:XFkType, dayOfMonthEnd: , monthOfYearEnd: , uuid: ns0:XUUID)
     ns0:RTimeSchedule(name: ns0:String50, members: {member: ns0:RTimeScheduleTimePeriod[]}, description: ns0:String255, isPublished: ns0:boolean, timeScheduleCategory: , todOwnerIdName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RTimeScheduleTimePeriod(timePeriodName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RTodAccess(name: ns0:String128, description: ns0:String255, ownerIdName: ns0:XFkType, members: {member: ns0:RTODAccessMember}, associatedRemoteDestination: {remoteDestination: xsd:string[]}, uuid: ns0:XUUID)
     ns0:RTransPattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , patternPrecedence: , provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , callingSearchSpaceName: ns0:XFkType, resourcePriorityNamespaceName: ns0:XFkType, routeNextHopByCgpn: ns0:boolean, routeClass: , callInterceptProfileName: ns0:XFkType, releaseClause: , uuid: ns0:XUUID)
     ns0:RTranscoder(name: ns0:UniqueString255, description: ns0:String128, product: , subUnit: , devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, isTrustedRelayPoint: ns0:boolean, maximumCapacity: , uuid: ns0:XUUID)
     ns0:RTransformationProfile(name: ns0:String50, description: xsd:string, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, nationalCssName: ns0:XFkType, internationalCssName: ns0:XFkType, unknownCssName: ns0:XFkType, subscriberCssName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RTvsCertificate(subjectName: xsd:string, issuerName: xsd:string, serialNumber: xsd:string, timeToLive: xsd:integer, ipv4Address: xsd:string, ipv6Address: xsd:string, roles: {role: ns0:RCertificateRole[]}, services: {service: ns0:RTvsCertificateService[]}, uuid: ns0:XUUID)
     ns0:RTvsCertificateService(serviceName: , uuid: ns0:XUUID)
     ns0:RUcService(serviceType: , productType: , name: ns0:String50, description: xsd:string, hostnameorip: ns0:String255, port: , protocol: , ucServiceXml: ns0:XVendorConfig, uuid: ns0:XUUID)
     ns0:RUnitsToGateway(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), units: {unit: {index: , product: , subunits: {subunit: {index: , product: , beginPort: }[]}}[]}, uuid: ns0:XUUID)
     ns0:RUser(firstName: xsd:string, middleName: xsd:string, lastName: xsd:string, userid: xsd:string, password: xsd:string, pin: xsd:string, telephoneNumber: ns0:String255, mailid: xsd:string, department: xsd:string, manager: xsd:string, userLocale: , associatedDevices: {device: ns0:String50[]}, primaryExtension: {pattern: ns0:String255, routePartitionName: ns0:String50}, associatedPc: xsd:string, associatedGroups: {userGroup: {name: ns0:String100, userRoles: {userRole: ns0:String100[]}}[]}, enableCti: ns0:boolean, digestCredentials: xsd:string, phoneProfiles: {profileName: ns0:XFkType[]}, defaultProfile: ns0:XFkType, presenceGroupName: ns0:XFkType, subscribeCallingSearchSpaceName: ns0:XFkType, enableMobility: ns0:boolean, enableMobileVoiceAccess: ns0:boolean, maxDeskPickupWaitTime: , remoteDestinationLimit: , associatedRemoteDestinationProfiles: {remoteDestinationProfile: xsd:string[]}, passwordCredentials: {pwdCredPolicyName: ns0:XFkType, pwdCredUserCantChange: ns0:boolean, pwdCredUserMustChange: ns0:boolean, pwdCredDoesNotExpire: ns0:boolean, pwdCredTimeChanged: xsd:string, pwdCredTimeAdminLockout: xsd:string, pwdCredLockedByAdministrator: ns0:boolean}, pinCredentials: {pinCredPolicyName: ns0:XFkType, pinCredUserCantChange: ns0:boolean, pinCredUserMustChange: ns0:boolean, pinCredDoesNotExpire: ns0:boolean, pinCredTimeChanged: ns0:boolean, pinCredTimeAdminLockout: xsd:string, pinCredLockedByAdministrator: ns0:boolean}, primaryDevice: ns0:XFkType, associatedTodAccess: {todAccess: xsd:string[]}, status: , enableEmcc: ns0:boolean, associatedCapfProfiles: {capfProfileInstanceId: ns0:String128[]}, ctiControlledDeviceProfiles: {profileName: ns0:XFkType[]}, patternPrecedence: , numericUserId: xsd:string, mlppPassword: xsd:string, customUserFields: {({customUserField: ns0:RUserCustomUserField[]})}, homeCluster: ns0:boolean, imAndPresenceEnable: ns0:boolean, serviceProfile: ns0:XFkType, lineAppearanceAssociationForPresences: {lineAppearanceAssociationForPresence: ns0:RLineAppearanceAssociationForPresence[]}, directoryUri: xsd:string, uuid: ns0:XUUID)
     ns0:RUserCustomUserField(({name: xsd:string}), ({value: xsd:string}))
     ns0:RUserGroup(name: ns0:UniqueName128, members: {member: ns0:RUserGroupMember[]}, userRoles: {userRole: ns0:RUserGroupRoles[]}, uuid: ns0:XUUID)
     ns0:RUserGroupMember(userId: xsd:string, uuid: ns0:XUUID)
     ns0:RUserGroupRoles(roleName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RUserPhoneAssociation(userId: xsd:string, password: xsd:string, pin: , lastName: xsd:string, middleName: xsd:string, firstName: xsd:string, productType: , name: ns0:UniqueString128, dnCssName: ns0:XFkType, phoneCssName: ns0:XFkType, e164Mask: xsd:string, extension: xsd:string, routePartitionName: ns0:XFkType, voiceMailProfileName: ns0:XFkType, enableExtensionMobility: ns0:boolean, DirectoryURI: xsd:string, DirectoryNumberURIPartition: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RVg224(domainName: xsd:string, description: xsd:string, product: , protocol: , callManagerGroupName: ns0:XFkType, units: {unit: {index: , product: , subunits: {subunit: {index: , product: , beginPort: }}}}, vendorConfig: ns0:XVendorConfig, versionStamp: ns0:String128, uuid: ns0:XUUID)
     ns0:RVmPilot(dirn: ns0:String50, cssName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:RVoiceMailPilot(dirn: ns0:String255, description: ns0:String50, cssName: ns0:XFkType, isDefault: ns0:boolean, uuid: ns0:XUUID)
     ns0:RVoiceMailPort(name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, preemption: , useTrustedRelayPoint: , securityProfileName: ns0:XFkType, geoLocationName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, dnPattern: xsd:string, routePartition: ns0:XFkType, dnCallingSearchSpace: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, callerIdDisplay: ns0:String128, callerIdDisplayAscii: ns0:String50, externalMask: xsd:string, ctiid: xsd:nonNegativeInteger, uuid: ns0:XUUID)
     ns0:RVoiceMailProfile(name: ns0:String50, description: ns0:String50, isDefault: ns0:boolean, voiceMailboxMask: xsd:string, voiceMailPilot: ns0:RVmPilot, uuid: ns0:XUUID)
     ns0:RVpnGateway(name: ns0:String50, description: xsd:string, url: ns0:String255, certificates: {certificate: ns0:RVpnGatewayMember[]}, uuid: ns0:XUUID)
     ns0:RVpnGatewayMember(issuerName: ns0:String255, serialNumber: ns0:String50, uuid: ns0:XUUID)
     ns0:RVpnGroup(name: ns0:String50, description: xsd:string, vpnGateways: {vpnGateway: ns0:RVpnGroupMember[]}, uuid: ns0:XUUID)
     ns0:RVpnGroupMember(vpnGatewayName: ns0:XFkType, priority: , uuid: ns0:XUUID)
     ns0:RVpnProfile(name: ns0:String50, description: xsd:string, autoNetworkDetection: ns0:boolean, mtu: , failToConnect: , clientAuthentication: , pwdPersistant: ns0:boolean, enableHostIdCheck: ns0:boolean, uuid: ns0:XUUID)
     ns0:RemoveAppServerInfoReq(uuid: ns0:XUUID, sequence: xsd:unsignedLong)
     ns0:RemoveAppUserReq(({userid: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveApplicationServerReq(({uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveApplicationUserCapfProfileReq(({instanceId: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveBillingServerReq(uuid: ns0:XUUID, sequence: xsd:unsignedLong)
     ns0:RemoveCallParkReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveCallPickupGroupReq(({uuid: ns0:XUUID} | {name: xsd:Name} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveCalledPartyTracingReq(({uuid: ns0:XUUID} | {directorynumber: xsd:string}), sequence: xsd:unsignedLong)
     ns0:RemoveCalledPartyTransformationPatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveCallingPartyTransformationPatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveCcdHostedDNReq(({hostedPattern: ns0:String50} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveCmcInfoReq(({code: ns0:String16} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveCustomUserFieldReq(({field: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveDhcpServerReq(({processNodeName: ns0:XFkType} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveDhcpSubnetReq(({uuid: ns0:XUUID} | {dhcpServerName: ns0:XFkType, subnetIpAddress: xsd:string}), sequence: xsd:unsignedLong)
     ns0:RemoveDirectedCallParkReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveEndUserCapfProfileReq(({instanceId: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveEnterpriseFeatureAccessConfigurationReq(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveGatewayReq(({domainName: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveGatewaySubunitsReq(({gatewayUuid: ns0:XUUID} | {domainName: xsd:string}), unit: xsd:nonNegativeInteger, subunits: {subunit: {index: }[]}, sequence: xsd:unsignedLong)
     ns0:RemoveHandoffConfigurationReq(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveHuntPilotReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveImeEnrolledPatternReq(({pattern: ns0:String16} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveImeExclusionNumberReq(({pattern: ns0:String16} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveImeLearnedRoutesReq(({uuid: ns0:XUUID} | {e164Did: ns0:String32}))
     ns0:RemoveIpPhoneServicesReq(({serviceName: ns0:UniqueString128} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveIvrUserLocaleReq(({userLocale: } | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveLdapSyncCustomFieldReq(({uuid: ns0:XUUID} | {ldapConfigurationName: xsd:string, customUserField: xsd:string}), sequence: xsd:unsignedLong)
     ns0:RemoveLineReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveMeetMeReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveMessageWaitingReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveMlppDomainReq(({domainName: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveMobileVoiceAccessReq(({pattern: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveMohAudioSourceReq(({sourceId: } | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemovePhoneNtpReq(({ipAddress: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveRemoteClusterReq(({clusterId: ns0:String255} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveRemoteDestinationReq(({destination: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveResourcePriorityNamespaceReq(({namespace: ns0:String10} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveRoutePatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveSNMPCommunityStringReq(CommunityString: xsd:string, sequence: xsd:unsignedLong)
     ns0:RemoveSNMPCommunityStringRes(message: ns0:String32, sequence: xsd:unsignedLong)
     ns0:RemoveSNMPUserReq(User: xsd:string, sequence: xsd:unsignedLong)
     ns0:RemoveSNMPUserRes(message: ns0:String32, sequence: xsd:unsignedLong)
     ns0:RemoveSafCcdPurgeBlockLearnedRoutesReq(({uuid: ns0:XUUID} | {learnedPattern: ns0:String50, learnedPatternPrefix: ns0:String50, callControlIdentity: ns0:String50, ipAddress: ns0:String50}), sequence: xsd:unsignedLong)
     ns0:RemoveSipRealmReq(({realm: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveSipRoutePatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveTransPatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:RemoveUnitsToGatewayReq(({gatewayUuid: ns0:XUUID} | {domainName: xsd:string}), units: {unit: {index: }[]}, sequence: xsd:unsignedLong)
     ns0:RemoveUserReq(({userid: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveVg224Req(({domainName: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong)
     ns0:RemoveVoiceMailPilotReq(({uuid: ns0:XUUID} | {dirn: ns0:String255, cssName: ns0:XFkType}), sequence: xsd:unsignedLong)
     ns0:StandardResponse(return: ns0:return, sequence: xsd:unsignedLong)
     ns0:String10
     ns0:String100
     ns0:String1024
     ns0:String128
     ns0:String129
     ns0:String15
     ns0:String16
     ns0:String200
     ns0:String2048
     ns0:String255
     ns0:String32
     ns0:String4096
     ns0:String50
     ns0:String64
     ns0:UAnalogPort(portNumber: , attendantDn: ns0:String255, unattendedPort: ns0:boolean, callerIdDn: ns0:String255, callerIdEnable: ns0:boolean, callingPartySelection: , digitSending: , expectedDigits: , sigDigits: {, enable: xsd:boolean}, lines: {({line: ns0:UPhoneLine} | {lineIdentifier: ns0:UNumplanIdentifier})}, prefixDn: ns0:String255, presentationBit: , silenceSuppressionThreshold: , smdiPortNumber: , startDialProtocol: , trunk: , trunkDirection: , trunkLevel: , trunkPadRx: , trunkPadTx: , vendorConfig: ns0:XVendorConfig, timer1: , timer2: , timer3: , timer4: , timer5: , timer6: , uuid: ns0:XUUID)
     ns0:UDirn(pattern: xsd:string, routePartitionName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:UEnduserMember(userId: xsd:string)
     ns0:UGatewayEndpointAnalog(index: , description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, port: ns0:UAnalogPort, trunkSelectionOrder: , transmitUtf8: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, callingPartyNumberPrefix: ns0:String16, callingPartyStripDigits: , callingPartyUnknownTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnknown: ns0:boolean, hotlineDevice: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, imeE164DirectoryNumber: ns0:String16, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:UGatewayEndpointDigitalBri(index: , description: ns0:String128, protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkLocale: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, briProtocol: , calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , clockReference: , csuParam: , dChannelEnable: ns0:boolean, channelSelectionOrder: , pcmType: , firstDelay: , intraDelay: , redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , prefix: xsd:string, presentationBit: , sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {xsd:nonNegativeInteger, enable: xsd:boolean}, statusPoll: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, geoLocationFilterName: ns0:XFkType, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, GClearEnable: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:UGatewayEndpointDigitalPri(index: , description: ns0:String128, protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, mlppIndicationStatus: , mlppPreemption: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIE: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIe: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {xsd:nonNegativeInteger, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , GClearEnable: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , qsigVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, routeClassSignalling: , nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:UGatewayEndpointDigitalT1(index: , description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, v150: ns0:boolean, geoLocationFilterName: ns0:XFkType, ports: {port: ns0:UT1Port[]}, trunkSelectionOrder: , clockReference: , csuParam: , digitSending: , pcmType: , fdlChannel: , yellowAlarm: , zeroSupression: , smdiBasePort: , handleDtmfPrecedenceSignals: ns0:boolean, encodeOutboundVoiceRouteClass: ns0:boolean, routeClassSignalling: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, ctiid: xsd:positiveInteger, uuid: ns0:XUUID)
     ns0:UNumplanIdentifier(directoryNumber: ns0:String255, routePartitionName: ns0:String50)
     ns0:UPhoneLine(index: , label: ns0:String50, asciiLabel: ns0:String50, display: ns0:String50, dirn: ns0:UDirn, ringSetting: , consecutiveRingSetting: , ringSettingIdlePickupAlert: , ringSettingActivePickupAlert: , displayAscii: ns0:String50, e164Mask: ns0:String255, dialPlanWizardId: , mwlPolicy: , maxNumCalls: , busyTrigger: , callInfoDisplay: {callerName: ns0:boolean, callerNumber: ns0:boolean, redirectedNumber: ns0:boolean, dialedNumber: ns0:boolean}, recordingProfileName: ns0:XFkType, monitoringCssName: ns0:XFkType, recordingFlag: , audibleMwi: , speedDial: xsd:string, associatedEndusers: {enduser: ns0:UEnduserMember[]}, missedCallLogging: ns0:boolean, uuid: ns0:XUUID, ctiid: xsd:nonNegativeInteger)
     ns0:UT1Port(portNumber: , attendantDn: ns0:String255, unattendedPort: ns0:boolean, callerIdDn: ns0:String255, callerIdEnable: ns0:boolean, callingPartySelection: , digitSending: , expectedDigits: , sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String255, presentationBit: , silenceSuppressionThreshold: , startDialProtocol: , trunk: , trunkDirection: , trunkLevel: , trunkPadRx: , trunkPadTx: , vendorConfig: ns0:XVendorConfig, callerId: , endpointId: ns0:String128, timer1: , timer2: , timer3: , timer4: , timer5: , timer6: , uuid: ns0:XUUID)
     ns0:UniqueName128
     ns0:UniqueName50
     ns0:UniqueString128
     ns0:UniqueString255
     ns0:UniqueString50
     ns0:UpdateAarGroupMatrixReq(({uuid: ns0:XUUID} | {aarGroupFromName: ns0:XFkType, aarGroupToName: ns0:XFkType}), prefixDigit: ns0:String255, sequence: xsd:unsignedLong)
     ns0:UpdateAarGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String32, sequence: xsd:unsignedLong)
     ns0:UpdateAnnouncementReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, announcementFile: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateAnnunciatorReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, locationName: ns0:XFkType, useTrustedRelayPoint: , sequence: xsd:unsignedLong)
     ns0:UpdateAppServerInfoReq(({uuid: ns0:XUUID}), appServerName: ns0:XFkType, appServerContent: , content: ns0:XContent, sequence: xsd:unsignedLong)
     ns0:UpdateAppUserReq(({uuid: ns0:XUUID} | {userid: xsd:string}), newUserid: xsd:string, password: xsd:string, passwordCredentials: {pwdCredPolicyName: ns0:XFkType, pwdCredUserCantChange: ns0:boolean, pwdCredUserMustChange: ns0:boolean, pwdCredDoesNotExpire: ns0:boolean, pwdCredTimeChanged: xsd:string, pwdCredTimeAdminLockout: xsd:string, pwdCredLockedByAdministrator: ns0:boolean}, digestCredentials: xsd:string, presenceGroupName: ns0:XFkType, acceptPresenceSubscription: ns0:boolean, acceptOutOfDialogRefer: ns0:boolean, acceptUnsolicitedNotification: ns0:boolean, allowReplaceHeader: ns0:boolean, associatedDevices: {device: ns0:String50[]}, associatedGroups: {userGroup: {name: ns0:String100, userRoles: {userRole: ns0:String100[]}}[]}, ctiControlledDeviceProfiles: {deviceProfile: ns0:String50[]}, sequence: xsd:unsignedLong)
     ns0:UpdateApplicationDialRulesReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, numberBeginWith: xsd:string, numberOfDigits: , digitsToBeRemoved: , prefixPattern: xsd:string, priority: , sequence: xsd:unsignedLong)
     ns0:UpdateApplicationServerReq(({uuid: ns0:XUUID}), newName: xsd:string, ipAddress: xsd:string, ({removeAppUsers: {selectedAppUser: {appUserName: ns0:XFkType, content: ns0:XContent}[]}, addAppUsers: {selectedAppUser: {appUserName: ns0:XFkType, content: ns0:XContent}[]}} | {appUsers: {selectedAppUser: {appUserName: ns0:XFkType, content: ns0:XContent}[]}}), url: xsd:string, endUserUrl: xsd:string, processNodeName: ns0:XFkType, ({removeEndUsers: {selectedEndUser: {endUserName: ns0:XFkType, content: ns0:XContent}[]}, addEndUsers: {selectedEndUser: {endUserName: ns0:XFkType, content: ns0:XContent}[]}} | {endUsers: {selectedEndUser: {endUserName: ns0:XFkType, content: ns0:XContent}[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateApplicationUserCapfProfileReq(({uuid: ns0:XUUID} | {instanceId: xsd:string}), certificateOperation: , authenticationMode: , authenticationString: xsd:string, keySize: , operationCompletion: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateAudioCodecPreferenceListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, codecsInList: {codecNames: xsd:string[]}, sequence: xsd:unsignedLong)
     ns0:UpdateBillingServerReq(uuid: ns0:XUUID, userId: xsd:string, password: xsd:string, resendOnFailure: ns0:boolean, billingServerProtocol: , sequence: xsd:unsignedLong)
     ns0:UpdateCallManagerGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, tftpDefault: ns0:boolean, ({removeMembers: {member: ns0:XCallManagerMember[]}, addMembers: {member: ns0:XCallManagerMember[]}} | {members: {member: ns0:XCallManagerMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateCallManagerReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String50, autoRegistration: {startDn: ns0:String255, endDn: ns0:String255, nextDn: ns0:String255, routePartitionName: ns0:XFkType, e164Mask: ns0:String50}, ports: {({ethernetPhonePort: }), mgcpPorts: {listen: , keepAlive: }, sipPorts: {sipPhonePort: , sipPhoneSecurePort: }}, lbmGroup: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateCallParkReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, callManagerName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateCallPickupGroupReq(({uuid: ns0:XUUID} | {name: xsd:Name} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, newName: xsd:Name, ({removeMembers: {member: ns0:XPickupGroupMember[]}, addMembers: {member: ns0:XPickupGroupMember[]}} | {members: {member: ns0:XPickupGroupMember[]}}), pickupNotification: , pickupNotificationTimer: , callInfoForPickupNotification: {callingPartyInfo: ns0:boolean, calledPartyInfo: ns0:boolean}, sequence: xsd:unsignedLong)
     ns0:UpdateCalledPartyTransformationPatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, calledPartyTransformationMask: xsd:string, newDialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, newRouteFilterName: ns0:XFkType, calledPartyPrefixDigits: xsd:string, calledPartyNumberingPlan: , calledPartyNumberType: , sequence: xsd:unsignedLong)
     ns0:UpdateCallerFilterListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String128, ({removeMembers: {member: ns0:XCallerFilterListMember[]}, addMembers: {member: ns0:XCallerFilterListMember[]}} | {members: {member: ns0:XCallerFilterListMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateCallingPartyTransformationPatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , newDialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, callingPartyPrefixDigits: ns0:String50, newRouteFilterName: ns0:XFkType, callingLinePresentationBit: , callingPartyNumberingPlan: , callingPartyNumberType: , sequence: xsd:unsignedLong)
     ns0:UpdateCcdAdvertisingServiceReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String50, isActivated: ns0:boolean, hostDnGroup: ns0:XFkType, safSipTrunk: ns0:XFkType, safH323Trunk: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateCcdHostedDNGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String255, description: ns0:String255, pstnFailoverStripDigits: , pstnFailoverPrependDigits: ns0:String255, usePstnFailover: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateCcdHostedDNReq(({uuid: ns0:XUUID} | {hostedPattern: ns0:String50}), newHostedPattern: ns0:String50, description: ns0:String255, CcdHostedDnGroup: ns0:XFkType, pstnFailoverStripDigits: , pstnFailoverPrependDigits: ns0:String255, usePstnFailover: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateCcdRequestingServiceReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String50, isActivated: ns0:boolean, routePartitionName: ns0:XFkType, learnedPatternPrefix: ns0:String50, pstnPrefix: ns0:String50, ({removeAssociatedTrunks: {associatedTrunk: ns0:XCcdRequestingServiceMember[]}, addAssociatedTrunks: {associatedTrunk: ns0:XCcdRequestingServiceMember[]}} | {associatedTrunks: {associatedTrunk: ns0:XCcdRequestingServiceMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateCiscoCatalyst600024PortFXSGatewayReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, ports: {port: ns0:XAnalogPort[]}, portSelectionOrder: , transmitUtf8: ns0:boolean, geoLocationFilterName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateCiscoCatalyst6000E1VoIPGatewayReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIe: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIE: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , QSIGVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateCiscoCatalyst6000T1VoIPGatewayPriReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, mlppIndicationStatus: , mlppPreemption: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIe: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIE: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , QSIGVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateCiscoCatalyst6000T1VoIPGatewayT1Req(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, sendGeoLocation: ns0:boolean, ports: {port: ns0:XT1Port[]}, trunkSelectionOrder: , clockReference: , csuParam: , digitSending: , pcmType: , fdlChannel: , yellowAlarm: , zeroSupression: , smdiBasePort: , handleDtmfPrecedenceSignals: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, geoLocationFilterName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateCmcInfoReq(({uuid: ns0:XUUID} | {code: ns0:String16}), newCode: ns0:String16, description: ns0:String50, sequence: xsd:unsignedLong)
     ns0:UpdateCommonDeviceConfigReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString50, softkeyTemplateName: ns0:XFkType, userLocale: , networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , mlppDomainId: ns0:String128, mlppIndicationStatus: , useTrustedRelayPoint: ns0:boolean, preemption: , ipAddressingMode: , ipAddressingModePreferenceControl: , allowAutoConfigurationForPhones: , useImeForOutboundCalls: , sequence: xsd:unsignedLong)
     ns0:UpdateCommonPhoneConfigReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString50, description: ns0:String128, unlockPwd: ns0:String50, dndOption: , dndAlertingType: , backgroundImage: ns0:boolean, phonePersonalization: , phoneServiceDisplay: , sshUserId: ns0:String50, sshPwd: ns0:String255, vendorConfig: ns0:XVendorConfig, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , vpnGroupName: ns0:XFkType, vpnProfileName: ns0:XFkType, featureControlPolicy: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateConferenceBridgeReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueName128, description: ns0:String128, product: , devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, maximumCapacity: , useTrustedRelayPoint: , securityProfileName: ns0:XFkType, destinationAddress: xsd:string, mcuConferenceBridgeSipPort: , sipProfile: ns0:XFkType, srtpAllowed: ns0:boolean, normalizationScript: ns0:XFkType, enableTrace: ns0:boolean, normalizationScriptInfos: {normalizationScriptInfo: ns0:XNormalizationScriptInfo[]}, userName: xsd:string, password: xsd:string, httpPort: , useHttps: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateCredentialPolicyReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String255, failedLogon: , resetFailedLogonAttempts: , lockoutDuration: , credChangeDuration: , credExpiresAfter: , minCredLength: , prevCredStoredNum: , inactiveDaysAllowed: , expiryWarningDays: , trivialCredCheck: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateCssReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueName50, description: ns0:String50, ({removeMembers: {member: ns0:XCallingSearchSpaceMember[]}, addMembers: {member: ns0:XCallingSearchSpaceMember[]}} | {members: {member: ns0:XCallingSearchSpaceMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateCtiRoutePointReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, userLocale: , lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, sequence: xsd:unsignedLong)
     ns0:UpdateCumaServerSecurityProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, securityMode: , transportType: , x509SubjectName: xsd:string, serverIpHostName: ns0:String255, sequence: xsd:unsignedLong)
     ns0:UpdateCustomUserFieldReq(({uuid: ns0:XUUID} | {field: xsd:string}), newField: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateDateTimeGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, timeZone: , separator: xsd:string, dateformat: xsd:string, timeFormat: xsd:string, ({removePhoneNtpReferences: {selectedPhoneNtpReference: ns0:XDateTimeGroupNtpReference[]}, addPhoneNtpReferences: {selectedPhoneNtpReference: ns0:XDateTimeGroupNtpReference[]}} | {phoneNtpReferences: {selectedPhoneNtpReference: ns0:XDateTimeGroupNtpReference[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateDefaultDeviceProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), description: ns0:String255, userHoldMohAudioSourceId: , userLocale: , phoneButtonTemplate: ns0:XFkType, softkeyTemplate: ns0:XFkType, privacy: , singleButtonBarge: , joinAcrossLines: , ignorePi: ns0:boolean, dndStatus: ns0:boolean, dndRingSetting: , dndOption: , mlppDomainId: ns0:String128, mlppIndication: , preemption: , alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , emccCallingSearchSpace: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateDeviceMobilityGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateDeviceMobilityReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, subNet: xsd:string, subNetMaskSz: , ({removeMembers: {member: ns0:XDevicePoolDeviceMobility[]}, addMembers: {member: ns0:XDevicePoolDeviceMobility[]}} | {members: {member: ns0:XDevicePoolDeviceMobility[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateDevicePoolReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString50, autoSearchSpaceName: ns0:XFkType, dateTimeSettingName: ns0:XFkType, callManagerGroupName: ns0:XFkType, mediaResourceListName: ns0:XFkType, regionName: ns0:XFkType, networkLocale: , srstName: ns0:XFkType, connectionMonitorDuration: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, locationName: ns0:XFkType, mobilityCssName: ns0:XFkType, physicalLocationName: ns0:XFkType, deviceMobilityGroupName: ns0:XFkType, revertPriority: , singleButtonBarge: , joinAcrossLines: , cgpnTransformationCssName: ns0:XFkType, cdpnTransformationCssName: ns0:XFkType, localRouteGroupName: ns0:XFkType, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, callingPartyNationalPrefix: ns0:String16, callingPartyInternationalPrefix: ns0:String16, callingPartyUnknownPrefix: ns0:String16, callingPartySubscriberPrefix: ns0:String16, adjunctCallingSearchSpace: ns0:XFkType, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, imeEnrolledPatternGroupName: ns0:XFkType, cntdPnTransformationCssName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateDeviceProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, userHoldMohAudioSourceId: , vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, phoneTemplateName: ns0:XFkType, speeddials: {speeddial: ns0:XSpeeddial[]}, busyLampFields: {busyLampField: ns0:XBusyLampField[]}, blfDirectedCallParks: {blfDirectedCallPark: ns0:XBLFDirectedCallPark[]}, addOnModules: {addOnModule: ns0:XAddOnModule[]}, userLocale: , singleButtonBarge: , joinAcrossLines: , loginUserId: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, dndOption: , dndRingSetting: , dndStatus: ns0:boolean, emccCallingSearchSpace: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , softkeyTemplateName: ns0:XFkType, callInfoPrivacyStatus: , services: {service: ns0:XSubscribedService[]}, featureControlPolicy: ns0:XFkType, userlocale: , sequence: xsd:unsignedLong)
     ns0:UpdateDhcpServerReq(({uuid: ns0:XUUID} | {processNodeName: ns0:XFkType}), newProcessNodeName: ns0:XFkType, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, primaryTftpServerIpAddress: xsd:string, secondaryTftpServerIpAddress: xsd:string, bootstrapServerIpAddress: xsd:string, domainName: xsd:string, tftpServerName: xsd:string, arpCacheTimeout: , ipAddressLeaseTime: , renewalTime: , rebindingTime: , sequence: xsd:unsignedLong)
     ns0:UpdateDhcpSubnetReq(({uuid: ns0:XUUID} | {dhcpServerName: ns0:XFkType, subnetIpAddress: xsd:string}), newDhcpServerName: ns0:XFkType, newSubnetIpAddress: xsd:string, primaryStartIpAddress: xsd:string, primaryEndIpAddress: xsd:string, secondaryStartIpAddress: xsd:string, secondaryEndIpAddress: xsd:string, primaryRouterIpAddress: xsd:string, secondaryRouterIpAddress: xsd:string, subnetMask: xsd:string, domainName: xsd:string, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, tftpServerName: xsd:string, primaryTftpServerIpAddress: xsd:string, secondaryTftpServerIpAddress: xsd:string, bootstrapServerIpAddress: xsd:string, arpCacheTimeout: , ipAddressLeaseTime: , renewalTime: , rebindingTime: , sequence: xsd:unsignedLong)
     ns0:UpdateDirectedCallParkReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, retrievalPrefix: xsd:string, reversionPattern: xsd:string, revertCssName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateDirectoryLookupDialRulesReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, numberBeginWith: xsd:string, numberOfDigits: , digitsToBeRemoved: , prefixPattern: xsd:string, priority: , sequence: xsd:unsignedLong)
     ns0:UpdateEmccFeatureConfigReq(({uuid: ns0:XUUID} | {parameterName: ns0:String50}), value: ns0:String255, sequence: xsd:unsignedLong)
     ns0:UpdateEndUserCapfProfileReq(({uuid: ns0:XUUID} | {instanceId: xsd:string}), certificationOperation: , authenticationMode: , authenticationString: xsd:string, keySize: , operationCompletion: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateEnterpriseFeatureAccessConfigurationReq(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), newPattern: ns0:String16, newRoutePartitionName: ns0:XFkType, description: xsd:string, isDefaultEafNumber: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateEnterprisePhoneConfigReq(vendorConfig: ns0:XVendorConfig)
     ns0:UpdateExternalCallControlProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, primaryUri: ns0:String255, secondaryUri: ns0:String255, enableLoadBalancing: ns0:boolean, routingRequestTimer: , diversionReroutingCssName: ns0:XFkType, callTreatmentOnFailure: , sequence: xsd:unsignedLong)
     ns0:UpdateFacInfoReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, code: ns0:String16, authorizationLevel: , sequence: xsd:unsignedLong)
     ns0:UpdateFallbackFeatureConfigReq(enableFallbackForImeCalls: ns0:boolean, qosSensistivityLevel: , dtmfCorrelationDigits: , dtmfCollectionTimer: , callAnswerTimer: , clearImeCallDelayTimer: , dtmfInterDigitDelayTimer: , postConnectFallbackDelayTimer: , fallbackSplitDelayTimer: , callCss: )
     ns0:UpdateFallbackProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, advertisedFallbackDirectoryE164Number: xsd:string, qosSensistivityLevel: , callCss: , callAnswerTimer: , directoryNumberPartition: ns0:XFkType, directoryNumber: ns0:String16, numberOfDigitsForCallerIDPartialMatch: , sequence: xsd:unsignedLong)
     ns0:UpdateFeatureControlPolicyReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String100, features: {feature: ns0:XFeatureControlConfig[]}, sequence: xsd:unsignedLong)
     ns0:UpdateFixedMohAudioSourceReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, multicast: ns0:boolean, enable: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateGatekeeperReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, rrqTimeToLive: , retryTimeout: , enableDevice: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateGatewayEndpointAnalogAccessReq(({name: ns0:String100} | {uuid: ns0:XUUID}), endpoint: ns0:UGatewayEndpointAnalog, sequence: xsd:unsignedLong)
     ns0:UpdateGatewayEndpointDigitalAccessBriReq(({name: ns0:String100} | {uuid: ns0:XUUID}), endpoint: ns0:UGatewayEndpointDigitalBri, sequence: xsd:unsignedLong)
     ns0:UpdateGatewayEndpointDigitalAccessPriReq(({name: ns0:String100} | {uuid: ns0:XUUID}), endpoint: ns0:UGatewayEndpointDigitalPri, sequence: xsd:unsignedLong)
     ns0:UpdateGatewayEndpointDigitalAccessT1Req(({name: ns0:String100} | {uuid: ns0:XUUID}), endpoint: ns0:UGatewayEndpointDigitalT1, sequence: xsd:unsignedLong)
     ns0:UpdateGatewayReq(({uuid: ns0:XUUID} | {domainName: xsd:string}), newDomainName: xsd:string, description: xsd:string, product: , protocol: , callManagerGroupName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, sequence: xsd:unsignedLong)
     ns0:UpdateGatewaySccpEndpointsReq(({name: ns0:String100} | {uuid: ns0:XUUID}), endpoint: ns0:XGatewaySccp, sequence: xsd:unsignedLong)
     ns0:UpdateGeoLocationFilterReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String255, useCountry: ns0:boolean, useNationalSubDivision: ns0:boolean, useDistrict: ns0:boolean, useCommunityName: ns0:boolean, useCityDivision: ns0:boolean, useNeighbourhood: ns0:boolean, useStreet: ns0:boolean, useLeadingStreetDirection: ns0:boolean, useTrailingStreetSuffix: ns0:boolean, useStreetSuffix: ns0:boolean, useHouseNumber: ns0:boolean, useHouseNumberSuffix: ns0:boolean, useLandmark: ns0:boolean, useLocation: ns0:boolean, useFloor: ns0:boolean, useOccupantName: ns0:boolean, usePostalCode: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateGeoLocationPolicyReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, country: xsd:string, description: ns0:String255, nationalSubDivision: ns0:String100, district: ns0:String255, communityName: ns0:String255, cityDivision: ns0:String255, neighbourhood: ns0:String255, street: ns0:String255, leadingStreetDirection: ns0:String50, trailingStreetSuffix: ns0:String50, streetSuffix: ns0:String255, houseNumber: ns0:String16, houseNumberSuffix: ns0:String100, landmark: ns0:String255, location: ns0:String255, floor: ns0:String16, occupantName: ns0:String255, postalCode: ns0:String100, ({removeRelatedPolicies: {relatedPolicy: ns0:XPolicyRelationship[]}, addRelatedPolicies: {relatedPolicy: ns0:XPolicyRelationship[]}} | {relatedPolicies: {relatedPolicy: ns0:XPolicyRelationship[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateGeoLocationReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, country: xsd:string, description: ns0:String255, nationalSubDivision: ns0:String100, district: ns0:String255, communityName: ns0:String255, cityDivision: ns0:String255, neighbourhood: ns0:String255, street: ns0:String255, leadingStreetDirection: ns0:String50, trailingStreetSuffix: ns0:String50, streetSuffix: ns0:String255, houseNumber: ns0:String16, houseNumberSuffix: ns0:String100, landmark: ns0:String255, location: ns0:String255, floor: ns0:String16, occupantName: ns0:String255, postalCode: ns0:String100, sequence: xsd:unsignedLong)
     ns0:UpdateH323GatewayReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , vendorConfig: ns0:XVendorConfig, pathReplacementSupport: ns0:boolean, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , srtpAllowed: ns0:boolean, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , enableInboundFaststart: ns0:boolean, enableOutboundFaststart: ns0:boolean, codecForOutboundFaststart: , transmitUtf8: ns0:boolean, signalingPort: , allowH235PassThrough: ns0:boolean, sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String50, calledPartyIeNumberType: , callingPartyIeNumberType: , calledNumberingPlan: , callingNumberingPlan: , callingPartyNationalPrefix: ns0:String16, callingPartyInternationalPrefix: ns0:String16, callingPartyUnknownPrefix: ns0:String16, callingPartySubscriberPrefix: ns0:String16, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, displayIeDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, useDevicePoolCalledCssNatl: ns0:boolean, useDevicePoolCalledCssIntl: ns0:boolean, useDevicePoolCalledCssUnkn: ns0:boolean, useDevicePoolCalledCssSubs: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateH323PhoneReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, remoteDevice: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , srtpAllowed: ns0:boolean, unattendedPort: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, mtpPreferredCodec: , callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , displayIEDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, presenceGroupName: ns0:XFkType, hlogStatus: ns0:boolean, ownerUserName: ns0:XFkType, signalingPort: , gateKeeperInfo: {gateKeeperName: ns0:XFkType, e164: ns0:String50, technologyPrefix: ns0:String50, zone: ns0:String50}, lines: {({line: ns0:XH323Line[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, ignorePresentationIndicators: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateH323TrunkReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , srtpAllowed: ns0:boolean, unattendedPort: ns0:boolean, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , displayIEDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, enableInboundFaststart: ns0:boolean, enableOutboundFaststart: ns0:boolean, codecForOutboundFaststart: , allowH235PassThrough: ns0:boolean, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , transmitUtf8: ns0:boolean, signalingPort: , nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String50, calledPartyIeNumberType: , callingPartyIeNumberType: , calledNumberingPlan: , callingNumberingPlan: , pathReplacementSupport: ns0:boolean, ({gateKeeperInfo: {gateKeeper: ns0:XFkType, terminalType: , technologyPrefix: ns0:String50, zone: ns0:String50}} | {remoteServerinfo: {server1: ns0:String255, server2: ns0:String255, server3: ns0:String255}}), ictPassingPrecedenceLevelThroughUuie: ns0:boolean, ictSecurityAccessLevel: , isSafEnabled: ns0:boolean, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, useDevicePoolCalledCssNatl: ns0:boolean, useDevicePoolCalledCssIntl: ns0:boolean, useDevicePoolCalledCssUnkn: ns0:boolean, useDevicePoolCalledCssSubs: ns0:boolean, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, runOnEveryNode: ns0:boolean, ({removeDestinations: {destination: ns0:XH323TrunkDestination[]}, addDestinations: {destination: ns0:XH323TrunkDestination[]}} | {destinations: {destination: ns0:XH323TrunkDestination[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateHandoffConfigurationReq(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), newPattern: ns0:String16, newRoutePartitionName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateHuntListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:Name, description: xsd:string, callManagerGroupName: ns0:XFkType, routeListEnabled: ns0:boolean, voiceMailUsage: ns0:boolean, ({removeMembers: {member: ns0:XHuntListMember[]}, addMembers: {member: ns0:XHuntListMember[]}} | {members: {member: ns0:XHuntListMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateHuntPilotReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , patternPrecedence: , provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , huntListName: ns0:XFkType, parkMonForwardNoRetrieve: {usePersonalPreferences: ns0:boolean, destination: ns0:String50, callingSearchSpaceName: ns0:XFkType}, alertingName: ns0:String50, asciiAlertingName: ns0:String32, e164Mask: xsd:string, aarNeighborhoodName: ns0:XFkType, forwardHuntNoAnswer: {usePersonalPreferences: ns0:boolean, destination: xsd:string, callingSearchSpaceName: ns0:XFkType}, forwardHuntBusy: {usePersonalPreferences: ns0:boolean, destination: xsd:string, callingSearchSpaceName: ns0:XFkType}, callPickupGroupName: ns0:XFkType, maxHuntduration: , releaseClause: , displayConnectedNumber: ns0:boolean, queueCalls: ns0:XCallsQueue, sequence: xsd:unsignedLong)
     ns0:UpdateIlsConfigReq(role: xsd:string, registrationServer: xsd:string, activateIls: ns0:boolean, synchronizeClustersEvery: ns0:String50, activatedServers: xsd:string, deactivatedServers: xsd:string, useTls: ns0:boolean, usePassword: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateImeClientReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, domain: ns0:String255, isActivated: ns0:boolean, sipTrunkName: ns0:XFkType, primaryImeServerName: ns0:XFkType, secondaryImeServerName: ns0:XFkType, learnedRouteFilterGroupName: ns0:XFkType, exclusionNumberGroupName: ns0:XFkType, firewallName: ns0:XFkType, ({removeMembers: {member: ns0:XImeClientMember[]}, addMembers: {member: ns0:XImeClientMember[]}} | {members: {member: ns0:XImeClientMember[]}}), ({removeCcmExternalIpMaps: {ccmExternalIpMap: ns0:XCcmExternalIpMap[]}, addCcmExternalIpMaps: {ccmExternalIpMap: ns0:XCcmExternalIpMap[]}} | {ccmExternalIpMaps: {ccmExternalIpMap: ns0:XCcmExternalIpMap[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateImeE164TransformationReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, cgpnTransformationCssName: ns0:XFkType, isCgpnPreTransformation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, isCdpnPreTransformation: ns0:boolean, incomingCgpnTransformationProfileName: ns0:XFkType, incomingCdpnTransformationProfileName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateImeEnrolledPatternGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, fallbackProfileName: ns0:XFkType, isPatternAllAlias: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateImeEnrolledPatternReq(({uuid: ns0:XUUID} | {pattern: ns0:String16}), newPattern: ns0:String16, description: xsd:string, imeEnrolledPatternGroupName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateImeExclusionNumberGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateImeExclusionNumberReq(({uuid: ns0:XUUID} | {pattern: ns0:String16}), newPattern: ns0:String16, description: xsd:string, imeExclusionNumberGroupName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateImeFeatureConfigReq(preventImeCallsFromAnalogGateways: ns0:boolean, enableIntraDomain: ns0:boolean, allowMwiNotification: ns0:boolean, trunkConnectionTimer: , firewallConnectionTimer: , firewallTranscationTimer: , firewallIdleTimer: , failedCallAttemptThreshold: , callFallbackAttemptThreshold: , qualityTimer: , useImeForOutboundCalls: ns0:boolean)
     ns0:UpdateImeFirewallReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, ipAddress: ns0:String15, port: , sequence: xsd:unsignedLong)
     ns0:UpdateImeLearnedRoutesReq(({uuid: ns0:XUUID} | {e164Did: ns0:String32}), adminEnabled: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateImeRouteFilterElementReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, elementType: , imeRouteFilterGroupName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateImeRouteFilterGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, groupTrustSetting: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateImeServerReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, ipAddress: xsd:string, port: , deviceSecurityMode: , applicationUser: ns0:XFkType, reconnectInterval: , sequence: xsd:unsignedLong)
     ns0:UpdateImportedDirectoryUriCatalogsReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, routeString: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateInterClusterDirectoryUriReq(exchangeDirectoryUri: ns0:boolean, routeString: ns0:String50, sequence: xsd:unsignedLong)
     ns0:UpdateInterClusterServiceProfileReq(({uuid: ns0:XUUID} | {interClusterService: }), isActivated: ns0:boolean, sipTrunkName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateIpPhoneServicesReq(({uuid: ns0:XUUID} | {serviceName: ns0:UniqueString128}), newServiceName: ns0:UniqueString128, asciiServiceName: ns0:UniqueString128, serviceDescription: ns0:String128, serviceUrl: xsd:string, secureServiceUrl: xsd:string, serviceCategory: , serviceType: , serviceVendor: xsd:string, serviceVersion: xsd:string, enabled: ns0:boolean, ({removeParameters: {parameter: ns0:XIpPhoneServicesParameter[]}, addParameters: {parameter: ns0:XIpPhoneServicesParameter[]}} | {parameters: {parameter: ns0:XIpPhoneServicesParameter[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateIvrUserLocaleReq(({uuid: ns0:XUUID} | {userLocale: }), newUserLocale: , orderIndex: , sequence: xsd:unsignedLong)
     ns0:UpdateLbmGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, Description: xsd:string, ProcessnodeActive: ns0:XFkType, ProcessnodeStandby: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateLbmHubGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, member1: xsd:string, member2: xsd:string, member3: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateLdapAuthenticationReq(authenticateEndUsers: ns0:boolean, distinguishedName: ns0:String128, ldapPassword: ns0:String128, userSearchBase: ns0:String255, servers: {server: {hostName: ns0:String128, ldapPortNumber: , sslEnabled: ns0:boolean}[]})
     ns0:UpdateLdapDirectoryReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, ldapDn: ns0:String128, ldapPassword: ns0:String128, userSearchBase: ns0:String255, repeatable: ns0:boolean, intervalValue: , scheduleUnit: , nextExecTime: ns0:String32, servers: {server: {hostName: ns0:String128, ldapPortNumber: , sslEnabled: ns0:boolean}[]}, ldapFilter: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateLdapFilterReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String4096, filter: ns0:String255, sequence: xsd:unsignedLong)
     ns0:UpdateLdapSyncCustomFieldReq(({uuid: ns0:XUUID} | {ldapConfigurationName: xsd:string, customUserField: xsd:string}), ldapUserField: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateLdapSystemReq(syncEnabled: ns0:boolean, ldapServer: , userIdAttribute: ns0:String64)
     ns0:UpdateLicenseCapabilitiesReq(({uuid: ns0:XUUID} | {userid: xsd:string}), enableUps: ns0:boolean, enableUpc: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateLineGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:Name, distributionAlgorithm: , rnaReversionTimeOut: , huntAlgorithmNoAnswer: , huntAlgorithmBusy: , huntAlgorithmNotAvailable: , ({removeMembers: {member: ns0:XLineGroupMember[]}, addMembers: {member: ns0:XLineGroupMember[]}} | {members: {member: ns0:XLineGroupMember[]}}), autoLogOffHunt: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateLineReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, aarDestinationMask: ns0:String128, aarKeepCallHistory: ns0:boolean, aarVoiceMailEnabled: ns0:boolean, callForwardAll: ns0:XCallForwardAll, callForwardBusy: ns0:XCallForwardBusy, callForwardBusyInt: ns0:XCallForwardBusyInt, callForwardNoAnswer: ns0:XCallForwardNoAnswer, callForwardNoAnswerInt: ns0:XCallForwardNoAnswerInt, callForwardNoCoverage: ns0:XCallForwardNoCoverage, callForwardNoCoverageInt: ns0:XCallForwardNoCoverageInt, callForwardOnFailure: ns0:XCallForwardOnFailure, callForwardAlternateParty: ns0:XCallForwardAlternateParty, callForwardNotRegistered: ns0:XCallForwardNotRegistered, callForwardNotRegisteredInt: ns0:XCallForwardNotRegisteredInt, callPickupGroupName: ns0:XFkType, autoAnswer: , networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , alertingName: ns0:String50, asciiAlertingName: ns0:String32, presenceGroupName: ns0:XFkType, shareLineAppearanceCssName: ns0:XFkType, voiceMailProfileName: ns0:XFkType, patternPrecedence: , releaseClause: , hrDuration: , hrInterval: , cfaCssPolicy: , defaultActivatedDeviceName: ns0:XFkType, parkMonForwardNoRetrieveDn: ns0:String50, parkMonForwardNoRetrieveIntDn: ns0:String50, parkMonForwardNoRetrieveVmEnabled: ns0:boolean, parkMonForwardNoRetrieveIntVmEnabled: ns0:boolean, parkMonForwardNoRetrieveCssName: ns0:XFkType, parkMonForwardNoRetrieveIntCssName: ns0:XFkType, parkMonReversionTimer: , partyEntranceTone: , directoryURIs: {directoryUri: ns0:XDirectoryUri[]}, allowCtiControlFlag: ns0:boolean, rejectAnonymousCall: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateLocationReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, kbits: , videoKbits: , relatedLocations: {relatedLocation: ns0:XLocationRelationship[]}, withinAudioBandwidth: , withinVideoBandwidth: , withinImmersiveKbits: , betweenLocations: {betweenLocation: ns0:XLocationBetween[]}, sequence: xsd:unsignedLong)
     ns0:UpdateMediaResourceGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String50, multicast: ns0:boolean, ({removeMembers: {member: ns0:XMediaResourceGroupMember[]}, addMembers: {member: ns0:XMediaResourceGroupMember[]}} | {members: {member: ns0:XMediaResourceGroupMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateMediaResourceListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, ({removeMembers: {member: ns0:XMediaResourceListMember[]}, addMembers: {member: ns0:XMediaResourceListMember[]}} | {members: {member: ns0:XMediaResourceListMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateMeetMeReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, minimumSecurityLevel: , sequence: xsd:unsignedLong)
     ns0:UpdateMessageWaitingReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, newRoutePartitionName: ns0:XFkType, description: ns0:String128, messageWaitingIndicator: ns0:boolean, callingSearchSpaceName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateMlppDomainReq(({uuid: ns0:XUUID} | {domainName: xsd:string}), newDomainName: xsd:string, domainId: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateMobileVoiceAccessReq(({uuid: ns0:XUUID} | {pattern: xsd:string}), newPattern: xsd:string, routePartitionName: ns0:XFkType, ({removeLocales: {locale: ns0:XMobileVoiceMember[]}, addLocales: {locale: ns0:XMobileVoiceMember[]}} | {locales: {locale: ns0:XMobileVoiceMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateMobilityProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, mobileClientCallingOption: , dvofServiceAccessNumber: xsd:string, dirn: ns0:XDirn, dvorCallerId: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateMobilityReq(handoffNumber: ns0:XFkType, DTMFNumber: ns0:XFkType, newHandoffNumber: xsd:string, newHandoffPartitionName: ns0:XFkType, newDTMFNumber: xsd:string, newDTMFPartitionName: ns0:XFkType)
     ns0:UpdateMohAudioSourceReq(({uuid: ns0:XUUID} | {sourceId: }), newName: ns0:String50, sourceFile: ns0:String255, multicast: ns0:boolean, repeat: ns0:boolean, mohFileStatus: , initialAnnouncement: ns0:XFkType, periodicAnnouncement: ns0:XFkType, periodicAnnouncementInterval: , localeAnnouncement: , initialAnnouncementPlayed: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateMohServerReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, locationName: ns0:XFkType, maxUnicastConnections: , maxMulticastConnections: , fixedAudioSourceDevice: xsd:string, runFlag: ns0:boolean, useTrustedRelayPoint: , isMultiCastEnabled: ns0:boolean, baseMulticastIpaddress: xsd:string, baseMulticastPort: , multicastIncrementOnIp: ns0:boolean, audioSources: {audioSource: {sourceId: , maxHops: }[]}, sequence: xsd:unsignedLong)
     ns0:UpdateMtpReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, trustedRelayPoint: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdatePhoneButtonTemplateReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, buttons: {button: ns0:XButton[]}, sequence: xsd:unsignedLong)
     ns0:UpdatePhoneNtpReq(({uuid: ns0:XUUID} | {ipAddress: xsd:string}), newIpAddress: xsd:string, description: xsd:string, mode: , sequence: xsd:unsignedLong)
     ns0:UpdatePhoneReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, versionStamp: ns0:String128, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, securityProfileName: ns0:XFkType, sipProfileName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, phoneTemplateName: ns0:XFkType, speeddials: {speeddial: ns0:XSpeeddial[]}, busyLampFields: {busyLampField: ns0:XBusyLampField[]}, primaryPhoneName: ns0:XFkType, ringSettingIdleBlfAudibleAlert: , ringSettingBusyBlfAudibleAlert: , blfDirectedCallParks: {blfDirectedCallPark: ns0:XBLFDirectedCallPark[]}, addOnModules: {addOnModule: ns0:XAddOnModule[]}, userLocale: , networkLocale: , idleTimeout: , authenticationUrl: xsd:string, directoryUrl: xsd:string, idleUrl: xsd:string, informationUrl: xsd:string, messagesUrl: xsd:string, proxyServerUrl: xsd:string, servicesUrl: xsd:string, services: {service: ns0:XSubscribedService[]}, softkeyTemplateName: ns0:XFkType, defaultProfileName: ns0:XFkType, enableExtensionMobility: ns0:boolean, singleButtonBarge: , joinAcrossLines: , builtInBridgeStatus: , callInfoPrivacyStatus: , hlogStatus: , ownerUserName: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , subscribeCallingSearchSpaceName: ns0:XFkType, rerouteCallingSearchSpaceName: ns0:XFkType, allowCtiControlFlag: ns0:boolean, presenceGroupName: ns0:XFkType, unattendedPort: ns0:boolean, requireDtmfReception: ns0:boolean, rfc2833Disabled: ns0:boolean, certificateOperation: , authenticationMode: , keySize: , authenticationString: ns0:String128, upgradeFinishTime: xsd:string, deviceMobilityMode: , remoteDevice: ns0:boolean, dndOption: , dndRingSetting: , dndStatus: ns0:boolean, isActive: ns0:boolean, mobilityUserIdName: ns0:XFkType, phoneSuite: , phoneServiceDisplay: , isProtected: ns0:boolean, mobileSmartClientProfileName: ns0:XFkType, mtpRequired: ns0:boolean, mtpPreferedCodec: , dialRulesName: ns0:XFkType, sshUserId: ns0:String50, sshPwd: ns0:String255, digestUser: ns0:String255, outboundCallRollover: , hotlineDevice: ns0:boolean, secureInformationUrl: ns0:String255, secureDirectoryUrl: ns0:String255, secureMessageUrl: ns0:String255, secureServicesUrl: ns0:String255, secureAuthenticationUrl: ns0:String255, secureIdleUrl: ns0:String255, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , featureControlPolicy: ns0:XFkType, deviceTrustMode: , earlyOfferSupportForVoiceCall: ns0:boolean, requireThirdPartyRegistration: ns0:boolean, blockIncomingCallsWhenRoaming: ns0:boolean, homeNetworkId: xsd:string, AllowPresentationSharingUsingBfcp: ns0:boolean, requireOffPremiseLocation: ns0:boolean, userlocale: , sequence: xsd:unsignedLong)
     ns0:UpdatePhoneSecurityProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, deviceSecurityMode: , authenticationMode: , keySize: , tftpEncryptedConfig: ns0:boolean, nonceValidityTime: , transportType: , sipPhonePort: , enableDigestAuthentication: ns0:boolean, excludeDigestCredentials: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdatePhysicalLocationReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdatePresenceGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, presenceGroups: {presenceGroup: ns0:XPresenceGroupMember[]}, sequence: xsd:unsignedLong)
     ns0:UpdateProcessNodeReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String255, description: ns0:String50, mac: ns0:XMacAddress, ipv6Name: xsd:string, lbmHubGroup: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateProcessNodeServiceReq(({uuid: ns0:XUUID} | {processNodeName: ns0:XFkType, service: }), traceLevel: , userCategories: , enable: ns0:boolean, numFiles: , maxFileSize: , sequence: xsd:unsignedLong)
     ns0:UpdateRecordingProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, recordingCssName: ns0:XFkType, recorderDestination: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateRegionMatrixReq(({uuid: ns0:XUUID} | {regionAName: ns0:XFkType, regionBName: ns0:XFkType}), bandwidth: , videoBandwidth: , lossyNetwork: , codecPreference: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateRegionReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, relatedRegions: {relatedRegion: ns0:XRegionRelationship[]}, sequence: xsd:unsignedLong)
     ns0:UpdateRemoteClusterReq(({uuid: ns0:XUUID} | {clusterId: ns0:String255}), emcc: ns0:XRemoteClusterMember, pstnAccess: ns0:XRemoteClusterMember, rsvpAgent: ns0:XRemoteClusterMember, sequence: xsd:unsignedLong)
     ns0:UpdateRemoteDestinationProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, callInfoPrivacyStatus: , userId: xsd:string, ignorePresentationIndicators: ns0:boolean, rerouteCallingSearchSpaceName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, userLocale: , primaryPhoneName: ns0:XFkType, dndOption: , dndStatus: ns0:boolean, mobileSmartClientProfileName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateRemoteDestinationReq(({uuid: ns0:XUUID} | {destination: xsd:string}), newName: xsd:string, newDestination: xsd:string, answerTooSoonTimer: , answerTooLateTimer: , delayBeforeRingingCell: , isMobilePhone: ns0:boolean, enableMobileConnect: ns0:boolean, lineAssociations: {lineAssociation: ns0:XLineAssociation[]}, timeZone: , todAccessName: ns0:XFkType, mobileSmartClientName: ns0:XFkType, mobilityProfileName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateResourcePriorityNamespaceListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, ({removeMembers: {member: ns0:XResourcePriorityNamespaceListMember[]}, addMembers: {member: ns0:XResourcePriorityNamespaceListMember[]}} | {members: {member: ns0:XResourcePriorityNamespaceListMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateResourcePriorityNamespaceReq(({uuid: ns0:XUUID} | {namespace: ns0:String10}), newNamespace: ns0:String10, description: xsd:string, isDefault: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateRouteFilterReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, dialPlanName: ns0:XFkType, ({removeMembers: {member: ns0:XRouteFilterMember[]}, addMembers: {member: ns0:XRouteFilterMember[]}} | {members: {member: ns0:XRouteFilterMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateRouteGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:Name, distributionAlgorithm: , ({removeMembers: {member: ns0:XRouteGroupMember[]}, addMembers: {member: ns0:XRouteGroupMember[]}} | {members: {member: ns0:XRouteGroupMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateRouteListReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, callManagerGroupName: ns0:XFkType, routeListEnabled: ns0:boolean, ({removeMembers: {member: ns0:XRouteListMember[]}, addMembers: {member: ns0:XRouteListMember[]}} | {members: {member: ns0:XRouteListMember[]}}), runOnEveryNode: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateRoutePartitionReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, timeScheduleIdName: ns0:XFkType, useOriginatingDeviceTimeZone: ns0:boolean, timeZone: , sequence: xsd:unsignedLong)
     ns0:UpdateRoutePatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, newDialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, networkLocation: , patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, newRouteFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , supportOverlapSending: ns0:boolean, patternPrecedence: , releaseClause: , allowDeviceOverride: ns0:boolean, provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , destination: {({gatewayName: ns0:XFkType} | {routeListName: ns0:XFkType})}, authorizationCodeRequired: ns0:boolean, authorizationLevelRequired: , clientCodeRequired: ns0:boolean, isdnNsfInfoElement: {cic: xsd:string, networkServiceProtocol: , networkService: , paramValue: xsd:string}, resourcePriorityNamespaceName: ns0:XFkType, routeClass: , enableDccEnforcement: ns0:boolean, blockedCallPercentage: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateSIPNormalizationScriptReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, content: xsd:string, scriptExecutionErrorRecoveryAction: , systemResourceErrorRecoveryAction: , maxMemoryThreshold: xsd:string, maxLuaInstructionsThreshold: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateSNMPCommunityStringReq(communityName: xsd:string, newValues: ns0:RSNMPCommunityString1, sequence: xsd:unsignedLong)
     ns0:UpdateSNMPCommunityStringRes(message: ns0:String32, sequence: xsd:unsignedLong)
     ns0:UpdateSNMPMIB2ListReq(sysLocation: xsd:string, sysContact: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateSNMPMIB2ListRes(message: ns0:String32, sequence: xsd:unsignedLong)
     ns0:UpdateSNMPUserReq(user: ns0:RSNMPUser, sequence: xsd:unsignedLong)
     ns0:UpdateSNMPUserRes(message: ns0:String32, sequence: xsd:unsignedLong)
     ns0:UpdateSafCcdPurgeBlockLearnedRoutesReq(({uuid: ns0:XUUID} | {learnedPattern: ns0:String50, learnedPatternPrefix: ns0:String50, callControlIdentity: ns0:String50, ipAddress: ns0:String50}), newLearnedPattern: ns0:String50, newLearnedPatternPrefix: ns0:String50, newCallControlIdentity: ns0:String50, newIpAddress: ns0:String50, sequence: xsd:unsignedLong)
     ns0:UpdateSafForwarderReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String255, description: ns0:String255, clientLabel: ns0:String255, safSecurityProfile: ns0:XFkType, ipAddress: ns0:String255, port: , safReconnectInterval: , safNotificationsWindowSize: , ({removeAssociatedCucms: {associatedCucm: ns0:XSafForwarderMember[]}, addAssociatedCucms: {associatedCucm: ns0:XSafForwarderMember[]}} | {associatedCucms: {associatedCucm: ns0:XSafForwarderMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateSafSecurityProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String255, description: ns0:String255, userid: ns0:String50, password: ns0:String128, sequence: xsd:unsignedLong)
     ns0:UpdateServiceParameterReq(({uuid: ns0:XUUID} | {processNodeName: ns0:XFkType, name: xsd:string, service: }), value: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateServiceProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, isDefault: ns0:boolean, serviceProfileInfos: {serviceProfileInfo: ns0:XServiceProfileList[]}, sequence: xsd:unsignedLong)
     ns0:UpdateSipDialRulesReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, ({removePatterns: {pattern: ns0:XPatternMember[]}, addPatterns: {pattern: ns0:XPatternMember[]}} | {patterns: {pattern: ns0:XPatternMember[]}}), ({removePlars: {plar: ns0:XPatternMember[]}, addPlars: {plar: ns0:XPatternMember[]}} | {plars: {plar: ns0:XPatternMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateSipProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String100, defaultTelephonyEventPayloadType: , redirectByApplication: ns0:boolean, ringing180: ns0:boolean, timerInvite: , timerRegisterDelta: , timerRegister: , timerT1: , timerT2: , retryInvite: , retryNotInvite: , startMediaPort: , stopMediaPort: , callpickupUri: ns0:Name128, callpickupListUri: ns0:String128, callpickupGroupUri: ns0:String128, meetmeServiceUrl: ns0:String128, userInfo: , dtmfDbLevel: , callHoldRingback: , anonymousCallBlock: , callerIdBlock: , dndControl: , telnetLevel: , timerKeepAlive: , timerSubscribe: , timerSubscribeDelta: , maxRedirects: , timerOffHookToFirstDigit: , callForwardUri: ns0:String128, abbreviatedDialUri: ns0:String128, confJointEnable: ns0:boolean, rfc2543Hold: ns0:boolean, semiAttendedTransfer: ns0:boolean, enableVad: ns0:boolean, stutterMsgWaiting: ns0:boolean, callStats: ns0:boolean, t38Invite: ns0:boolean, rerouteIncomingRequest: , resourcePriorityNamespaceListName: ns0:XFkType, enableAnatForEarlyOfferCalls: ns0:boolean, rsvpOverSip: , fallbackToLocalRsvp: ns0:boolean, sipRe11XxEnabled: , gClear: , earlyOfferSupportForVoiceCall: ns0:boolean, sendRecvSDPInMidCallInvite: ns0:boolean, enableOutboundOptionsPing: ns0:boolean, optionsPingIntervalWhenStatusOK: , optionsPingIntervalWhenStatusNotOK: , deliverConferenceBridgeIdentifier: ns0:boolean, sipOptionsRetryCount: , sipOptionsRetryTimer: , sipBandwidthModifier: , enableUriOutdialSupport: ns0:boolean, userAgentServerHeaderInfo: , allowPresentationSharingUsingBfcp: ns0:boolean, scriptParameters: xsd:string, isScriptTraceEnabled: ns0:boolean, sipNormalizationScript: ns0:XFkType, allowiXApplicationMedia: ns0:boolean, dialStringInterpretation: , acceptAudioCodecPreferences: , mlppUserAuthorization: ns0:boolean, isAssuredSipServiceEnabled: ns0:boolean, resourcePriorityNamespace: ns0:XFkType, useCallerIdCallerNameinUriOutgoingRequest: ns0:boolean, callerIdDn: ns0:String50, callerName: ns0:String50, callingLineIdentification: , rejectAnonymousIncomingCall: ns0:boolean, rejectAnonymousOutgoingCall: ns0:boolean, videoCallTrafficClass: , inactiveSDPRequired: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateSipRealmReq(({uuid: ns0:XUUID} | {realm: xsd:string}), newRealm: xsd:string, userid: xsd:string, digestCredentials: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateSipRoutePatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, blockEnable: ns0:boolean, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , sipTrunkName: ns0:XFkType, dnOrPatternIpv6: xsd:string, routeOnUserPart: ns0:boolean, useCallerCss: ns0:boolean, domainRoutingCssName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateSipTrunkReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, packetCaptureMode: , packetCaptureDuration: , mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, securityProfileName: ns0:XFkType, sipProfileName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, unattendedPort: ns0:boolean, transmitUtf8: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, rerouteCallingSearchSpaceName: ns0:XFkType, referCallingSearchSpaceName: ns0:XFkType, mtpRequired: ns0:boolean, presenceGroupName: ns0:XFkType, unknownPrefix: ns0:String16, destinationAddress: ns0:String50, destAddrIsSrv: ns0:boolean, destinationport: , tkSipCodec: , sigDigits: {, enable: xsd:boolean}, connectedNamePresentation: , connectedPartyIdPresentation: , callingPartySelection: , callingname: , callingLineIdPresentation: , prefixDn: ns0:String50, callerName: ns0:String50, callerIdDn: ns0:String50, acceptInboundRdnis: ns0:boolean, acceptOutboundRdnis: ns0:boolean, srtpAllowed: ns0:boolean, srtpFallbackAllowed: ns0:boolean, isPaiEnabled: ns0:boolean, sipPrivacy: , isRpidEnabled: ns0:boolean, sipAssertedType: , destinationAddressIpv6: xsd:string, dtmfSignalingMethod: , routeClassSignalling: , sipTrunkType: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useImePublicIpPort: ns0:boolean, useDevicePoolCntdPnTransformationCss: ns0:boolean, cntdPnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, sipNormalizationScriptName: ns0:XFkType, runOnEveryNode: ns0:boolean, ({removeDestinations: {destination: ns0:XSipTrunkDestination[]}, addDestinations: {destination: ns0:XSipTrunkDestination[]}} | {destinations: {destination: ns0:XSipTrunkDestination[]}}), unknownStripDigits: xsd:nonNegativeInteger, cgpnTransformationUnknownCssName: ns0:XFkType, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , pathReplacementSupport: ns0:boolean, enableQsigUtf8: ns0:boolean, scriptParameters: xsd:string, scriptTraceEnabled: ns0:boolean, trunkTrafficSecure: , callingAndCalledPartyInfoFormat: , useCallerIdCallerNameinUriOutgoingRequest: ns0:boolean, requestUriDomainName: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateSipTrunkSecurityProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String64, description: ns0:String100, securityMode: , incomingTransport: , outgoingTransport: , digestAuthentication: ns0:boolean, noncePolicyTime: , x509SubjectName: ns0:String4096, incomingPort: , applLevelAuthentication: ns0:boolean, acceptPresenceSubscription: ns0:boolean, acceptOutOfDialogRefer: ns0:boolean, acceptUnsolicitedNotification: ns0:boolean, allowReplaceHeader: ns0:boolean, transmitSecurityStatus: ns0:boolean, sipV150OutboundSdpOfferFiltering: , sequence: xsd:unsignedLong)
     ns0:UpdateSoftKeySetReq(({name: ns0:String100} | {uuid: ns0:XUUID}), ({removeCallStates: {callState: ns0:XCallStateMember[]}, addCallStates: {callState: ns0:XCallStateMember[]}} | {callStates: {callState: ns0:XCallStateMember[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateSoftKeyTemplateReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String100, description: ns0:String100, isDefault: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateSrstReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, port: , ipAddress: xsd:string, SipNetwork: xsd:string, SipPort: , isSecure: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateSyslogConfigurationReq(serverName: xsd:string, serviceGroup: , service: xsd:string, alarmConfigs: {AlarmConfig: ns0:XSyslogConfig[]}, EndPointAlarm: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateSyslogConfigurationRes(message: ns0:String32, sequence: xsd:unsignedLong)
     ns0:UpdateTimePeriodReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, startTime: , endTime: , startDay: , endDay: , monthOfYear: , dayOfMonth: , description: ns0:String255, dayOfMonthEnd: , monthOfYearEnd: , sequence: xsd:unsignedLong)
     ns0:UpdateTimeScheduleReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, ({removeMembers: {member: ns0:XTimeScheduleTimePeriod[]}, addMembers: {member: ns0:XTimeScheduleTimePeriod[]}} | {members: {member: ns0:XTimeScheduleTimePeriod[]}}), description: ns0:String255, timeScheduleCategory: , sequence: xsd:unsignedLong)
     ns0:UpdateTodAccessReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String128, description: ns0:String255, members: {member: ns0:XTODAccessMember}, sequence: xsd:unsignedLong)
     ns0:UpdateTransPatternReq(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, newDialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, newRouteFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , patternPrecedence: , provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , callingSearchSpaceName: ns0:XFkType, resourcePriorityNamespaceName: ns0:XFkType, routeNextHopByCgpn: ns0:boolean, routeClass: , callInterceptProfileName: ns0:XFkType, releaseClause: , sequence: xsd:unsignedLong)
     ns0:UpdateTranscoderReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString255, description: ns0:String128, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, isTrustedRelayPoint: ns0:boolean, maximumCapacity: , sequence: xsd:unsignedLong)
     ns0:UpdateTransformationProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, nationalCssName: ns0:XFkType, internationalCssName: ns0:XFkType, unknownCssName: ns0:XFkType, subscriberCssName: ns0:XFkType, sequence: xsd:unsignedLong)
     ns0:UpdateTvsCertificateReq(({uuid: ns0:XUUID} | {issuerName: xsd:string, serialNumber: xsd:string}), timeToLive: xsd:integer, sequence: xsd:unsignedLong)
     ns0:UpdateUcServiceReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, hostnameorip: ns0:String255, port: , protocol: , ucServiceXml: ns0:XVendorConfig, sequence: xsd:unsignedLong)
     ns0:UpdateUserGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueName128, ({removeMembers: {member: ns0:XUserGroupMember[]}, addMembers: {member: ns0:XUserGroupMember[]}} | {members: {member: ns0:XUserGroupMember[]}}), ({removeUserRoles: {userRole: ns0:XUserGroupRoles[]}, addUserRoles: {userRole: ns0:XUserGroupRoles[]}} | {userRoles: {userRole: ns0:XUserGroupRoles[]}}), sequence: xsd:unsignedLong)
     ns0:UpdateUserReq(({uuid: ns0:XUUID} | {userid: xsd:string}), firstName: xsd:string, middleName: xsd:string, lastName: xsd:string, newUserid: xsd:string, password: xsd:string, pin: xsd:string, telephoneNumber: ns0:String255, mailid: xsd:string, department: xsd:string, manager: xsd:string, userLocale: , associatedDevices: {device: ns0:String50[]}, primaryExtension: {pattern: ns0:String255, routePartitionName: ns0:String50}, associatedPc: xsd:string, associatedGroups: {userGroup: {name: ns0:String100, userRoles: {userRole: ns0:String100[]}}[]}, enableCti: ns0:boolean, digestCredentials: xsd:string, phoneProfiles: {profileName: ns0:XFkType[]}, defaultProfile: ns0:XFkType, presenceGroupName: ns0:XFkType, subscribeCallingSearchSpaceName: ns0:XFkType, enableMobility: ns0:boolean, enableMobileVoiceAccess: ns0:boolean, maxDeskPickupWaitTime: , remoteDestinationLimit: , passwordCredentials: {pwdCredPolicyName: ns0:XFkType, pwdCredUserCantChange: ns0:boolean, pwdCredUserMustChange: ns0:boolean, pwdCredDoesNotExpire: ns0:boolean, pwdCredTimeChanged: xsd:string, pwdCredTimeAdminLockout: xsd:string, pwdCredLockedByAdministrator: ns0:boolean}, pinCredentials: {pinCredPolicyName: ns0:XFkType, pinCredUserCantChange: ns0:boolean, pinCredUserMustChange: ns0:boolean, pinCredDoesNotExpire: ns0:boolean, pinCredTimeChanged: ns0:boolean, pinCredTimeAdminLockout: xsd:string, pinCredLockedByAdministrator: ns0:boolean}, primaryDevice: ns0:XFkType, enableEmcc: ns0:boolean, ctiControlledDeviceProfiles: {profileName: ns0:XFkType[]}, patternPrecedence: , numericUserId: xsd:string, mlppPassword: xsd:string, customUserFields: {({customUserField: ns0:XUserCustomUserField[]})}, homeCluster: ns0:boolean, imAndPresenceEnable: ns0:boolean, serviceProfile: ns0:XFkType, lineAppearanceAssociationForPresences: {lineAppearanceAssociationForPresence: ns0:XLineAppearanceAssociationForPresence[]}, directoryUri: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateVg224Req(({uuid: ns0:XUUID} | {domainName: xsd:string}), newDomainName: xsd:string, description: xsd:string, callManagerGroupName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, sequence: xsd:unsignedLong)
     ns0:UpdateVoiceMailPilotReq(({uuid: ns0:XUUID} | {dirn: ns0:String255, cssName: ns0:XFkType}), newDirn: ns0:String255, description: ns0:String50, newCssName: ns0:XFkType, isDefault: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:UpdateVoiceMailPortReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, useTrustedRelayPoint: , securityProfileName: ns0:XFkType, geoLocationName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, dnPattern: xsd:string, routePartition: ns0:XFkType, dnCallingSearchSpace: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, callerIdDisplay: ns0:String128, callerIdDisplayAscii: ns0:String50, externalMask: xsd:string, sequence: xsd:unsignedLong)
     ns0:UpdateVoiceMailProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String50, isDefault: ns0:boolean, voiceMailboxMask: xsd:string, voiceMailPilot: ns0:XVmPilot, sequence: xsd:unsignedLong)
     ns0:UpdateVpnGatewayReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, url: ns0:String255, certificates: {certificate: ns0:XVpnGatewayMember[]}, sequence: xsd:unsignedLong)
     ns0:UpdateVpnGroupReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, vpnGateways: {vpnGateway: ns0:XVpnGroupMember[]}, sequence: xsd:unsignedLong)
     ns0:UpdateVpnProfileReq(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, autoNetworkDetection: ns0:boolean, mtu: , failToConnect: , clientAuthentication: , pwdPersistant: ns0:boolean, enableHostIdCheck: ns0:boolean, sequence: xsd:unsignedLong)
     ns0:XAarGroup(name: ns0:String32)
     ns0:XAarGroupMatrix(prefixDigit: ns0:String255, aarGroupFromName: ns0:XFkType, aarGroupToName: ns0:XFkType)
     ns0:XAarGroupRelationship(aarGroupFromName: ns0:XFkType, aarGroupToName: ns0:XFkType, prefixDigit: ns0:String32)
     ns0:XAddOnModule(loadInformation: ns0:XLoadInformation, model: , index: )
     ns0:XAnalogPort(portNumber: , attendantDn: ns0:String255, unattendedPort: ns0:boolean, callerIdDn: ns0:String255, callerIdEnable: ns0:boolean, callingPartySelection: , digitSending: , expectedDigits: , sigDigits: {, enable: xsd:boolean}, lines: {({line: ns0:XPhoneLine} | {lineIdentifier: ns0:XNumplanIdentifier})}, prefixDn: ns0:String255, presentationBit: , silenceSuppressionThreshold: , smdiPortNumber: , startDialProtocol: , trunk: , trunkDirection: , trunkLevel: , trunkPadRx: , trunkPadTx: , vendorConfig: ns0:XVendorConfig, timer1: , timer2: , timer3: , timer4: , timer5: , timer6: )
     ns0:XAnnouncement(name: xsd:string, description: xsd:string, announcementFile: xsd:string)
     ns0:XAnnunciator(name: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, locationName: ns0:XFkType, useTrustedRelayPoint: )
     ns0:XAppServerInfo(appServerName: ns0:XFkType, appServerContent: , content: ns0:XContent)
     ns0:XAppUser(userid: xsd:string, password: xsd:string, passwordCredentials: {pwdCredPolicyName: ns0:XFkType, pwdCredUserCantChange: ns0:boolean, pwdCredUserMustChange: ns0:boolean, pwdCredDoesNotExpire: ns0:boolean, pwdCredTimeChanged: xsd:string, pwdCredTimeAdminLockout: xsd:string, pwdCredLockedByAdministrator: ns0:boolean}, digestCredentials: xsd:string, presenceGroupName: ns0:XFkType, acceptPresenceSubscription: ns0:boolean, acceptOutOfDialogRefer: ns0:boolean, acceptUnsolicitedNotification: ns0:boolean, allowReplaceHeader: ns0:boolean, associatedDevices: {device: ns0:String50[]}, associatedGroups: {userGroup: {name: ns0:String100, userRoles: {userRole: ns0:String100[]}}[]}, ctiControlledDeviceProfiles: {deviceProfile: ns0:String50[]})
     ns0:XApplicationDialRules(name: xsd:string, description: xsd:string, numberBeginWith: xsd:string, numberOfDigits: , digitsToBeRemoved: , prefixPattern: xsd:string, priority: )
     ns0:XApplicationServer(appServerType: , name: xsd:string, ipAddress: xsd:string, appUsers: {selectedAppUser: {appUserName: ns0:XFkType, content: ns0:XContent}[]}, url: xsd:string, endUserUrl: xsd:string, processNodeName: ns0:XFkType, endUsers: {selectedEndUser: {endUserName: ns0:XFkType, content: ns0:XContent}[]})
     ns0:XApplicationToSoftKeyTemplate(softKeyTemplateName: ns0:XFkType, standardSoftKeyTemplateName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:XApplicationUserCapfProfile(applicationUser: ns0:XFkType, instanceId: xsd:string, certificateOperation: , authenticationMode: , authenticationString: xsd:string, keySize: , operationCompletion: xsd:string)
     ns0:XAudioCodecPreferenceList(name: xsd:string, description: xsd:string, codecsInList: {codecNames: xsd:string[]})
     ns0:XBLFDirectedCallPark(label: ns0:String50, ({directedCallParkId: ns0:XUUID} | {directedCallParkDnAndPartition: {dnPattern: ns0:String255, routePartitionName: ns0:XFkType}}), labelAscii: ns0:String50, index: )
     ns0:XBillingServer(hostName: xsd:string, userId: xsd:string, password: xsd:string, directory: xsd:string, resendOnFailure: ns0:boolean, billingServerProtocol: )
     ns0:XBusyLampField(blfDest: xsd:string, ({blfDirn: ns0:String255, routePartition: xsd:string}), label: xsd:string, asciiLabel: xsd:string, associatedBlfSdFeatures: {feature: []}, index: )
     ns0:XButton(feature: , label: ns0:String50, buttonNumber: )
     ns0:XCallForwardAll(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, secondaryCallingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:XCallForwardAlternateParty(callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, duration: )
     ns0:XCallForwardBusy(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:XCallForwardBusyInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:XCallForwardNoAnswer(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, duration: )
     ns0:XCallForwardNoAnswerInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, duration: )
     ns0:XCallForwardNoCoverage(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:XCallForwardNoCoverageInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:XCallForwardNotRegistered(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:XCallForwardNotRegisteredInt(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:XCallForwardOnFailure(forwardToVoiceMail: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50)
     ns0:XCallManager(name: ns0:String50, description: ns0:String50, autoRegistration: {startDn: ns0:String255, endDn: ns0:String255, nextDn: ns0:String255, routePartitionName: ns0:XFkType, e164Mask: ns0:String50}, ports: {({ethernetPhonePort: }), mgcpPorts: {listen: , keepAlive: }, sipPorts: {sipPhonePort: , sipPhoneSecurePort: }}, processNodeName: ns0:XFkType, lbmGroup: ns0:XFkType, ctiid: xsd:nonNegativeInteger)
     ns0:XCallManagerGroup(name: ns0:String50, tftpDefault: ns0:boolean, members: {member: ns0:XCallManagerMember[]})
     ns0:XCallManagerMember(callManagerName: ns0:XFkType, priority: )
     ns0:XCallPark(pattern: xsd:string, description: xsd:string, routePartitionName: ns0:XFkType, callManagerName: ns0:XFkType)
     ns0:XCallPickupGroup(pattern: xsd:string, description: xsd:string, routePartitionName: ns0:XFkType, name: xsd:Name, members: {member: ns0:XPickupGroupMember[]}, pickupNotification: , pickupNotificationTimer: , callInfoForPickupNotification: {callingPartyInfo: ns0:boolean, calledPartyInfo: ns0:boolean})
     ns0:XCallStateMember(callStateName: xsd:string, softKeys: {softKey: ns0:XSoftKeyMember[]})
     ns0:XCalledPartyTracing(directorynumber: xsd:string, description: xsd:string)
     ns0:XCalledPartyTransformationPattern(pattern: xsd:string, description: xsd:string, routePartitionName: ns0:XFkType, calledPartyTransformationMask: xsd:string, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, routeFilterName: ns0:XFkType, calledPartyPrefixDigits: xsd:string, calledPartyNumberingPlan: , calledPartyNumberType: )
     ns0:XCallerFilterList(name: ns0:String50, description: ns0:String128, isAllowedType: ns0:boolean, endUserIdName: ns0:XFkType, members: {member: ns0:XCallerFilterListMember[]})
     ns0:XCallerFilterListMember(DnMask: ns0:String50, callerFilterMask: )
     ns0:XCallingPartyTransformationPattern(pattern: xsd:string, description: xsd:string, routePartitionName: ns0:XFkType, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, callingPartyPrefixDigits: ns0:String50, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingPartyNumberingPlan: , callingPartyNumberType: )
     ns0:XCallingSearchSpaceMember(routePartitionName: ns0:XFkType, index: )
     ns0:XCallsQueue(maxCallersInQueue: , queueFullDestination: ns0:String50, callingSearchSpacePilotQueueFull: ns0:XFkType, maxWaitTimeInQueue: , maxWaitTimeDestination: ns0:String50, callingSearchSpaceMaxWaitTime: ns0:XFkType, noAgentDestination: ns0:String50, callingSearchSpaceNoAgent: ns0:XFkType, networkHoldMohAudioSourceID: )
     ns0:XCcdAdvertisingService(name: ns0:String50, description: ns0:String50, isActivated: ns0:boolean, hostDnGroup: ns0:XFkType, safSipTrunk: ns0:XFkType, safH323Trunk: ns0:XFkType)
     ns0:XCcdHostedDN(hostedPattern: ns0:String50, description: ns0:String255, CcdHostedDnGroup: ns0:XFkType, pstnFailoverStripDigits: , pstnFailoverPrependDigits: ns0:String255, usePstnFailover: ns0:boolean)
     ns0:XCcdHostedDNGroup(name: ns0:String255, description: ns0:String255, pstnFailoverStripDigits: , pstnFailoverPrependDigits: ns0:String255, usePstnFailover: ns0:boolean)
     ns0:XCcdRequestingService(name: ns0:String50, description: ns0:String50, isActivated: ns0:boolean, routePartitionName: ns0:XFkType, learnedPatternPrefix: ns0:String50, pstnPrefix: ns0:String50, associatedTrunks: {associatedTrunk: ns0:XCcdRequestingServiceMember[]})
     ns0:XCcdRequestingServiceMember(trunkName: ns0:XFkType)
     ns0:XCcmExternalIpMap(callManagerName: ns0:XFkType, ipAddressHost: ns0:String255, port: ns0:String255)
     ns0:XCertificateRole(roleName: )
     ns0:XCiscoCatalyst600024PortFXSGateway(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, ports: {port: ns0:XAnalogPort[]}, portSelectionOrder: , transmitUtf8: ns0:boolean, geoLocationFilterName: ns0:XFkType)
     ns0:XCiscoCatalyst6000E1VoIPGateway(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIe: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIE: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , QSIGVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType)
     ns0:XCiscoCatalyst6000T1VoIPGatewayPri(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, mlppIndicationStatus: , mlppPreemption: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIe: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIE: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , QSIGVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType)
     ns0:XCiscoCatalyst6000T1VoIPGatewayT1(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, sendGeoLocation: ns0:boolean, ports: {port: ns0:XT1Port[]}, trunkSelectionOrder: , clockReference: , csuParam: , digitSending: , pcmType: , fdlChannel: , yellowAlarm: , zeroSupression: , smdiBasePort: , handleDtmfPrecedenceSignals: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, geoLocationFilterName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType)
     ns0:XCmcInfo(code: ns0:String16, description: ns0:String50)
     ns0:XCommonDeviceConfig(name: ns0:UniqueString50, softkeyTemplateName: ns0:XFkType, userLocale: , networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , mlppDomainId: ns0:String128, mlppIndicationStatus: , useTrustedRelayPoint: ns0:boolean, preemption: , ipAddressingMode: , ipAddressingModePreferenceControl: , allowAutoConfigurationForPhones: , useImeForOutboundCalls: )
     ns0:XCommonMembersExtension()
     ns0:XCommonPhoneConfig(name: ns0:UniqueString50, description: ns0:String128, unlockPwd: ns0:String50, dndOption: , dndAlertingType: , backgroundImage: ns0:boolean, phonePersonalization: , phoneServiceDisplay: , sshUserId: ns0:String50, sshPwd: ns0:String255, vendorConfig: ns0:XVendorConfig, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , vpnGroupName: ns0:XFkType, vpnProfileName: ns0:XFkType, featureControlPolicy: ns0:XFkType)
     ns0:XConferenceBridge(name: ns0:UniqueName128, description: ns0:String128, product: , devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, subUnit: , loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, maximumCapacity: , useTrustedRelayPoint: , securityProfileName: ns0:XFkType, destinationAddress: xsd:string, mcuConferenceBridgeSipPort: , sipProfile: ns0:XFkType, srtpAllowed: ns0:boolean, normalizationScript: ns0:XFkType, enableTrace: ns0:boolean, normalizationScriptInfos: {normalizationScriptInfo: ns0:XNormalizationScriptInfo[]}, userName: xsd:string, password: xsd:string, httpPort: , useHttps: ns0:boolean)
     ns0:XContent(_value_1: ANY[])
     ns0:XCredentialPolicy(name: ns0:String255, failedLogon: , resetFailedLogonAttempts: , lockoutDuration: , credChangeDuration: , credExpiresAfter: , minCredLength: , prevCredStoredNum: , inactiveDaysAllowed: , expiryWarningDays: , trivialCredCheck: ns0:boolean)
     ns0:XCss(name: ns0:UniqueName50, description: ns0:String50, members: {member: ns0:XCallingSearchSpaceMember[]}, partitionUsage: )
     ns0:XCtiRoutePoint(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, userLocale: , lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})})
     ns0:XCumaServerSecurityProfile(name: xsd:string, description: xsd:string, securityMode: , transportType: , x509SubjectName: xsd:string, serverIpHostName: ns0:String255)
     ns0:XCustomUserField(field: xsd:string)
     ns0:XDateTimeGroup(name: xsd:string, timeZone: , separator: xsd:string, dateformat: xsd:string, timeFormat: xsd:string, phoneNtpReferences: {selectedPhoneNtpReference: ns0:XDateTimeGroupNtpReference[]})
     ns0:XDateTimeGroupNtpReference(phoneNtpName: ns0:XFkType, selectionOrder: )
     ns0:XDdi(name: ns0:String50, clause: ns0:String1024, dialPlanName: ns0:XFkType, members: {member: ns0:XDigitDiscardInstructionMember[]})
     ns0:XDefaultDeviceProfile(name: ns0:UniqueString128, description: ns0:String255, product: , class: , protocol: , protocolSide: , userHoldMohAudioSourceId: , userLocale: , phoneButtonTemplate: ns0:XFkType, softkeyTemplate: ns0:XFkType, privacy: , singleButtonBarge: , joinAcrossLines: , ignorePi: ns0:boolean, dndStatus: ns0:boolean, dndRingSetting: , dndOption: , mlppDomainId: ns0:String128, mlppIndication: , preemption: , alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , emccCallingSearchSpace: ns0:XFkType)
     ns0:XDeviceMobility(name: xsd:string, subNet: xsd:string, subNetMaskSz: , members: {member: ns0:XDevicePoolDeviceMobility[]})
     ns0:XDeviceMobilityGroup(name: xsd:string, description: xsd:string)
     ns0:XDevicePool(name: ns0:UniqueString50, autoSearchSpaceName: ns0:XFkType, dateTimeSettingName: ns0:XFkType, callManagerGroupName: ns0:XFkType, mediaResourceListName: ns0:XFkType, regionName: ns0:XFkType, networkLocale: , srstName: ns0:XFkType, connectionMonitorDuration: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, locationName: ns0:XFkType, mobilityCssName: ns0:XFkType, physicalLocationName: ns0:XFkType, deviceMobilityGroupName: ns0:XFkType, revertPriority: , singleButtonBarge: , joinAcrossLines: , cgpnTransformationCssName: ns0:XFkType, cdpnTransformationCssName: ns0:XFkType, localRouteGroupName: ns0:XFkType, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, callingPartyNationalPrefix: ns0:String16, callingPartyInternationalPrefix: ns0:String16, callingPartyUnknownPrefix: ns0:String16, callingPartySubscriberPrefix: ns0:String16, adjunctCallingSearchSpace: ns0:XFkType, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, imeEnrolledPatternGroupName: ns0:XFkType, cntdPnTransformationCssName: ns0:XFkType)
     ns0:XDevicePoolDeviceMobility(devicePoolName: ns0:XFkType)
     ns0:XDeviceProfile(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , userHoldMohAudioSourceId: , vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, phoneTemplateName: ns0:XFkType, speeddials: {speeddial: ns0:XSpeeddial[]}, busyLampFields: {busyLampField: ns0:XBusyLampField[]}, blfDirectedCallParks: {blfDirectedCallPark: ns0:XBLFDirectedCallPark[]}, addOnModules: {addOnModule: ns0:XAddOnModule[]}, userLocale: , singleButtonBarge: , joinAcrossLines: , loginUserId: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, dndOption: , dndRingSetting: , dndStatus: ns0:boolean, emccCallingSearchSpace: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , softkeyTemplateName: ns0:XFkType, callInfoPrivacyStatus: , services: {service: ns0:XSubscribedService[]}, featureControlPolicy: ns0:XFkType, userlocale: , ctiid: xsd:positiveInteger)
     ns0:XDhcpServer(processNodeName: ns0:XFkType, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, primaryTftpServerIpAddress: xsd:string, secondaryTftpServerIpAddress: xsd:string, bootstrapServerIpAddress: xsd:string, domainName: xsd:string, tftpServerName: xsd:string, arpCacheTimeout: , ipAddressLeaseTime: , renewalTime: , rebindingTime: )
     ns0:XDhcpSubnet(dhcpServerName: ns0:XFkType, subnetIpAddress: xsd:string, primaryStartIpAddress: xsd:string, primaryEndIpAddress: xsd:string, secondaryStartIpAddress: xsd:string, secondaryEndIpAddress: xsd:string, primaryRouterIpAddress: xsd:string, secondaryRouterIpAddress: xsd:string, subnetMask: xsd:string, domainName: xsd:string, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, tftpServerName: xsd:string, primaryTftpServerIpAddress: xsd:string, secondaryTftpServerIpAddress: xsd:string, bootstrapServerIpAddress: xsd:string, arpCacheTimeout: , ipAddressLeaseTime: , renewalTime: , rebindingTime: )
     ns0:XDialPlan(name: ns0:String50, description: ns0:String50)
     ns0:XDialPlanTag(name: ns0:String50, dialPlanName: ns0:XFkType, operator: , suppressFromRouteFilter: ns0:boolean)
     ns0:XDigitDiscardInstructionMember(dialPlanTagName: ns0:XFkType)
     ns0:XDirectedCallPark(pattern: xsd:string, description: xsd:string, routePartitionName: ns0:XFkType, retrievalPrefix: xsd:string, reversionPattern: xsd:string, revertCssName: ns0:XFkType)
     ns0:XDirectoryLookupDialRules(name: xsd:string, description: xsd:string, numberBeginWith: xsd:string, numberOfDigits: , digitsToBeRemoved: , prefixPattern: xsd:string, priority: )
     ns0:XDirectoryUri(isPrimary: ns0:boolean, uri: ns0:String128, partition: ns0:XFkType)
     ns0:XDirn(pattern: xsd:string, routePartitionName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:XEmccFeatureConfig(parameterName: ns0:String50, value: ns0:String255)
     ns0:XEndUserCapfProfile(endUserId: ns0:XFkType, instanceId: xsd:string, certificationOperation: , authenticationMode: , authenticationString: xsd:string, keySize: , operationCompletion: xsd:string)
     ns0:XEnduserMember(userId: xsd:string)
     ns0:XEnterpriseFeatureAccessConfiguration(pattern: ns0:String16, routePartitionName: ns0:XFkType, description: xsd:string, isDefaultEafNumber: ns0:boolean)
     ns0:XEnterprisePhoneConfig(vendorConfig: ns0:XVendorConfig)
     ns0:XExternalCallControlProfile(name: ns0:String50, primaryUri: ns0:String255, secondaryUri: ns0:String255, enableLoadBalancing: ns0:boolean, routingRequestTimer: , diversionReroutingCssName: ns0:XFkType, callTreatmentOnFailure: )
     ns0:XFacInfo(name: ns0:String50, code: ns0:String16, authorizationLevel: )
     ns0:XFallbackProfile(name: ns0:String50, description: xsd:string, advertisedFallbackDirectoryE164Number: xsd:string, qosSensistivityLevel: , callCss: , callAnswerTimer: , directoryNumberPartition: ns0:XFkType, directoryNumber: ns0:String16, numberOfDigitsForCallerIDPartialMatch: )
     ns0:XFeatureControlConfig(featureName: ns0:String50, overrideDefault: ns0:boolean, enableSetting: ns0:boolean)
     ns0:XFeatureControlPolicy(name: ns0:String50, description: ns0:String100, features: {feature: ns0:XFeatureControlConfig[]})
     ns0:XFixedMohAudioSource(name: xsd:string, multicast: ns0:boolean, enable: xsd:string)
     ns0:XFkType(xsd:string, uuid: ns0:XUUID)
     ns0:XGatekeeper(name: ns0:UniqueString128, description: ns0:String128, rrqTimeToLive: , retryTimeout: , enableDevice: ns0:boolean)
     ns0:XGateway(domainName: xsd:string, description: xsd:string, product: , protocol: , callManagerGroupName: ns0:XFkType, units: {unit: {index: , product: , subunits: {subunit: {index: , product: , beginPort: }[]}}[]}, vendorConfig: ns0:XVendorConfig)
     ns0:XGatewayEndpointAnalog(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, port: ns0:XAnalogPort, trunkSelectionOrder: , transmitUtf8: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, callingPartyNumberPrefix: ns0:String16, callingPartyStripDigits: , callingPartyUnknownTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnknown: ns0:boolean, hotlineDevice: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, imeE164DirectoryNumber: ns0:String16, ctiid: xsd:positiveInteger)
     ns0:XGatewayEndpointAnalogAccess(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:XGatewayEndpointAnalog)
     ns0:XGatewayEndpointDigitalAccessBri(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:XGatewayEndpointDigitalBri)
     ns0:XGatewayEndpointDigitalAccessPri(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:XGatewayEndpointDigitalPri)
     ns0:XGatewayEndpointDigitalAccessT1(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:XGatewayEndpointDigitalT1)
     ns0:XGatewayEndpointDigitalBri(index: , name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkLocale: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, briProtocol: , calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , clockReference: , csuParam: , dChannelEnable: ns0:boolean, channelSelectionOrder: , pcmType: , firstDelay: , intraDelay: , redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , prefix: xsd:string, presentationBit: , sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {xsd:nonNegativeInteger, enable: xsd:boolean}, statusPoll: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, geoLocationFilterName: ns0:XFkType, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, GClearEnable: ns0:boolean, ctiid: xsd:positiveInteger)
     ns0:XGatewayEndpointDigitalPri(index: , name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, mlppIndicationStatus: , mlppPreemption: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIE: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIe: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {xsd:nonNegativeInteger, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , GClearEnable: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , qsigVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, routeClassSignalling: , nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, ctiid: xsd:positiveInteger)
     ns0:XGatewayEndpointDigitalT1(index: , name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, v150: ns0:boolean, geoLocationFilterName: ns0:XFkType, ports: {port: ns0:XT1Port[]}, trunkSelectionOrder: , clockReference: , csuParam: , digitSending: , pcmType: , fdlChannel: , yellowAlarm: , zeroSupression: , smdiBasePort: , handleDtmfPrecedenceSignals: ns0:boolean, encodeOutboundVoiceRouteClass: ns0:boolean, routeClassSignalling: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, ctiid: xsd:positiveInteger)
     ns0:XGatewaySccp(index: , name: ns0:UniqueString128, description: ns0:String128, product: , model: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, transmitUtf8: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, callingPartyNumberPrefix: ns0:String16, callingPartyStripDigits: , callingPartyUnknownTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnknown: ns0:boolean, hotlineDevice: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, phoneTemplateName: ns0:XFkType, securityProfileName: ns0:XFkType, userLocale: , deviceMobilityMode: , ownerUserId: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVM: , allowCtiControlFlag: ns0:boolean, remoteDevice: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, unattendedPort: ns0:boolean, presenceGroupName: ns0:XFkType, mlppIndicationStatus: , preemption: , hlogStatus: ns0:boolean, ignorePresentationIndicators: , lines: {({line: ns0:XPhoneLine} | {lineIdentifier: ns0:XNumplanIdentifier})}, ctiid: xsd:positiveInteger)
     ns0:XGatewaySccpEndpoints(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunit: , endpoint: ns0:XGatewaySccp)
     ns0:XGatewaySubunits(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), unit: , subunits: {subunit: {index: , product: , beginPort: }[]})
     ns0:XGeoLocation(name: ns0:String50, country: xsd:string, description: ns0:String255, nationalSubDivision: ns0:String100, district: ns0:String255, communityName: ns0:String255, cityDivision: ns0:String255, neighbourhood: ns0:String255, street: ns0:String255, leadingStreetDirection: ns0:String50, trailingStreetSuffix: ns0:String50, streetSuffix: ns0:String255, houseNumber: ns0:String16, houseNumberSuffix: ns0:String100, landmark: ns0:String255, location: ns0:String255, floor: ns0:String16, occupantName: ns0:String255, postalCode: ns0:String100)
     ns0:XGeoLocationFilter(name: ns0:String50, description: ns0:String255, useCountry: ns0:boolean, useNationalSubDivision: ns0:boolean, useDistrict: ns0:boolean, useCommunityName: ns0:boolean, useCityDivision: ns0:boolean, useNeighbourhood: ns0:boolean, useStreet: ns0:boolean, useLeadingStreetDirection: ns0:boolean, useTrailingStreetSuffix: ns0:boolean, useStreetSuffix: ns0:boolean, useHouseNumber: ns0:boolean, useHouseNumberSuffix: ns0:boolean, useLandmark: ns0:boolean, useLocation: ns0:boolean, useFloor: ns0:boolean, useOccupantName: ns0:boolean, usePostalCode: ns0:boolean)
     ns0:XGeoLocationPolicy(name: ns0:String50, country: xsd:string, description: ns0:String255, nationalSubDivision: ns0:String100, district: ns0:String255, communityName: ns0:String255, cityDivision: ns0:String255, neighbourhood: ns0:String255, street: ns0:String255, leadingStreetDirection: ns0:String50, trailingStreetSuffix: ns0:String50, streetSuffix: ns0:String255, houseNumber: ns0:String16, houseNumberSuffix: ns0:String100, landmark: ns0:String255, location: ns0:String255, floor: ns0:String16, occupantName: ns0:String255, postalCode: ns0:String100, relatedPolicies: {relatedPolicy: ns0:XPolicyRelationship[]})
     ns0:XH323Gateway(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , vendorConfig: ns0:XVendorConfig, pathReplacementSupport: ns0:boolean, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , srtpAllowed: ns0:boolean, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , enableInboundFaststart: ns0:boolean, enableOutboundFaststart: ns0:boolean, codecForOutboundFaststart: , transmitUtf8: ns0:boolean, signalingPort: , allowH235PassThrough: ns0:boolean, sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String50, calledPartyIeNumberType: , callingPartyIeNumberType: , calledNumberingPlan: , callingNumberingPlan: , callingPartyNationalPrefix: ns0:String16, callingPartyInternationalPrefix: ns0:String16, callingPartyUnknownPrefix: ns0:String16, callingPartySubscriberPrefix: ns0:String16, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, displayIeDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, useDevicePoolCalledCssNatl: ns0:boolean, useDevicePoolCalledCssIntl: ns0:boolean, useDevicePoolCalledCssUnkn: ns0:boolean, useDevicePoolCalledCssSubs: ns0:boolean, ctiid: xsd:positiveInteger)
     ns0:XH323Line(index: , label: ns0:String50, asciiLabel: ns0:String50, display: ns0:String50, dirn: ns0:XDirn, displayAscii: ns0:String50, e164Mask: ns0:String255, maxNumCalls: , busyTrigger: , callInfoDisplay: {callerName: ns0:boolean, callerNumber: ns0:boolean, redirectedNumber: ns0:boolean, dialedNumber: ns0:boolean}, recordingProfileName: ns0:XFkType, monitoringCssName: ns0:XFkType, recordingFlag: , audibleMwi: , speedDial: xsd:string, partitionUsage: , associatedEndusers: {enduser: ns0:XEnduserMember[]}, ctiid: xsd:nonNegativeInteger)
     ns0:XH323Phone(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, remoteDevice: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , srtpAllowed: ns0:boolean, unattendedPort: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, mtpPreferredCodec: , callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , displayIEDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, presenceGroupName: ns0:XFkType, hlogStatus: ns0:boolean, ownerUserName: ns0:XFkType, signalingPort: , gateKeeperInfo: {gateKeeperName: ns0:XFkType, e164: ns0:String50, technologyPrefix: ns0:String50, zone: ns0:String50}, lines: {({line: ns0:XH323Line[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, ignorePresentationIndicators: ns0:boolean, ctiid: xsd:positiveInteger)
     ns0:XH323Trunk(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , srtpAllowed: ns0:boolean, unattendedPort: ns0:boolean, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , displayIEDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, enableInboundFaststart: ns0:boolean, enableOutboundFaststart: ns0:boolean, codecForOutboundFaststart: , allowH235PassThrough: ns0:boolean, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , transmitUtf8: ns0:boolean, signalingPort: , nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String50, calledPartyIeNumberType: , callingPartyIeNumberType: , calledNumberingPlan: , callingNumberingPlan: , pathReplacementSupport: ns0:boolean, ({gateKeeperInfo: {gateKeeper: ns0:XFkType, terminalType: , technologyPrefix: ns0:String50, zone: ns0:String50}} | {remoteServerinfo: {server1: ns0:String255, server2: ns0:String255, server3: ns0:String255}}), ictPassingPrecedenceLevelThroughUuie: ns0:boolean, ictSecurityAccessLevel: , isSafEnabled: ns0:boolean, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, useDevicePoolCalledCssNatl: ns0:boolean, useDevicePoolCalledCssIntl: ns0:boolean, useDevicePoolCalledCssUnkn: ns0:boolean, useDevicePoolCalledCssSubs: ns0:boolean, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, runOnEveryNode: ns0:boolean, destinations: {destination: ns0:XH323TrunkDestination[]}, ctiid: xsd:positiveInteger)
     ns0:XH323TrunkDestination(addressIpv4: ns0:String255, sortOrder: )
     ns0:XHandoffConfiguration(pattern: ns0:String16, routePartitionName: ns0:XFkType)
     ns0:XHuntForwardInfoBusy(usePersonalPreferences: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, maxHuntduration: )
     ns0:XHuntForwardInfoNoAnswer(usePersonalPreferences: ns0:boolean, callingSearchSpaceName: ns0:XFkType, destination: ns0:String50, maxHuntduration: )
     ns0:XHuntList(name: xsd:Name, description: xsd:string, callManagerGroupName: ns0:XFkType, routeListEnabled: ns0:boolean, voiceMailUsage: ns0:boolean, members: {member: ns0:XHuntListMember[]})
     ns0:XHuntListMember(lineGroupName: ns0:XFkType, selectionOrder: )
     ns0:XHuntPilot(pattern: xsd:string, description: xsd:string, routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , patternPrecedence: , provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , huntListName: ns0:XFkType, parkMonForwardNoRetrieve: {usePersonalPreferences: ns0:boolean, destination: ns0:String50, callingSearchSpaceName: ns0:XFkType}, alertingName: ns0:String50, asciiAlertingName: ns0:String32, e164Mask: xsd:string, aarNeighborhoodName: ns0:XFkType, forwardHuntNoAnswer: {usePersonalPreferences: ns0:boolean, destination: xsd:string, callingSearchSpaceName: ns0:XFkType}, forwardHuntBusy: {usePersonalPreferences: ns0:boolean, destination: xsd:string, callingSearchSpaceName: ns0:XFkType}, callPickupGroupName: ns0:XFkType, maxHuntduration: , releaseClause: , displayConnectedNumber: ns0:boolean, queueCalls: ns0:XCallsQueue)
     ns0:XImeClient(name: ns0:String50, description: xsd:string, domain: ns0:String255, isActivated: ns0:boolean, sipTrunkName: ns0:XFkType, primaryImeServerName: ns0:XFkType, secondaryImeServerName: ns0:XFkType, learnedRouteFilterGroupName: ns0:XFkType, exclusionNumberGroupName: ns0:XFkType, firewallName: ns0:XFkType, members: {member: ns0:XImeClientMember[]}, ccmExternalIpMaps: {ccmExternalIpMap: ns0:XCcmExternalIpMap[]})
     ns0:XImeClientMember(enrolledPatternGroupName: ns0:XFkType)
     ns0:XImeE164Transformation(name: ns0:String50, description: xsd:string, cgpnTransformationCssName: ns0:XFkType, isCgpnPreTransformation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, isCdpnPreTransformation: ns0:boolean, incomingCgpnTransformationProfileName: ns0:XFkType, incomingCdpnTransformationProfileName: ns0:XFkType)
     ns0:XImeEnrolledPattern(pattern: ns0:String16, description: xsd:string, imeEnrolledPatternGroupName: ns0:XFkType)
     ns0:XImeEnrolledPatternGroup(name: ns0:String50, description: xsd:string, fallbackProfileName: ns0:XFkType, isPatternAllAlias: ns0:boolean)
     ns0:XImeExclusionNumber(pattern: ns0:String16, description: xsd:string, imeExclusionNumberGroupName: ns0:XFkType)
     ns0:XImeExclusionNumberGroup(name: ns0:String50, description: xsd:string)
     ns0:XImeFirewall(name: ns0:String50, description: xsd:string, ipAddress: ns0:String15, port: )
     ns0:XImeRouteFilterElement(name: ns0:String50, description: xsd:string, elementType: , imeRouteFilterGroupName: ns0:XFkType)
     ns0:XImeRouteFilterGroup(name: ns0:String50, description: xsd:string, groupTrustSetting: ns0:boolean)
     ns0:XImeServer(name: ns0:String50, description: xsd:string, ipAddress: xsd:string, port: , deviceSecurityMode: , applicationUser: ns0:XFkType, reconnectInterval: )
     ns0:XImportedDirectoryUriCatalogs(name: xsd:string, description: xsd:string, routeString: xsd:string, lastLoadedFileName: xsd:string, fileLoadDateTime: )
     ns0:XInterClusterServiceProfile(interClusterService: , isActivated: ns0:boolean, sipTrunkName: ns0:XFkType)
     ns0:XIpPhoneServices(serviceName: ns0:UniqueString128, asciiServiceName: ns0:UniqueString128, serviceDescription: ns0:String128, serviceUrl: xsd:string, secureServiceUrl: xsd:string, serviceCategory: , serviceType: , serviceVendor: xsd:string, serviceVersion: xsd:string, enabled: ns0:boolean, enterpriseSubscription: ns0:boolean, parameters: {parameter: ns0:XIpPhoneServicesParameter[]})
     ns0:XIpPhoneServicesParameter(name: ns0:UniqueString50, displayName: ns0:String128, default: ns0:String255, description: ns0:String255, paramRequired: ns0:boolean, paramPassword: ns0:boolean)
     ns0:XIvrUserLocale(userLocale: , orderIndex: )
     ns0:XLbmGroup(name: xsd:string, Description: xsd:string, ProcessnodeActive: ns0:XFkType, ProcessnodeStandby: ns0:XFkType)
     ns0:XLbmHubGroup(name: xsd:string, description: xsd:string, member1: xsd:string, member2: xsd:string, member3: xsd:string)
     ns0:XLdapAuthentication(authenticateEndUsers: ns0:boolean, distinguishedName: ns0:String128, ldapPassword: ns0:String128, userSearchBase: ns0:String255, servers: {server: {hostName: ns0:String128, ldapPortNumber: , sslEnabled: ns0:boolean}[]}, uuid: ns0:XUUID)
     ns0:XLdapDirectory(name: ns0:String50, ldapDn: ns0:String128, ldapPassword: ns0:String128, userSearchBase: ns0:String255, repeatable: ns0:boolean, intervalValue: , scheduleUnit: , nextExecTime: ns0:String32, servers: {server: {hostName: ns0:String128, ldapPortNumber: , sslEnabled: ns0:boolean}[]}, middleName: ns0:String128, phoneNumber: ns0:String128, mailId: ns0:String128, ldapFilter: ns0:XFkType, directoryUri: ns0:String128)
     ns0:XLdapFilter(name: ns0:String4096, filter: ns0:String255)
     ns0:XLdapSyncCustomField(ldapConfigurationName: xsd:string, customUserField: xsd:string, ldapUserField: xsd:string)
     ns0:XLdapSystem(syncEnabled: ns0:boolean, ldapServer: , userIdAttribute: ns0:String64)
     ns0:XLicenseCapabilities(userid: xsd:string, enableUps: ns0:boolean, enableUpc: ns0:boolean)
     ns0:XLicenseUnitReport(serverName: ns0:String255, phoneLicenseFeature: {unitsAuthorized: xsd:nonNegativeInteger, unitsUsed: xsd:nonNegativeInteger, unitsRemaining: xsd:nonNegativeInteger, unitsPending: xsd:nonNegativeInteger, status: ns0:boolean}, ccmNodeLicenseFeature: {unitsAuthorized: xsd:nonNegativeInteger, unitsUsed: xsd:nonNegativeInteger, unitsRemaining: xsd:nonNegativeInteger, status: ns0:boolean}, softwareLicenseVersion: {swVersion: ns0:String50, status: ns0:boolean})
     ns0:XLine(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, aarDestinationMask: ns0:String128, aarKeepCallHistory: ns0:boolean, aarVoiceMailEnabled: ns0:boolean, callForwardAll: ns0:XCallForwardAll, callForwardBusy: ns0:XCallForwardBusy, callForwardBusyInt: ns0:XCallForwardBusyInt, callForwardNoAnswer: ns0:XCallForwardNoAnswer, callForwardNoAnswerInt: ns0:XCallForwardNoAnswerInt, callForwardNoCoverage: ns0:XCallForwardNoCoverage, callForwardNoCoverageInt: ns0:XCallForwardNoCoverageInt, callForwardOnFailure: ns0:XCallForwardOnFailure, callForwardAlternateParty: ns0:XCallForwardAlternateParty, callForwardNotRegistered: ns0:XCallForwardNotRegistered, callForwardNotRegisteredInt: ns0:XCallForwardNotRegisteredInt, callPickupGroupName: ns0:XFkType, autoAnswer: , networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , alertingName: ns0:String50, asciiAlertingName: ns0:String32, presenceGroupName: ns0:XFkType, shareLineAppearanceCssName: ns0:XFkType, voiceMailProfileName: ns0:XFkType, patternPrecedence: , releaseClause: , hrDuration: , hrInterval: , cfaCssPolicy: , defaultActivatedDeviceName: ns0:XFkType, parkMonForwardNoRetrieveDn: ns0:String50, parkMonForwardNoRetrieveIntDn: ns0:String50, parkMonForwardNoRetrieveVmEnabled: ns0:boolean, parkMonForwardNoRetrieveIntVmEnabled: ns0:boolean, parkMonForwardNoRetrieveCssName: ns0:XFkType, parkMonForwardNoRetrieveIntCssName: ns0:XFkType, parkMonReversionTimer: , partyEntranceTone: , directoryURIs: {directoryUri: ns0:XDirectoryUri[]}, allowCtiControlFlag: ns0:boolean, rejectAnonymousCall: ns0:boolean)
     ns0:XLineAppearanceAssociationForPresence(laapAssociate: ns0:XFkType, laapProductType: ns0:String128, laapDeviceName: ns0:String128, laapDirectory: ns0:String128, laapPartition: ns0:String128, laapDescription: ns0:String128)
     ns0:XLineAssociation(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}))
     ns0:XLineGroup(name: xsd:Name, distributionAlgorithm: , rnaReversionTimeOut: , huntAlgorithmNoAnswer: , huntAlgorithmBusy: , huntAlgorithmNotAvailable: , members: {member: ns0:XLineGroupMember[]}, autoLogOffHunt: ns0:boolean)
     ns0:XLineGroupMember(lineSelectionOrder: , directoryNumber: ns0:XDirn)
     ns0:XLoadInformation(xsd:string, special: ns0:boolean)
     ns0:XLocation(name: ns0:String50, kbits: , videoKbits: , relatedLocations: {relatedLocation: ns0:XLocationRelationship[]}, withinAudioBandwidth: , withinVideoBandwidth: , withinImmersiveKbits: , betweenLocations: {betweenLocation: ns0:XLocationBetween[]})
     ns0:XLocationBetween(locationName: ns0:XFkType, weight: , audioBandwidth: , videoBandwidth: , immersiveBandwidth: )
     ns0:XLocationRelationship(locationName: ns0:XFkType, rsvpSetting: )
     ns0:XMacAddress
     ns0:XMediaResourceGroup(name: ns0:String50, description: ns0:String50, multicast: ns0:boolean, members: {member: ns0:XMediaResourceGroupMember[]})
     ns0:XMediaResourceGroupMember(deviceName: ns0:XFkType)
     ns0:XMediaResourceList(name: ns0:String50, members: {member: ns0:XMediaResourceListMember[]})
     ns0:XMediaResourceListMember(mediaResourceGroupName: ns0:XFkType, order: )
     ns0:XMeetMe(pattern: xsd:string, description: xsd:string, routePartitionName: ns0:XFkType, minimumSecurityLevel: )
     ns0:XMessageWaiting(pattern: xsd:string, routePartitionName: ns0:XFkType, description: ns0:String128, messageWaitingIndicator: ns0:boolean, callingSearchSpaceName: ns0:XFkType)
     ns0:XMlppDomain(domainName: xsd:string, domainId: xsd:string)
     ns0:XMobileSmartClientProfile(name: xsd:string, mobileSmartClient: , enableSnrUri: xsd:string, enableCFAUri: xsd:string, handOffUri: xsd:string)
     ns0:XMobileVoiceAccess(pattern: xsd:string, routePartitionName: ns0:XFkType, locales: {locale: ns0:XMobileVoiceMember[]})
     ns0:XMobileVoiceMember(userLocale: , orderIndex: )
     ns0:XMobility(handoffNumber: xsd:string, handoffPartitionName: ns0:XFkType, DTMFNumber: xsd:string, DTMFPartitionName: ns0:XFkType)
     ns0:XMobilityProfile(name: ns0:String50, description: xsd:string, mobileClientCallingOption: , dvofServiceAccessNumber: xsd:string, dirn: ns0:XDirn, dvorCallerId: xsd:string)
     ns0:XMohAudioSource(sourceId: , name: ns0:String50, sourceFile: ns0:String255, multicast: ns0:boolean, repeat: ns0:boolean, mohFileStatus: , initialAnnouncement: ns0:XFkType, periodicAnnouncement: ns0:XFkType, periodicAnnouncementInterval: , localeAnnouncement: , initialAnnouncementPlayed: ns0:boolean)
     ns0:XMohServer(name: xsd:string, description: xsd:string, processNodeName: ns0:XFkType, devicePoolName: ns0:XFkType, locationName: ns0:XFkType, maxUnicastConnections: , maxMulticastConnections: , fixedAudioSourceDevice: xsd:string, runFlag: ns0:boolean, useTrustedRelayPoint: , isMultiCastEnabled: ns0:boolean, baseMulticastIpaddress: xsd:string, baseMulticastPort: , multicastIncrementOnIp: ns0:boolean, audioSources: {audioSource: {sourceId: , maxHops: }[]})
     ns0:XMtp(mtpType: , name: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, trustedRelayPoint: ns0:boolean)
     ns0:XNameAttribute(name: )
     ns0:XNormalizationScriptInfo(parameterName: ns0:String128, parameterValue: ns0:String128)
     ns0:XNotification(object: xsd:string, count: xsd:string, changedObject: xsd:string[])
     ns0:XNumplanIdentifier(directoryNumber: ns0:String255, routePartitionName: ns0:String50)
     ns0:XOSVersion(osName: ns0:String50, osVersion: ns0:String50)
     ns0:XParameterMember(parameter: , value: xsd:string, selectionOrder: )
     ns0:XPatternMember(description: xsd:string, dialParameters: {dialParameter: ns0:XParameterMember[]}, selectionOrder: )
     ns0:XPhone(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, versionStamp: ns0:String128, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, securityProfileName: ns0:XFkType, sipProfileName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, phoneTemplateName: ns0:XFkType, speeddials: {speeddial: ns0:XSpeeddial[]}, busyLampFields: {busyLampField: ns0:XBusyLampField[]}, primaryPhoneName: ns0:XFkType, ringSettingIdleBlfAudibleAlert: , ringSettingBusyBlfAudibleAlert: , blfDirectedCallParks: {blfDirectedCallPark: ns0:XBLFDirectedCallPark[]}, addOnModules: {addOnModule: ns0:XAddOnModule[]}, userLocale: , networkLocale: , idleTimeout: , authenticationUrl: xsd:string, directoryUrl: xsd:string, idleUrl: xsd:string, informationUrl: xsd:string, messagesUrl: xsd:string, proxyServerUrl: xsd:string, servicesUrl: xsd:string, services: {service: ns0:XSubscribedService[]}, softkeyTemplateName: ns0:XFkType, defaultProfileName: ns0:XFkType, enableExtensionMobility: ns0:boolean, singleButtonBarge: , joinAcrossLines: , builtInBridgeStatus: , callInfoPrivacyStatus: , hlogStatus: , ownerUserName: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , subscribeCallingSearchSpaceName: ns0:XFkType, rerouteCallingSearchSpaceName: ns0:XFkType, allowCtiControlFlag: ns0:boolean, presenceGroupName: ns0:XFkType, unattendedPort: ns0:boolean, requireDtmfReception: ns0:boolean, rfc2833Disabled: ns0:boolean, certificateOperation: , authenticationMode: , keySize: , authenticationString: ns0:String128, upgradeFinishTime: xsd:string, deviceMobilityMode: , remoteDevice: ns0:boolean, dndOption: , dndRingSetting: , dndStatus: ns0:boolean, isActive: ns0:boolean, isDualMode: ns0:boolean, mobilityUserIdName: ns0:XFkType, phoneSuite: , phoneServiceDisplay: , isProtected: ns0:boolean, mobileSmartClientProfileName: ns0:XFkType, mtpRequired: ns0:boolean, mtpPreferedCodec: , dialRulesName: ns0:XFkType, sshUserId: ns0:String50, sshPwd: ns0:String255, digestUser: ns0:String255, outboundCallRollover: , hotlineDevice: ns0:boolean, secureInformationUrl: ns0:String255, secureDirectoryUrl: ns0:String255, secureMessageUrl: ns0:String255, secureServicesUrl: ns0:String255, secureAuthenticationUrl: ns0:String255, secureIdleUrl: ns0:String255, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , featureControlPolicy: ns0:XFkType, deviceTrustMode: , earlyOfferSupportForVoiceCall: ns0:boolean, requireThirdPartyRegistration: ns0:boolean, blockIncomingCallsWhenRoaming: ns0:boolean, homeNetworkId: xsd:string, AllowPresentationSharingUsingBfcp: ns0:boolean, requireOffPremiseLocation: ns0:boolean, userlocale: , ctiid: xsd:positiveInteger)
     ns0:XPhoneButtonTemplate(name: xsd:string, basePhoneTemplateName: ns0:XFkType, buttons: {button: ns0:XButton[]})
     ns0:XPhoneLine(index: , label: ns0:String50, asciiLabel: ns0:String50, display: ns0:String50, dirn: ns0:XDirn, ringSetting: , consecutiveRingSetting: , ringSettingIdlePickupAlert: , ringSettingActivePickupAlert: , displayAscii: ns0:String50, e164Mask: ns0:String255, mwlPolicy: , maxNumCalls: , busyTrigger: , callInfoDisplay: {callerName: ns0:boolean, callerNumber: ns0:boolean, redirectedNumber: ns0:boolean, dialedNumber: ns0:boolean}, recordingProfileName: ns0:XFkType, monitoringCssName: ns0:XFkType, recordingFlag: , audibleMwi: , speedDial: xsd:string, partitionUsage: , associatedEndusers: {enduser: ns0:XEnduserMember[]}, missedCallLogging: ns0:boolean, ctiid: xsd:nonNegativeInteger)
     ns0:XPhoneNtp(ipAddress: xsd:string, description: xsd:string, mode: )
     ns0:XPhoneSecurityProfile(phoneType: , protocol: , name: xsd:string, description: xsd:string, deviceSecurityMode: , authenticationMode: , keySize: , tftpEncryptedConfig: ns0:boolean, nonceValidityTime: , transportType: , sipPhonePort: , enableDigestAuthentication: ns0:boolean, excludeDigestCredentials: ns0:boolean)
     ns0:XPhysicalLocation(name: xsd:string, description: xsd:string)
     ns0:XPickupGroupMember(priority: , ({pickupGroupName: ns0:XFkType} | {pickupDnAndPartition: {dnPattern: ns0:String255, routePartitionName: ns0:XFkType}}))
     ns0:XPolicyRelationship(geoLocationPolicyAName: ns0:XFkType, geoLocationDeviceA: , geoLocationPolicyBName: ns0:XFkType, geoLocationDeviceB: , logicalPartitionPolicy: )
     ns0:XPresenceGroup(name: xsd:string, description: xsd:string, presenceGroups: {presenceGroup: ns0:XPresenceGroupMember[]})
     ns0:XPresenceGroupMember(presenceGroupName: ns0:XFkType, subscriptionPermission: )
     ns0:XProcessNode(name: ns0:String255, description: ns0:String50, mac: ns0:XMacAddress, ipv6Name: xsd:string, lbmHubGroup: ns0:XFkType)
     ns0:XProcessNodeService(processNodeName: ns0:XFkType, service: , traceLevel: , userCategories: , enable: ns0:boolean, numFiles: , maxFileSize: )
     ns0:XRecordingProfile(name: ns0:String50, recordingCssName: ns0:XFkType, recorderDestination: xsd:string)
     ns0:XRegion(name: ns0:String50, relatedRegions: {relatedRegion: ns0:XRegionRelationship[]}, defaultCodec: )
     ns0:XRegionMatrix(bandwidth: , videoBandwidth: , lossyNetwork: , regionAName: ns0:XFkType, regionBName: ns0:XFkType, codecPreference: ns0:XFkType)
     ns0:XRegionRelationship(regionName: ns0:XFkType, bandwidth: , videoBandwidth: , lossyNetwork: , codecPreference: ns0:XFkType)
     ns0:XRemoteCluster(clusterId: ns0:String255, description: xsd:string, fullyQualifiedName: ns0:String50, emcc: ns0:XRemoteClusterMember, pstnAccess: ns0:XRemoteClusterMember, rsvpAgent: ns0:XRemoteClusterMember)
     ns0:XRemoteClusterMember(enabled: ns0:boolean)
     ns0:XRemoteDestination(name: xsd:string, destination: xsd:string, answerTooSoonTimer: , answerTooLateTimer: , delayBeforeRingingCell: , ({remoteDestinationProfileName: ns0:XFkType} | {dualModeDeviceName: ns0:XFkType}), isMobilePhone: ns0:boolean, enableMobileConnect: ns0:boolean, lineAssociations: {lineAssociation: ns0:XLineAssociation[]}, timeZone: , todAccessName: ns0:XFkType, mobileSmartClientName: ns0:XFkType, mobilityProfileName: ns0:XFkType)
     ns0:XRemoteDestinationProfile(name: xsd:string, description: xsd:string, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, callInfoPrivacyStatus: , userId: xsd:string, ignorePresentationIndicators: ns0:boolean, rerouteCallingSearchSpaceName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, userLocale: , primaryPhoneName: ns0:XFkType, dndOption: , dndStatus: ns0:boolean, mobileSmartClientProfileName: ns0:XFkType, ctiid: xsd:positiveInteger)
     ns0:XResourcePriorityNamespace(namespace: ns0:String10, description: xsd:string, isDefault: ns0:boolean)
     ns0:XResourcePriorityNamespaceList(name: ns0:String50, description: xsd:string, members: {member: ns0:XResourcePriorityNamespaceListMember[]})
     ns0:XResourcePriorityNamespaceListMember(resourcePriorityNamespaceName: ns0:XFkType, index: )
     ns0:XRouteFilter(name: xsd:string, dialPlanName: ns0:XFkType, members: {member: ns0:XRouteFilterMember[]})
     ns0:XRouteFilterMember(dialPlanTagName: ns0:XFkType, digits: xsd:nonNegativeInteger, operator: , priority: )
     ns0:XRouteGroup(name: xsd:Name, distributionAlgorithm: , members: {member: ns0:XRouteGroupMember[]})
     ns0:XRouteGroupMember(deviceSelectionOrder: , deviceName: ns0:XFkType, port: )
     ns0:XRouteList(name: xsd:string, description: xsd:string, callManagerGroupName: ns0:XFkType, routeListEnabled: ns0:boolean, members: {member: ns0:XRouteListMember[]}, runOnEveryNode: ns0:boolean)
     ns0:XRouteListMember(routeGroupName: ns0:XFkType, selectionOrder: , calledPartyTransformationMask: ns0:String50, callingPartyTransformationMask: ns0:String50, digitDiscardInstructionName: ns0:XFkType, callingPartyPrefixDigits: ns0:String50, prefixDigitsOut: ns0:String50, useFullyQualifiedCallingPartyNumber: , callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: )
     ns0:XRoutePartition(name: xsd:string, description: xsd:string, timeScheduleIdName: ns0:XFkType, useOriginatingDeviceTimeZone: ns0:boolean, timeZone: , partitionUsage: )
     ns0:XRoutePattern(pattern: xsd:string, description: xsd:string, routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, networkLocation: , patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , supportOverlapSending: ns0:boolean, patternPrecedence: , releaseClause: , allowDeviceOverride: ns0:boolean, provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , destination: {({gatewayName: ns0:XFkType} | {routeListName: ns0:XFkType})}, authorizationCodeRequired: ns0:boolean, authorizationLevelRequired: , clientCodeRequired: ns0:boolean, isdnNsfInfoElement: {cic: xsd:string, networkServiceProtocol: , networkService: , paramValue: xsd:string}, resourcePriorityNamespaceName: ns0:XFkType, routeClass: , enableDccEnforcement: ns0:boolean, blockedCallPercentage: xsd:string)
     ns0:XRoutePlan(dnOrPattern: ns0:String255, partition: ns0:XFkType, type: , routeDetail: xsd:string)
     ns0:XSIPNormalizationScript(name: xsd:string, description: xsd:string, content: xsd:string, scriptExecutionErrorRecoveryAction: , systemResourceErrorRecoveryAction: , maxMemoryThreshold: xsd:string, maxLuaInstructionsThreshold: xsd:string, isStandard: ns0:boolean)
     ns0:XSafCcdPurgeBlockLearnedRoutes(learnedPattern: ns0:String50, learnedPatternPrefix: ns0:String50, callControlIdentity: ns0:String50, ipAddress: ns0:String50)
     ns0:XSafForwarder(name: ns0:String255, description: ns0:String255, clientLabel: ns0:String255, safSecurityProfile: ns0:XFkType, ipAddress: ns0:String255, port: , safReconnectInterval: , safNotificationsWindowSize: , associatedCucms: {associatedCucm: ns0:XSafForwarderMember[]})
     ns0:XSafForwarderMember(callManagerName: ns0:XFkType)
     ns0:XSafSecurityProfile(name: ns0:String255, description: ns0:String255, userid: ns0:String50, password: ns0:String128)
     ns0:XServiceParameter(processNodeName: ns0:XFkType, name: xsd:string, service: , value: xsd:string, valueType: )
     ns0:XServiceProfile(name: xsd:string, description: xsd:string, isDefault: ns0:boolean, serviceProfileInfos: {serviceProfileInfo: ns0:XServiceProfileList[]})
     ns0:XServiceProfileList(profileName: xsd:string, primary: xsd:string, secondary: xsd:string, tertiary: xsd:string, serverCertificateVerification: , serviceProfileXml: ns0:XVendorConfig)
     ns0:XSipDialRules(dialPattern: , name: ns0:String50, description: xsd:string, patterns: {pattern: ns0:XPatternMember[]}, plars: {plar: ns0:XPatternMember[]})
     ns0:XSipProfile(name: ns0:String50, description: ns0:String100, defaultTelephonyEventPayloadType: , redirectByApplication: ns0:boolean, ringing180: ns0:boolean, timerInvite: , timerRegisterDelta: , timerRegister: , timerT1: , timerT2: , retryInvite: , retryNotInvite: , startMediaPort: , stopMediaPort: , callpickupUri: ns0:Name128, callpickupListUri: ns0:String128, callpickupGroupUri: ns0:String128, meetmeServiceUrl: ns0:String128, userInfo: , dtmfDbLevel: , callHoldRingback: , anonymousCallBlock: , callerIdBlock: , dndControl: , telnetLevel: , timerKeepAlive: , timerSubscribe: , timerSubscribeDelta: , maxRedirects: , timerOffHookToFirstDigit: , callForwardUri: ns0:String128, abbreviatedDialUri: ns0:String128, confJointEnable: ns0:boolean, rfc2543Hold: ns0:boolean, semiAttendedTransfer: ns0:boolean, enableVad: ns0:boolean, stutterMsgWaiting: ns0:boolean, callStats: ns0:boolean, t38Invite: ns0:boolean, rerouteIncomingRequest: , resourcePriorityNamespaceListName: ns0:XFkType, enableAnatForEarlyOfferCalls: ns0:boolean, rsvpOverSip: , fallbackToLocalRsvp: ns0:boolean, sipRe11XxEnabled: , gClear: , earlyOfferSupportForVoiceCall: ns0:boolean, sendRecvSDPInMidCallInvite: ns0:boolean, enableOutboundOptionsPing: ns0:boolean, optionsPingIntervalWhenStatusOK: , optionsPingIntervalWhenStatusNotOK: , deliverConferenceBridgeIdentifier: ns0:boolean, sipOptionsRetryCount: , sipOptionsRetryTimer: , sipBandwidthModifier: , enableUriOutdialSupport: ns0:boolean, userAgentServerHeaderInfo: , allowPresentationSharingUsingBfcp: ns0:boolean, scriptParameters: xsd:string, isScriptTraceEnabled: ns0:boolean, sipNormalizationScript: ns0:XFkType, allowiXApplicationMedia: ns0:boolean, dialStringInterpretation: , acceptAudioCodecPreferences: , mlppUserAuthorization: ns0:boolean, isAssuredSipServiceEnabled: ns0:boolean, resourcePriorityNamespace: ns0:XFkType, useCallerIdCallerNameinUriOutgoingRequest: ns0:boolean, callerIdDn: ns0:String50, callerName: ns0:String50, callingLineIdentification: , rejectAnonymousIncomingCall: ns0:boolean, rejectAnonymousOutgoingCall: ns0:boolean, videoCallTrafficClass: , inactiveSDPRequired: ns0:boolean)
     ns0:XSipRealm(realm: xsd:string, userid: xsd:string, digestCredentials: xsd:string)
     ns0:XSipRoutePattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , sipTrunkName: ns0:XFkType, dnOrPatternIpv6: xsd:string, routeOnUserPart: ns0:boolean, useCallerCss: ns0:boolean, domainRoutingCssName: ns0:XFkType)
     ns0:XSipTrunk(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, packetCaptureMode: , packetCaptureDuration: , loadInformation: ns0:XLoadInformation, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, securityProfileName: ns0:XFkType, sipProfileName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, unattendedPort: ns0:boolean, transmitUtf8: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, rerouteCallingSearchSpaceName: ns0:XFkType, referCallingSearchSpaceName: ns0:XFkType, mtpRequired: ns0:boolean, presenceGroupName: ns0:XFkType, unknownPrefix: ns0:String16, destinationAddress: ns0:String50, destAddrIsSrv: ns0:boolean, destinationport: , tkSipCodec: , sigDigits: {, enable: xsd:boolean}, connectedNamePresentation: , connectedPartyIdPresentation: , callingPartySelection: , callingname: , callingLineIdPresentation: , prefixDn: ns0:String50, callerName: ns0:String50, callerIdDn: ns0:String50, acceptInboundRdnis: ns0:boolean, acceptOutboundRdnis: ns0:boolean, srtpAllowed: ns0:boolean, srtpFallbackAllowed: ns0:boolean, isPaiEnabled: ns0:boolean, sipPrivacy: , isRpidEnabled: ns0:boolean, sipAssertedType: , destinationAddressIpv6: xsd:string, dtmfSignalingMethod: , routeClassSignalling: , sipTrunkType: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useImePublicIpPort: ns0:boolean, useDevicePoolCntdPnTransformationCss: ns0:boolean, cntdPnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, sipNormalizationScriptName: ns0:XFkType, runOnEveryNode: ns0:boolean, destinations: {destination: ns0:XSipTrunkDestination[]}, unknownStripDigits: xsd:nonNegativeInteger, cgpnTransformationUnknownCssName: ns0:XFkType, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , pathReplacementSupport: ns0:boolean, enableQsigUtf8: ns0:boolean, scriptParameters: xsd:string, scriptTraceEnabled: ns0:boolean, trunkTrafficSecure: , callingAndCalledPartyInfoFormat: , useCallerIdCallerNameinUriOutgoingRequest: ns0:boolean, requestUriDomainName: xsd:string, ctiid: xsd:positiveInteger)
     ns0:XSipTrunkDestination(addressIpv4: ns0:String255, addressIpv6: ns0:String255, port: , sortOrder: )
     ns0:XSipTrunkSecurityProfile(name: ns0:String64, description: ns0:String100, securityMode: , incomingTransport: , outgoingTransport: , digestAuthentication: ns0:boolean, noncePolicyTime: , x509SubjectName: ns0:String4096, incomingPort: , applLevelAuthentication: ns0:boolean, acceptPresenceSubscription: ns0:boolean, acceptOutOfDialogRefer: ns0:boolean, acceptUnsolicitedNotification: ns0:boolean, allowReplaceHeader: ns0:boolean, transmitSecurityStatus: ns0:boolean, sipV150OutboundSdpOfferFiltering: )
     ns0:XSoftKeyMember(positionId: xsd:nonNegativeInteger, softKeyName: xsd:string)
     ns0:XSoftKeyTemplate(name: ns0:String100, description: ns0:String100, baseSoftkeyTemplateName: ns0:XFkType, isDefault: ns0:boolean)
     ns0:XSpeeddial(dirn: ns0:String255, label: xsd:string, asciiLabel: xsd:string, index: )
     ns0:XSrst(name: xsd:string, port: , ipAddress: xsd:string, SipNetwork: xsd:string, SipPort: , isSecure: ns0:boolean)
     ns0:XSubscribedService(telecasterServiceName: ns0:XFkType, name: ns0:String100, url: xsd:string, urlButtonIndex: , urlLabel: ns0:String50, urlLabelAscii: ns0:String100, serviceNameAscii: ns0:String50)
     ns0:XSyslogConfig(AlarmLevelEvent: , RemoteServerName1: xsd:string, RemoteServerName2: xsd:string, RemoteServerName3: xsd:string, RemoteServerName4: xsd:string, RemoteServerName5: xsd:string, monitor: xsd:string, Enable: ns0:boolean)
     ns0:XSyslogConfiguration(serverName: xsd:string, serviceGroup: , service: xsd:string, alarmConfigs: ns0:XSyslogConfig, EndPointAlarm: ns0:boolean)
     ns0:XT1Port(portNumber: , attendantDn: ns0:String255, unattendedPort: ns0:boolean, callerIdDn: ns0:String255, callerIdEnable: ns0:boolean, callingPartySelection: , digitSending: , expectedDigits: , sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String255, presentationBit: , silenceSuppressionThreshold: , startDialProtocol: , trunk: , trunkDirection: , trunkLevel: , trunkPadRx: , trunkPadTx: , vendorConfig: ns0:XVendorConfig, callerId: , endpointId: ns0:String128, timer1: , timer2: , timer3: , timer4: , timer5: , timer6: )
     ns0:XTODAccessMember(timeScheduleName: ns0:XFkType, accessListName: ns0:XFkType)
     ns0:XTimePeriod(name: ns0:String50, startTime: , endTime: , startDay: , endDay: , monthOfYear: , dayOfMonth: , description: ns0:String255, isPublished: ns0:boolean, todOwnerIdName: ns0:XFkType, dayOfMonthEnd: , monthOfYearEnd: )
     ns0:XTimeSchedule(name: ns0:String50, members: {member: ns0:XTimeScheduleTimePeriod[]}, description: ns0:String255, isPublished: ns0:boolean, timeScheduleCategory: , todOwnerIdName: ns0:XFkType)
     ns0:XTimeScheduleTimePeriod(timePeriodName: ns0:XFkType)
     ns0:XTodAccess(name: ns0:String128, description: ns0:String255, ownerIdName: ns0:XFkType, members: {member: ns0:XTODAccessMember})
     ns0:XTransPattern(pattern: xsd:string, description: xsd:string, usage: , routePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , patternPrecedence: , provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , callingSearchSpaceName: ns0:XFkType, resourcePriorityNamespaceName: ns0:XFkType, routeNextHopByCgpn: ns0:boolean, routeClass: , callInterceptProfileName: ns0:XFkType, releaseClause: )
     ns0:XTranscoder(name: ns0:UniqueString255, description: ns0:String128, product: , subUnit: , devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, isTrustedRelayPoint: ns0:boolean, maximumCapacity: )
     ns0:XTransformationProfile(name: ns0:String50, description: xsd:string, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, nationalCssName: ns0:XFkType, internationalCssName: ns0:XFkType, unknownCssName: ns0:XFkType, subscriberCssName: ns0:XFkType)
     ns0:XTvsCertificate(subjectName: xsd:string, issuerName: xsd:string, serialNumber: xsd:string, timeToLive: xsd:integer, ipv4Address: xsd:string, ipv6Address: xsd:string, roles: {role: ns0:XCertificateRole[]}, services: {service: ns0:XTvsCertificateService[]})
     ns0:XTvsCertificateService(serviceName: )
     ns0:XUUID
     ns0:XUcService(serviceType: , productType: , name: ns0:String50, description: xsd:string, hostnameorip: ns0:String255, port: , protocol: , ucServiceXml: ns0:XVendorConfig)
     ns0:XUnitsToGateway(({domainName: xsd:string} | {gatewayUuid: ns0:XUUID}), units: {unit: {index: , product: , subunits: {subunit: {index: , product: , beginPort: }[]}}[]})
     ns0:XUser(firstName: xsd:string, middleName: xsd:string, lastName: xsd:string, userid: xsd:string, password: xsd:string, pin: xsd:string, telephoneNumber: ns0:String255, mailid: xsd:string, department: xsd:string, manager: xsd:string, userLocale: , associatedDevices: {device: ns0:String50[]}, primaryExtension: {pattern: ns0:String255, routePartitionName: ns0:String50}, associatedPc: xsd:string, associatedGroups: {userGroup: {name: ns0:String100, userRoles: {userRole: ns0:String100[]}}[]}, enableCti: ns0:boolean, digestCredentials: xsd:string, phoneProfiles: {profileName: ns0:XFkType[]}, defaultProfile: ns0:XFkType, presenceGroupName: ns0:XFkType, subscribeCallingSearchSpaceName: ns0:XFkType, enableMobility: ns0:boolean, enableMobileVoiceAccess: ns0:boolean, maxDeskPickupWaitTime: , remoteDestinationLimit: , passwordCredentials: {pwdCredPolicyName: ns0:XFkType, pwdCredUserCantChange: ns0:boolean, pwdCredUserMustChange: ns0:boolean, pwdCredDoesNotExpire: ns0:boolean, pwdCredTimeChanged: xsd:string, pwdCredTimeAdminLockout: xsd:string, pwdCredLockedByAdministrator: ns0:boolean}, pinCredentials: {pinCredPolicyName: ns0:XFkType, pinCredUserCantChange: ns0:boolean, pinCredUserMustChange: ns0:boolean, pinCredDoesNotExpire: ns0:boolean, pinCredTimeChanged: ns0:boolean, pinCredTimeAdminLockout: xsd:string, pinCredLockedByAdministrator: ns0:boolean}, primaryDevice: ns0:XFkType, enableEmcc: ns0:boolean, ctiControlledDeviceProfiles: {profileName: ns0:XFkType[]}, patternPrecedence: , numericUserId: xsd:string, mlppPassword: xsd:string, customUserFields: {({customUserField: ns0:XUserCustomUserField[]})}, homeCluster: ns0:boolean, imAndPresenceEnable: ns0:boolean, serviceProfile: ns0:XFkType, lineAppearanceAssociationForPresences: {lineAppearanceAssociationForPresence: ns0:XLineAppearanceAssociationForPresence[]}, directoryUri: xsd:string)
     ns0:XUserCustomUserField()
     ns0:XUserGroup(name: ns0:UniqueName128, members: {member: ns0:XUserGroupMember[]}, userRoles: {userRole: ns0:XUserGroupRoles[]})
     ns0:XUserGroupMember(userId: xsd:string)
     ns0:XUserGroupRoles(roleName: ns0:XFkType)
     ns0:XUserPhoneAssociation(userId: xsd:string, password: xsd:string, pin: , lastName: xsd:string, middleName: xsd:string, firstName: xsd:string, productType: , name: ns0:UniqueString128, dnCssName: ns0:XFkType, phoneCssName: ns0:XFkType, e164Mask: xsd:string, extension: xsd:string, routePartitionName: ns0:XFkType, voiceMailProfileName: ns0:XFkType, enableExtensionMobility: ns0:boolean, DirectoryURI: xsd:string, DirectoryNumberURIPartition: ns0:XFkType)
     ns0:XVendorConfig(_value_1: ANY[])
     ns0:XVg224(domainName: xsd:string, description: xsd:string, product: , protocol: , callManagerGroupName: ns0:XFkType, units: {unit: {index: , product: , subunits: {subunit: {index: , product: , beginPort: }}}}, vendorConfig: ns0:XVendorConfig, versionStamp: ns0:String128)
     ns0:XVmPilot(dirn: ns0:String50, cssName: ns0:XFkType, uuid: ns0:XUUID)
     ns0:XVoiceMailPilot(dirn: ns0:String255, description: ns0:String50, cssName: ns0:XFkType, isDefault: ns0:boolean)
     ns0:XVoiceMailPort(name: ns0:UniqueString128, description: ns0:String128, product: , class: , protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, preemption: , useTrustedRelayPoint: , securityProfileName: ns0:XFkType, geoLocationName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, dnPattern: xsd:string, routePartition: ns0:XFkType, dnCallingSearchSpace: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, callerIdDisplay: ns0:String128, callerIdDisplayAscii: ns0:String50, externalMask: xsd:string, ctiid: xsd:nonNegativeInteger)
     ns0:XVoiceMailProfile(name: ns0:String50, description: ns0:String50, isDefault: ns0:boolean, voiceMailboxMask: xsd:string, voiceMailPilot: ns0:XVmPilot)
     ns0:XVpnGateway(name: ns0:String50, description: xsd:string, url: ns0:String255, certificates: {certificate: ns0:XVpnGatewayMember[]})
     ns0:XVpnGatewayMember(issuerName: ns0:String255, serialNumber: ns0:String50)
     ns0:XVpnGroup(name: ns0:String50, description: xsd:string, vpnGateways: {vpnGateway: ns0:XVpnGroupMember[]})
     ns0:XVpnGroupMember(vpnGatewayName: ns0:XFkType, priority: )
     ns0:XVpnProfile(name: ns0:String50, description: xsd:string, autoNetworkDetection: ns0:boolean, mtu: , failToConnect: , clientAuthentication: , pwdPersistant: ns0:boolean, enableHostIdCheck: ns0:boolean)
     ns0:boolean
     ns0:removeApplicationToSoftkeyTemplateReq(softKeyTemplateName: ns0:XFkType, applicationName: ns0:String100, sequence: xsd:unsignedLong)
     xsd:ENTITIES
     xsd:ENTITY
     xsd:ID
     xsd:IDREF
     xsd:IDREFS
     xsd:NCName
     xsd:NMTOKEN
     xsd:NMTOKENS
     xsd:NOTATION
     xsd:Name
     xsd:QName
     xsd:anySimpleType
     xsd:anyURI
     xsd:base64Binary
     xsd:boolean
     xsd:byte
     xsd:date
     xsd:dateTime
     xsd:decimal
     xsd:double
     xsd:duration
     xsd:float
     xsd:gDay
     xsd:gMonth
     xsd:gMonthDay
     xsd:gYear
     xsd:gYearMonth
     xsd:hexBinary
     xsd:int
     xsd:integer
     xsd:language
     xsd:long
     xsd:negativeInteger
     xsd:nonNegativeInteger
     xsd:nonPositiveInteger
     xsd:normalizedString
     xsd:positiveInteger
     xsd:short
     xsd:string
     xsd:time
     xsd:token
     xsd:unsignedByte
     xsd:unsignedInt
     xsd:unsignedLong
     xsd:unsignedShort

Bindings:
     Soap11Binding: {http://www.cisco.com/AXLAPIService/}AXLAPIBinding

Service: AXLAPIService
     Port: AXLPort (Soap11Binding: {http://www.cisco.com/AXLAPIService/}AXLAPIBinding)
         Operations:
            addAarGroup(aarGroup: ns0:XAarGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addAnnouncement(announcement: ns0:XAnnouncement, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addAppServerInfo(appServerInfo: ns0:XAppServerInfo, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addAppUser(appUser: ns0:XAppUser, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addApplicationDialRules(applicationDialRules: ns0:XApplicationDialRules, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addApplicationServer(applicationServer: ns0:XApplicationServer, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addApplicationToSoftkeyTemplate(applicationToSoftkeyTemplate: ns0:XApplicationToSoftKeyTemplate, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addApplicationUserCapfProfile(applicationUserCapfProfile: ns0:XApplicationUserCapfProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addAudioCodecPreferenceList(audioCodecPreferenceList: ns0:XAudioCodecPreferenceList, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addBillingServer(billingServer: ns0:XBillingServer, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCallManagerGroup(callManagerGroup: ns0:XCallManagerGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCallPark(callPark: ns0:XCallPark, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCallPickupGroup(callPickupGroup: ns0:XCallPickupGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCalledPartyTracing(calledPartyTracing: ns0:XCalledPartyTracing, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCalledPartyTransformationPattern(calledPartyTransformationPattern: ns0:XCalledPartyTransformationPattern, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCallerFilterList(callerFilterList: ns0:XCallerFilterList, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCallingPartyTransformationPattern(callingPartyTransformationPattern: ns0:XCallingPartyTransformationPattern, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCcdAdvertisingService(ccdAdvertisingService: ns0:XCcdAdvertisingService, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCcdHostedDN(ccdHostedDN: ns0:XCcdHostedDN, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCcdHostedDNGroup(ccdHostedDNGroup: ns0:XCcdHostedDNGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCcdRequestingService(ccdRequestingService: ns0:XCcdRequestingService, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCiscoCatalyst600024PortFXSGateway(ciscoCatalyst600024PortFXSGateway: ns0:XCiscoCatalyst600024PortFXSGateway, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCiscoCatalyst6000E1VoIPGateway(ciscoCatalyst6000E1VoIPGateway: ns0:XCiscoCatalyst6000E1VoIPGateway, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCiscoCatalyst6000T1VoIPGatewayPri(ciscoCatalyst6000T1VoIPGatewayPri: ns0:XCiscoCatalyst6000T1VoIPGatewayPri, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCiscoCatalyst6000T1VoIPGatewayT1(ciscoCatalyst6000T1VoIPGatewayT1: ns0:XCiscoCatalyst6000T1VoIPGatewayT1, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCmcInfo(cmcInfo: ns0:XCmcInfo, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCommonDeviceConfig(commonDeviceConfig: ns0:XCommonDeviceConfig, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCommonPhoneConfig(commonPhoneConfig: ns0:XCommonPhoneConfig, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addConferenceBridge(conferenceBridge: ns0:XConferenceBridge, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCredentialPolicy(credentialPolicy: ns0:XCredentialPolicy, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCss(css: ns0:XCss, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCtiRoutePoint(ctiRoutePoint: ns0:XCtiRoutePoint, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCumaServerSecurityProfile(cumaServerSecurityProfile: ns0:XCumaServerSecurityProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addCustomUserField(customUserField: ns0:XCustomUserField, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addDateTimeGroup(dateTimeGroup: ns0:XDateTimeGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addDefaultDeviceProfile(defaultDeviceProfile: ns0:XDefaultDeviceProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addDeviceMobility(deviceMobility: ns0:XDeviceMobility, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addDeviceMobilityGroup(deviceMobilityGroup: ns0:XDeviceMobilityGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addDevicePool(devicePool: ns0:XDevicePool, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addDeviceProfile(deviceProfile: ns0:XDeviceProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addDhcpServer(dhcpServer: ns0:XDhcpServer, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addDhcpSubnet(dhcpSubnet: ns0:XDhcpSubnet, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addDirectedCallPark(directedCallPark: ns0:XDirectedCallPark, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addDirectoryLookupDialRules(directoryLookupDialRules: ns0:XDirectoryLookupDialRules, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addEndUserCapfProfile(endUserCapfProfile: ns0:XEndUserCapfProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addEnterpriseFeatureAccessConfiguration(enterpriseFeatureAccessConfiguration: ns0:XEnterpriseFeatureAccessConfiguration, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addExternalCallControlProfile(externalCallControlProfile: ns0:XExternalCallControlProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addFacInfo(facInfo: ns0:XFacInfo, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addFallbackProfile(fallbackProfile: ns0:XFallbackProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addFeatureControlPolicy(featureControlPolicy: ns0:XFeatureControlPolicy, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGatekeeper(gatekeeper: ns0:XGatekeeper, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGateway(gateway: ns0:XGateway, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGatewayEndpointAnalogAccess(gatewayEndpointAnalogAccess: ns0:XGatewayEndpointAnalogAccess, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGatewayEndpointDigitalAccessBri(gatewayEndpointDigitalAccessBri: ns0:XGatewayEndpointDigitalAccessBri, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGatewayEndpointDigitalAccessPri(gatewayEndpointDigitalAccessPri: ns0:XGatewayEndpointDigitalAccessPri, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGatewayEndpointDigitalAccessT1(gatewayEndpointDigitalAccessT1: ns0:XGatewayEndpointDigitalAccessT1, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGatewaySccpEndpoints(gatewaySccpEndpoints: ns0:XGatewaySccpEndpoints, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGatewaySubunits(gatewaySubunits: ns0:XGatewaySubunits, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGeoLocation(geoLocation: ns0:XGeoLocation, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGeoLocationFilter(geoLocationFilter: ns0:XGeoLocationFilter, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addGeoLocationPolicy(geoLocationPolicy: ns0:XGeoLocationPolicy, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addH323Gateway(h323Gateway: ns0:XH323Gateway, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addH323Phone(h323Phone: ns0:XH323Phone, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addH323Trunk(h323Trunk: ns0:XH323Trunk, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addHandoffConfiguration(handoffConfiguration: ns0:XHandoffConfiguration, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addHuntList(huntList: ns0:XHuntList, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addHuntPilot(huntPilot: ns0:XHuntPilot, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImeClient(imeClient: ns0:XImeClient, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImeE164Transformation(imeE164Transformation: ns0:XImeE164Transformation, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImeEnrolledPattern(imeEnrolledPattern: ns0:XImeEnrolledPattern, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImeEnrolledPatternGroup(imeEnrolledPatternGroup: ns0:XImeEnrolledPatternGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImeExclusionNumber(imeExclusionNumber: ns0:XImeExclusionNumber, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImeExclusionNumberGroup(imeExclusionNumberGroup: ns0:XImeExclusionNumberGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImeFirewall(imeFirewall: ns0:XImeFirewall, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImeRouteFilterElement(imeRouteFilterElement: ns0:XImeRouteFilterElement, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImeRouteFilterGroup(imeRouteFilterGroup: ns0:XImeRouteFilterGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImeServer(imeServer: ns0:XImeServer, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addImportedDirectoryUriCatalogs(importedDirectoryUriCatalogs: ns0:XImportedDirectoryUriCatalogs, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addIpPhoneServices(ipPhoneServices: ns0:XIpPhoneServices, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addIvrUserLocale(ivrUserLocale: ns0:XIvrUserLocale, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addLbmGroup(lbmGroup: ns0:XLbmGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addLbmHubGroup(lbmHubGroup: ns0:XLbmHubGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addLdapDirectory(ldapDirectory: ns0:XLdapDirectory, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addLdapFilter(ldapFilter: ns0:XLdapFilter, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addLdapSyncCustomField(ldapSyncCustomField: ns0:XLdapSyncCustomField, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addLine(line: ns0:XLine, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addLineGroup(lineGroup: ns0:XLineGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addLocation(location: ns0:XLocation, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addMediaResourceGroup(mediaResourceGroup: ns0:XMediaResourceGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addMediaResourceList(mediaResourceList: ns0:XMediaResourceList, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addMeetMe(meetMe: ns0:XMeetMe, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addMessageWaiting(messageWaiting: ns0:XMessageWaiting, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addMlppDomain(mlppDomain: ns0:XMlppDomain, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addMobileVoiceAccess(mobileVoiceAccess: ns0:XMobileVoiceAccess, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addMobility(mobility: ns0:XMobility, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addMobilityProfile(mobilityProfile: ns0:XMobilityProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addMtp(mtp: ns0:XMtp, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addPhone(phone: ns0:XPhone, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addPhoneButtonTemplate(phoneButtonTemplate: ns0:XPhoneButtonTemplate, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addPhoneNtp(phoneNtp: ns0:XPhoneNtp, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addPhoneSecurityProfile(phoneSecurityProfile: ns0:XPhoneSecurityProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addPhysicalLocation(physicalLocation: ns0:XPhysicalLocation, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addPresenceGroup(presenceGroup: ns0:XPresenceGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addProcessNode(processNode: ns0:XProcessNode, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addRecordingProfile(recordingProfile: ns0:XRecordingProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addRegion(region: ns0:XRegion, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addRemoteCluster(remoteCluster: ns0:XRemoteCluster, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addRemoteDestination(remoteDestination: ns0:XRemoteDestination, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addRemoteDestinationProfile(remoteDestinationProfile: ns0:XRemoteDestinationProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addResourcePriorityNamespace(resourcePriorityNamespace: ns0:XResourcePriorityNamespace, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addResourcePriorityNamespaceList(resourcePriorityNamespaceList: ns0:XResourcePriorityNamespaceList, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addRouteFilter(routeFilter: ns0:XRouteFilter, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addRouteGroup(routeGroup: ns0:XRouteGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addRouteList(routeList: ns0:XRouteList, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addRoutePartition(routePartition: ns0:XRoutePartition, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addRoutePattern(routePattern: ns0:XRoutePattern, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSIPNormalizationScript(sIPNormalizationScript: ns0:XSIPNormalizationScript, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSNMPCommunityString(CommunityString: ns0:RCommunityString, sequence: xsd:unsignedLong) -> message: ns0:String32, sequence: xsd:unsignedLong
            addSNMPUser(user: ns0:RSNMPUser, sequence: xsd:unsignedLong) -> message: ns0:String32, sequence: xsd:unsignedLong
            addSafCcdPurgeBlockLearnedRoutes(safCcdPurgeBlockLearnedRoutes: ns0:XSafCcdPurgeBlockLearnedRoutes, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSafForwarder(safForwarder: ns0:XSafForwarder, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSafSecurityProfile(safSecurityProfile: ns0:XSafSecurityProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addServiceProfile(serviceProfile: ns0:XServiceProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSipDialRules(sipDialRules: ns0:XSipDialRules, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSipProfile(sipProfile: ns0:XSipProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSipRealm(sipRealm: ns0:XSipRealm, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSipRoutePattern(sipRoutePattern: ns0:XSipRoutePattern, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSipTrunk(sipTrunk: ns0:XSipTrunk, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSipTrunkSecurityProfile(sipTrunkSecurityProfile: ns0:XSipTrunkSecurityProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSoftKeyTemplate(softKeyTemplate: ns0:XSoftKeyTemplate, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addSrst(srst: ns0:XSrst, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addTimePeriod(timePeriod: ns0:XTimePeriod, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addTimeSchedule(timeSchedule: ns0:XTimeSchedule, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addTodAccess(todAccess: ns0:XTodAccess, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addTransPattern(transPattern: ns0:XTransPattern, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addTranscoder(transcoder: ns0:XTranscoder, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addTransformationProfile(transformationProfile: ns0:XTransformationProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addUcService(ucService: ns0:XUcService, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addUnitsToGateway(unitsToGateway: ns0:XUnitsToGateway, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addUser(user: ns0:XUser, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addUserGroup(userGroup: ns0:XUserGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addUserPhoneAssociation(userPhoneAssociation: ns0:XUserPhoneAssociation, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addVg224(vg224: ns0:XVg224, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addVoiceMailPilot(voiceMailPilot: ns0:XVoiceMailPilot, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addVoiceMailPort(voiceMailPort: ns0:XVoiceMailPort, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addVoiceMailProfile(voiceMailProfile: ns0:XVoiceMailProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addVpnGateway(vpnGateway: ns0:XVpnGateway, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addVpnGroup(vpnGroup: ns0:XVpnGroup, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            addVpnProfile(vpnProfile: ns0:XVpnProfile, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            doAuthenticateUser(userid: xsd:string, ({password: xsd:string} | {pin: ns0:pin}), sequence: xsd:unsignedLong) -> return: {userAuthenticated: ns0:boolean, code: xsd:integer, daysToExpiry: xsd:integer}, sequence: xsd:unsignedLong
            doDeviceLogin(deviceName: ns0:XFkType, loginDuration: xsd:nonNegativeInteger, profileName: ns0:XFkType, userId: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            doDeviceLogout(deviceName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            doDeviceReset(deviceName: ns0:XFkType, ({isHardReset: ns0:boolean} | {deviceResetType: }), sequence: xsd:unsignedLong, isMGCP: ns0:boolean) -> return: ns0:return, sequence: xsd:unsignedLong
            doLdapSync(({name: xsd:string} | {uuid: ns0:XUUID}), sync: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            doNotificationAck(registrationId: ns0:String32, object: ns0:String32, count: ns0:String32, sequence: xsd:unsignedLong) -> message: ns0:String128, sequence: xsd:unsignedLong
            doNotificationObject(registrationId: ns0:String32, operation: ns0:String32, object: ns0:String255, sequence: xsd:unsignedLong) -> message: ns0:String32, sequence: xsd:unsignedLong
            doNotificationRegister(networkId: ns0:String32, clientName: ns0:String32, sequence: xsd:unsignedLong) -> registrationId: ns0:String32, pollingInterval: ns0:String32, pollingStartTime: ns0:String32, sequence: xsd:unsignedLong
            doNotificationUnregister(registrationId: ns0:String32, sequence: xsd:unsignedLong) -> message: ns0:String128, sequence: xsd:unsignedLong
            doUpdateRemoteCluster(server: ns0:String32, clusterId: ns0:String32, sequence: xsd:unsignedLong) -> value: ns0:String32, sequence: xsd:unsignedLong
            executeSQLQuery(sql: xsd:string, sequence: xsd:unsignedLong) -> return: {row: None[]}, sequence: xsd:unsignedLong
            executeSQLUpdate(sql: xsd:string, sequence: xsd:unsignedLong) -> return: {rowsUpdated: xsd:integer}, sequence: xsd:unsignedLong
            getAarGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RAarGroup, sequence: xsd:unsignedLong) -> return: {aarGroup: ns0:RAarGroup}, sequence: xsd:unsignedLong
            getAnnouncement(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RAnnouncement, sequence: xsd:unsignedLong) -> return: {announcement: ns0:RAnnouncement}, sequence: xsd:unsignedLong
            getAnnunciator(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RAnnunciator, sequence: xsd:unsignedLong) -> return: {annunciator: ns0:RAnnunciator}, sequence: xsd:unsignedLong
            getAppServerInfo(uuid: ns0:XUUID, returnedTags: ns0:RAppServerInfo, sequence: xsd:unsignedLong) -> return: {appServerInfo: ns0:RAppServerInfo}, sequence: xsd:unsignedLong
            getAppUser(({userid: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RAppUser, sequence: xsd:unsignedLong) -> return: {appUser: ns0:RAppUser}, sequence: xsd:unsignedLong
            getApplicationDialRules(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RApplicationDialRules, sequence: xsd:unsignedLong) -> return: {applicationDialRules: ns0:RApplicationDialRules}, sequence: xsd:unsignedLong
            getApplicationServer(({uuid: ns0:XUUID}), returnedTags: ns0:RApplicationServer, sequence: xsd:unsignedLong) -> return: {applicationServer: ns0:RApplicationServer}, sequence: xsd:unsignedLong
            getApplicationUserCapfProfile(({instanceId: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RApplicationUserCapfProfile, sequence: xsd:unsignedLong) -> return: {applicationUserCapfProfile: ns0:RApplicationUserCapfProfile}, sequence: xsd:unsignedLong
            getAudioCodecPreferenceList(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RAudioCodecPreferenceList, sequence: xsd:unsignedLong) -> return: {audioCodecPreferenceList: ns0:RAudioCodecPreferenceList}, sequence: xsd:unsignedLong
            getBillingServer(uuid: ns0:XUUID, returnedTags: ns0:RBillingServer, sequence: xsd:unsignedLong) -> return: {billingServer: ns0:RBillingServer}, sequence: xsd:unsignedLong
            getCCMVersion(processNodeName: ns0:String255) -> return: {componentVersion: {version: ns0:String50}}, sequence: xsd:unsignedLong
            getCallManager(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCallManager, sequence: xsd:unsignedLong) -> return: {callManager: ns0:RCallManager}, sequence: xsd:unsignedLong
            getCallManagerGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCallManagerGroup, sequence: xsd:unsignedLong) -> return: {callManagerGroup: ns0:RCallManagerGroup}, sequence: xsd:unsignedLong
            getCallPark(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RCallPark, sequence: xsd:unsignedLong) -> return: {callPark: ns0:RCallPark}, sequence: xsd:unsignedLong
            getCallPickupGroup(({uuid: ns0:XUUID} | {name: xsd:Name} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RCallPickupGroup, sequence: xsd:unsignedLong) -> return: {callPickupGroup: ns0:RCallPickupGroup}, sequence: xsd:unsignedLong
            getCalledPartyTransformationPattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), returnedTags: ns0:RCalledPartyTransformationPattern, sequence: xsd:unsignedLong) -> return: {calledPartyTransformationPattern: ns0:RCalledPartyTransformationPattern}, sequence: xsd:unsignedLong
            getCallerFilterList(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCallerFilterList, sequence: xsd:unsignedLong) -> return: {callerFilterList: ns0:RCallerFilterList}, sequence: xsd:unsignedLong
            getCallingPartyTransformationPattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), returnedTags: ns0:RCallingPartyTransformationPattern, sequence: xsd:unsignedLong) -> return: {callingPartyTransformationPattern: ns0:RCallingPartyTransformationPattern}, sequence: xsd:unsignedLong
            getCcdAdvertisingService(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCcdAdvertisingService, sequence: xsd:unsignedLong) -> return: {ccdAdvertisingService: ns0:RCcdAdvertisingService}, sequence: xsd:unsignedLong
            getCcdHostedDN(({hostedPattern: ns0:String50} | {uuid: ns0:XUUID}), returnedTags: ns0:RCcdHostedDN, sequence: xsd:unsignedLong) -> return: {ccdHostedDN: ns0:RCcdHostedDN}, sequence: xsd:unsignedLong
            getCcdHostedDNGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCcdHostedDNGroup, sequence: xsd:unsignedLong) -> return: {ccdHostedDNGroup: ns0:RCcdHostedDNGroup}, sequence: xsd:unsignedLong
            getCcdRequestingService(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCcdRequestingService, sequence: xsd:unsignedLong) -> return: {ccdRequestingService: ns0:RCcdRequestingService}, sequence: xsd:unsignedLong
            getCiscoCatalyst600024PortFXSGateway(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCiscoCatalyst600024PortFXSGateway, sequence: xsd:unsignedLong) -> return: {ciscoCatalyst600024PortFXSGateway: ns0:RCiscoCatalyst600024PortFXSGateway}, sequence: xsd:unsignedLong
            getCiscoCatalyst6000E1VoIPGateway(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCiscoCatalyst6000E1VoIPGateway, sequence: xsd:unsignedLong) -> return: {ciscoCatalyst6000E1VoIPGateway: ns0:RCiscoCatalyst6000E1VoIPGateway}, sequence: xsd:unsignedLong
            getCiscoCatalyst6000T1VoIPGatewayPri(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCiscoCatalyst6000T1VoIPGatewayPri, sequence: xsd:unsignedLong) -> return: {ciscoCatalyst6000T1VoIPGatewayPri: ns0:RCiscoCatalyst6000T1VoIPGatewayPri}, sequence: xsd:unsignedLong
            getCiscoCatalyst6000T1VoIPGatewayT1(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCiscoCatalyst6000T1VoIPGatewayT1, sequence: xsd:unsignedLong) -> return: {ciscoCatalyst6000T1VoIPGatewayT1: ns0:RCiscoCatalyst6000T1VoIPGatewayT1}, sequence: xsd:unsignedLong
            getCmcInfo(({code: ns0:String16} | {uuid: ns0:XUUID}), returnedTags: ns0:RCmcInfo, sequence: xsd:unsignedLong) -> return: {cmcInfo: ns0:RCmcInfo}, sequence: xsd:unsignedLong
            getCommonDeviceConfig(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCommonDeviceConfig, sequence: xsd:unsignedLong) -> return: {commonDeviceConfig: ns0:RCommonDeviceConfig}, sequence: xsd:unsignedLong
            getCommonPhoneConfig(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCommonPhoneConfig, sequence: xsd:unsignedLong) -> return: {commonPhoneConfig: ns0:RCommonPhoneConfig}, sequence: xsd:unsignedLong
            getConferenceBridge(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RConferenceBridge, sequence: xsd:unsignedLong) -> return: {conferenceBridge: ns0:RConferenceBridge}, sequence: xsd:unsignedLong
            getCredentialPolicy(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCredentialPolicy, sequence: xsd:unsignedLong) -> return: {credentialPolicy: ns0:RCredentialPolicy}, sequence: xsd:unsignedLong
            getCss(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCss, sequence: xsd:unsignedLong) -> return: {css: ns0:RCss}, sequence: xsd:unsignedLong
            getCtiRoutePoint(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCtiRoutePoint, sequence: xsd:unsignedLong) -> return: {ctiRoutePoint: ns0:RCtiRoutePoint}, sequence: xsd:unsignedLong
            getCumaServerSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RCumaServerSecurityProfile, sequence: xsd:unsignedLong) -> return: {cumaServerSecurityProfile: ns0:RCumaServerSecurityProfile}, sequence: xsd:unsignedLong
            getCustomUserField(({field: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RCustomUserField, sequence: xsd:unsignedLong) -> return: {customUserField: ns0:RCustomUserField}, sequence: xsd:unsignedLong
            getDateTimeGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDateTimeGroup, sequence: xsd:unsignedLong) -> return: {dateTimeGroup: ns0:RDateTimeGroup}, sequence: xsd:unsignedLong
            getDdi(({uuid: ns0:XUUID} | {name: ns0:String50, dialPlanName: ns0:XFkType}), returnedTags: ns0:RDdi, sequence: xsd:unsignedLong) -> return: {ddi: ns0:RDdi}, sequence: xsd:unsignedLong
            getDefaultDeviceProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDefaultDeviceProfile, sequence: xsd:unsignedLong) -> return: {defaultDeviceProfile: ns0:RDefaultDeviceProfile}, sequence: xsd:unsignedLong
            getDeviceMobility(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDeviceMobility, sequence: xsd:unsignedLong) -> return: {deviceMobility: ns0:RDeviceMobility}, sequence: xsd:unsignedLong
            getDeviceMobilityGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDeviceMobilityGroup, sequence: xsd:unsignedLong) -> return: {deviceMobilityGroup: ns0:RDeviceMobilityGroup}, sequence: xsd:unsignedLong
            getDevicePool(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDevicePool, sequence: xsd:unsignedLong) -> return: {devicePool: ns0:RDevicePool}, sequence: xsd:unsignedLong
            getDeviceProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDeviceProfile, sequence: xsd:unsignedLong) -> return: {deviceProfile: ns0:RDeviceProfile}, sequence: xsd:unsignedLong
            getDhcpServer(({processNodeName: ns0:XFkType} | {uuid: ns0:XUUID}), returnedTags: ns0:RDhcpServer, sequence: xsd:unsignedLong) -> return: {dhcpServer: ns0:RDhcpServer}, sequence: xsd:unsignedLong
            getDhcpSubnet(({uuid: ns0:XUUID} | {dhcpServerName: ns0:XFkType, subnetIpAddress: xsd:string}), returnedTags: ns0:RDhcpSubnet, sequence: xsd:unsignedLong) -> return: {dhcpSubnet: ns0:RDhcpSubnet}, sequence: xsd:unsignedLong
            getDialPlan(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDialPlan, sequence: xsd:unsignedLong) -> return: {dialPlan: ns0:RDialPlan}, sequence: xsd:unsignedLong
            getDialPlanTag(({uuid: ns0:XUUID} | {name: ns0:String50, dialPlanName: ns0:XFkType}), returnedTags: ns0:RDialPlanTag, sequence: xsd:unsignedLong) -> return: {dialPlanTag: ns0:RDialPlanTag}, sequence: xsd:unsignedLong
            getDirectedCallPark(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RDirectedCallPark, sequence: xsd:unsignedLong) -> return: {directedCallPark: ns0:RDirectedCallPark}, sequence: xsd:unsignedLong
            getDirectoryLookupDialRules(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RDirectoryLookupDialRules, sequence: xsd:unsignedLong) -> return: {directoryLookupDialRules: ns0:RDirectoryLookupDialRules}, sequence: xsd:unsignedLong
            getEmccFeatureConfig(({parameterName: ns0:String50} | {uuid: ns0:XUUID}), returnedTags: ns0:REmccFeatureConfig, sequence: xsd:unsignedLong) -> return: {emccFeatureConfig: ns0:REmccFeatureConfig}, sequence: xsd:unsignedLong
            getEndUserCapfProfile(({instanceId: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:REndUserCapfProfile, sequence: xsd:unsignedLong) -> return: {endUserCapfProfile: ns0:REndUserCapfProfile}, sequence: xsd:unsignedLong
            getEnterpriseFeatureAccessConfiguration(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), returnedTags: ns0:REnterpriseFeatureAccessConfiguration, sequence: xsd:unsignedLong) -> return: {enterpriseFeatureAccessConfiguration: ns0:REnterpriseFeatureAccessConfiguration}, sequence: xsd:unsignedLong
            getEnterprisePhoneConfig() -> return: {enterprisePhoneConfig: ns0:XEnterprisePhoneConfig}, sequence: xsd:unsignedLong
            getExternalCallControlProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RExternalCallControlProfile, sequence: xsd:unsignedLong) -> return: {externalCallControlProfile: ns0:RExternalCallControlProfile}, sequence: xsd:unsignedLong
            getFacInfo(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RFacInfo, sequence: xsd:unsignedLong) -> return: {facInfo: ns0:RFacInfo}, sequence: xsd:unsignedLong
            getFallbackFeatureConfig() -> return: {fallbackFeatureConfig: ns0:RFallbackFeatureConfig}, sequence: xsd:unsignedLong
            getFallbackProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RFallbackProfile, sequence: xsd:unsignedLong) -> return: {fallbackProfile: ns0:RFallbackProfile}, sequence: xsd:unsignedLong
            getFeatureControlPolicy(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RFeatureControlPolicy, sequence: xsd:unsignedLong) -> return: {featureControlPolicy: ns0:RFeatureControlPolicy}, sequence: xsd:unsignedLong
            getFixedMohAudioSource(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RFixedMohAudioSource, sequence: xsd:unsignedLong) -> return: {fixedMohAudioSource: ns0:RFixedMohAudioSource}, sequence: xsd:unsignedLong
            getGatekeeper(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatekeeper, sequence: xsd:unsignedLong) -> return: {gatekeeper: ns0:RGatekeeper}, sequence: xsd:unsignedLong
            getGateway(({domainName: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RGateway, sequence: xsd:unsignedLong) -> return: {gateway: ns0:RGateway}, sequence: xsd:unsignedLong
            getGatewayEndpointAnalogAccess(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatewayEndpointAnalogAccess, sequence: xsd:unsignedLong) -> return: {gatewayEndpointAnalogAccess: ns0:RGatewayEndpointAnalogAccess}, sequence: xsd:unsignedLong
            getGatewayEndpointDigitalAccessBri(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatewayEndpointDigitalAccessBri, sequence: xsd:unsignedLong) -> return: {gatewayEndpointDigitalAccessBri: ns0:RGatewayEndpointDigitalAccessBri}, sequence: xsd:unsignedLong
            getGatewayEndpointDigitalAccessPri(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatewayEndpointDigitalAccessPri, sequence: xsd:unsignedLong) -> return: {gatewayEndpointDigitalAccessPri: ns0:RGatewayEndpointDigitalAccessPri}, sequence: xsd:unsignedLong
            getGatewayEndpointDigitalAccessT1(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatewayEndpointDigitalAccessT1, sequence: xsd:unsignedLong) -> return: {gatewayEndpointDigitalAccessT1: ns0:RGatewayEndpointDigitalAccessT1}, sequence: xsd:unsignedLong
            getGatewaySccpEndpoints(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGatewaySccpEndpoints, sequence: xsd:unsignedLong) -> return: {gatewaySccpEndpoints: ns0:RGatewaySccpEndpoints}, sequence: xsd:unsignedLong
            getGeoLocation(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGeoLocation, sequence: xsd:unsignedLong) -> return: {geoLocation: ns0:RGeoLocation}, sequence: xsd:unsignedLong
            getGeoLocationFilter(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGeoLocationFilter, sequence: xsd:unsignedLong) -> return: {geoLocationFilter: ns0:RGeoLocationFilter}, sequence: xsd:unsignedLong
            getGeoLocationPolicy(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RGeoLocationPolicy, sequence: xsd:unsignedLong) -> return: {geoLocationPolicy: ns0:RGeoLocationPolicy}, sequence: xsd:unsignedLong
            getH323Gateway(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RH323Gateway, sequence: xsd:unsignedLong) -> return: {h323Gateway: ns0:RH323Gateway}, sequence: xsd:unsignedLong
            getH323Phone(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RH323Phone, sequence: xsd:unsignedLong) -> return: {h323Phone: ns0:RH323Phone}, sequence: xsd:unsignedLong
            getH323Trunk(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RH323Trunk, sequence: xsd:unsignedLong) -> return: {h323Trunk: ns0:RH323Trunk}, sequence: xsd:unsignedLong
            getHandoffConfiguration(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), returnedTags: ns0:RHandoffConfiguration, sequence: xsd:unsignedLong) -> return: {handoffConfiguration: ns0:RHandoffConfiguration}, sequence: xsd:unsignedLong
            getHuntList(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RHuntList, sequence: xsd:unsignedLong) -> return: {huntList: ns0:RHuntList}, sequence: xsd:unsignedLong
            getHuntPilot(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RHuntPilot, sequence: xsd:unsignedLong) -> return: {huntPilot: ns0:RHuntPilot}, sequence: xsd:unsignedLong
            getIlsConfig(clusterId: xsd:string, returnedTags: ns0:NewIlsConfig) -> return: {ilsConfig: ns0:NewIlsConfig}, sequence: xsd:unsignedLong
            getImeClient(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeClient, sequence: xsd:unsignedLong) -> return: {imeClient: ns0:RImeClient}, sequence: xsd:unsignedLong
            getImeE164Transformation(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeE164Transformation, sequence: xsd:unsignedLong) -> return: {imeE164Transformation: ns0:RImeE164Transformation}, sequence: xsd:unsignedLong
            getImeEnrolledPattern(({pattern: ns0:String16} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeEnrolledPattern, sequence: xsd:unsignedLong) -> return: {imeEnrolledPattern: ns0:RImeEnrolledPattern}, sequence: xsd:unsignedLong
            getImeEnrolledPatternGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeEnrolledPatternGroup, sequence: xsd:unsignedLong) -> return: {imeEnrolledPatternGroup: ns0:RImeEnrolledPatternGroup}, sequence: xsd:unsignedLong
            getImeExclusionNumber(({pattern: ns0:String16} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeExclusionNumber, sequence: xsd:unsignedLong) -> return: {imeExclusionNumber: ns0:RImeExclusionNumber}, sequence: xsd:unsignedLong
            getImeExclusionNumberGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeExclusionNumberGroup, sequence: xsd:unsignedLong) -> return: {imeExclusionNumberGroup: ns0:RImeExclusionNumberGroup}, sequence: xsd:unsignedLong
            getImeFeatureConfig() -> return: {imeFeatureConfig: ns0:RImeFeatureConfig}, sequence: xsd:unsignedLong
            getImeFirewall(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeFirewall, sequence: xsd:unsignedLong) -> return: {imeFirewall: ns0:RImeFirewall}, sequence: xsd:unsignedLong
            getImeLearnedRoutes(({uuid: ns0:XUUID} | {e164Did: ns0:String32}), returnedTags: ns0:RImeLearnedRoutes, sequence: xsd:unsignedLong) -> return: {imeLearnedRoutes: ns0:RImeLearnedRoutes}, sequence: xsd:unsignedLong
            getImeRouteFilterElement(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeRouteFilterElement, sequence: xsd:unsignedLong) -> return: {imeRouteFilterElement: ns0:RImeRouteFilterElement}, sequence: xsd:unsignedLong
            getImeRouteFilterGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeRouteFilterGroup, sequence: xsd:unsignedLong) -> return: {imeRouteFilterGroup: ns0:RImeRouteFilterGroup}, sequence: xsd:unsignedLong
            getImeServer(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImeServer, sequence: xsd:unsignedLong) -> return: {imeServer: ns0:RImeServer}, sequence: xsd:unsignedLong
            getImportedDirectoryUriCatalogs(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RImportedDirectoryUriCatalogs, sequence: xsd:unsignedLong) -> return: {importedDirectoryUriCatalogs: ns0:RImportedDirectoryUriCatalogs}, sequence: xsd:unsignedLong
            getInterClusterServiceProfile(({interClusterService: } | {uuid: ns0:XUUID}), returnedTags: ns0:RInterClusterServiceProfile, sequence: xsd:unsignedLong) -> return: {interClusterServiceProfile: ns0:RInterClusterServiceProfile}, sequence: xsd:unsignedLong
            getIpPhoneServices(({serviceName: ns0:UniqueString128} | {uuid: ns0:XUUID}), returnedTags: ns0:RIpPhoneServices, sequence: xsd:unsignedLong) -> return: {ipPhoneServices: ns0:RIpPhoneServices}, sequence: xsd:unsignedLong
            getIvrUserLocale(({userLocale: } | {uuid: ns0:XUUID}), returnedTags: ns0:RIvrUserLocale, sequence: xsd:unsignedLong) -> return: {ivrUserLocale: ns0:RIvrUserLocale}, sequence: xsd:unsignedLong
            getLbmGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLbmGroup, sequence: xsd:unsignedLong) -> return: {lbmGroup: ns0:RLbmGroup}, sequence: xsd:unsignedLong
            getLbmHubGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLbmHubGroup, sequence: xsd:unsignedLong) -> return: {lbmHubGroup: ns0:RLbmHubGroup}, sequence: xsd:unsignedLong
            getLdapAuthentication() -> return: {ldapAuthentication: ns0:XLdapAuthentication}, sequence: xsd:unsignedLong
            getLdapDirectory(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLdapDirectory, sequence: xsd:unsignedLong) -> return: {ldapDirectory: ns0:RLdapDirectory}, sequence: xsd:unsignedLong
            getLdapFilter(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLdapFilter, sequence: xsd:unsignedLong) -> return: {ldapFilter: ns0:RLdapFilter}, sequence: xsd:unsignedLong
            getLdapSyncCustomField(({uuid: ns0:XUUID} | {ldapConfigurationName: xsd:string, customUserField: xsd:string}), returnedTags: ns0:RLdapSyncCustomField, sequence: xsd:unsignedLong) -> return: {ldapSyncCustomField: ns0:RLdapSyncCustomField}, sequence: xsd:unsignedLong
            getLdapSyncStatus(({name: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            getLdapSystem() -> return: {ldapSystem: ns0:XLdapSystem}, sequence: xsd:unsignedLong
            getLicenseCapabilities(({userid: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RLicenseCapabilities, sequence: xsd:unsignedLong) -> return: {licenseCapabilities: ns0:RLicenseCapabilities}, sequence: xsd:unsignedLong
            getLicenseUnitReport() -> return: {licenseUnitReport: ns0:XLicenseUnitReport}, sequence: xsd:unsignedLong
            getLine(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RLine, sequence: xsd:unsignedLong) -> return: {line: ns0:RLine}, sequence: xsd:unsignedLong
            getLineGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLineGroup, sequence: xsd:unsignedLong) -> return: {lineGroup: ns0:RLineGroup}, sequence: xsd:unsignedLong
            getLocation(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RLocation, sequence: xsd:unsignedLong) -> return: {location: ns0:RLocation}, sequence: xsd:unsignedLong
            getMediaResourceGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMediaResourceGroup, sequence: xsd:unsignedLong) -> return: {mediaResourceGroup: ns0:RMediaResourceGroup}, sequence: xsd:unsignedLong
            getMediaResourceList(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMediaResourceList, sequence: xsd:unsignedLong) -> return: {mediaResourceList: ns0:RMediaResourceList}, sequence: xsd:unsignedLong
            getMeetMe(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RMeetMe, sequence: xsd:unsignedLong) -> return: {meetMe: ns0:RMeetMe}, sequence: xsd:unsignedLong
            getMessageWaiting(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RMessageWaiting, sequence: xsd:unsignedLong) -> return: {messageWaiting: ns0:RMessageWaiting}, sequence: xsd:unsignedLong
            getMlppDomain(({domainName: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RMlppDomain, sequence: xsd:unsignedLong) -> return: {mlppDomain: ns0:RMlppDomain}, sequence: xsd:unsignedLong
            getMobileSmartClientProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMobileSmartClientProfile, sequence: xsd:unsignedLong) -> return: {mobileSmartClientProfile: ns0:RMobileSmartClientProfile}, sequence: xsd:unsignedLong
            getMobileVoiceAccess(({pattern: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RMobileVoiceAccess, sequence: xsd:unsignedLong) -> return: {mobileVoiceAccess: ns0:RMobileVoiceAccess}, sequence: xsd:unsignedLong
            getMobility(handoffNumber: ns0:XFkType, DTMFNumber: ns0:XFkType, returnedTags: ns0:RMobility) -> return: {mobility: ns0:RMobility}, sequence: xsd:unsignedLong
            getMobilityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMobilityProfile, sequence: xsd:unsignedLong) -> return: {mobilityProfile: ns0:RMobilityProfile}, sequence: xsd:unsignedLong
            getMohAudioSource(({sourceId: } | {uuid: ns0:XUUID}), returnedTags: ns0:RMohAudioSource, sequence: xsd:unsignedLong) -> return: {mohAudioSource: ns0:RMohAudioSource}, sequence: xsd:unsignedLong
            getMohServer(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMohServer, sequence: xsd:unsignedLong) -> return: {mohServer: ns0:RMohServer}, sequence: xsd:unsignedLong
            getMtp(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RMtp, sequence: xsd:unsignedLong) -> return: {mtp: ns0:RMtp}, sequence: xsd:unsignedLong
            getNotificationChanges(registrationId: ns0:String32, returnedTags: ns0:RNotificationChange, sequence: xsd:unsignedLong) -> changeNotification: ns0:RNotificationChange, pollingInterval: ns0:String32, pollingStartTime: ns0:String32, sequence: xsd:unsignedLong
            getNotificationStatus(registrationId: ns0:String32, sequence: xsd:unsignedLong) -> objectList: ns0:RObjectList[], pollingInterval: ns0:String128, pollingStartTime: ns0:String128, sequence: xsd:unsignedLong
            getNumDevices(class: , sequence: xsd:unsignedLong) -> return: {xsd:nonNegativeInteger}, sequence: xsd:unsignedLong, class: ns0:Name128
            getOSVersion() -> return: {os: ns0:XOSVersion}, sequence: xsd:unsignedLong
            getPhone(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RPhone, sequence: xsd:unsignedLong) -> return: {phone: ns0:RPhone}, sequence: xsd:unsignedLong
            getPhoneButtonTemplate(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RPhoneButtonTemplate, sequence: xsd:unsignedLong) -> return: {phoneButtonTemplate: ns0:RPhoneButtonTemplate}, sequence: xsd:unsignedLong
            getPhoneNtp(({ipAddress: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RPhoneNtp, sequence: xsd:unsignedLong) -> return: {phoneNtp: ns0:RPhoneNtp}, sequence: xsd:unsignedLong
            getPhoneSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RPhoneSecurityProfile, sequence: xsd:unsignedLong) -> return: {phoneSecurityProfile: ns0:RPhoneSecurityProfile}, sequence: xsd:unsignedLong
            getPhoneTypeDisplayInstance(productName: ns0:String32, protocol: ns0:String32, sequence: xsd:unsignedLong) -> displayInstance: ns0:String32, sequence: xsd:unsignedLong
            getPhysicalLocation(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RPhysicalLocation, sequence: xsd:unsignedLong) -> return: {physicalLocation: ns0:RPhysicalLocation}, sequence: xsd:unsignedLong
            getPresenceGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RPresenceGroup, sequence: xsd:unsignedLong) -> return: {presenceGroup: ns0:RPresenceGroup}, sequence: xsd:unsignedLong
            getProcessNode(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RProcessNode, sequence: xsd:unsignedLong) -> return: {processNode: ns0:RProcessNode}, sequence: xsd:unsignedLong
            getProcessNodeService(({uuid: ns0:XUUID} | {processNodeName: ns0:XFkType, service: }), returnedTags: ns0:RProcessNodeService, sequence: xsd:unsignedLong) -> return: {processNodeService: ns0:RProcessNodeService}, sequence: xsd:unsignedLong
            getRecordingProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRecordingProfile, sequence: xsd:unsignedLong) -> return: {recordingProfile: ns0:RRecordingProfile}, sequence: xsd:unsignedLong
            getRegion(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRegion, sequence: xsd:unsignedLong) -> return: {region: ns0:RRegion}, sequence: xsd:unsignedLong
            getRemoteCluster(({clusterId: ns0:String255} | {uuid: ns0:XUUID}), returnedTags: ns0:RRemoteCluster, sequence: xsd:unsignedLong) -> return: {remoteCluster: ns0:RRemoteCluster}, sequence: xsd:unsignedLong
            getRemoteDestination(({destination: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RRemoteDestination, sequence: xsd:unsignedLong) -> return: {remoteDestination: ns0:RRemoteDestination}, sequence: xsd:unsignedLong
            getRemoteDestinationProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRemoteDestinationProfile, sequence: xsd:unsignedLong) -> return: {remoteDestinationProfile: ns0:RRemoteDestinationProfile}, sequence: xsd:unsignedLong
            getResourcePriorityNamespace(({namespace: ns0:String10} | {uuid: ns0:XUUID}), returnedTags: ns0:RResourcePriorityNamespace, sequence: xsd:unsignedLong) -> return: {resourcePriorityNamespace: ns0:RResourcePriorityNamespace}, sequence: xsd:unsignedLong
            getResourcePriorityNamespaceList(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RResourcePriorityNamespaceList, sequence: xsd:unsignedLong) -> return: {resourcePriorityNamespaceList: ns0:RResourcePriorityNamespaceList}, sequence: xsd:unsignedLong
            getRouteFilter(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRouteFilter, sequence: xsd:unsignedLong) -> return: {routeFilter: ns0:RRouteFilter}, sequence: xsd:unsignedLong
            getRouteGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRouteGroup, sequence: xsd:unsignedLong) -> return: {routeGroup: ns0:RRouteGroup}, sequence: xsd:unsignedLong
            getRouteList(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRouteList, sequence: xsd:unsignedLong) -> return: {routeList: ns0:RRouteList}, sequence: xsd:unsignedLong
            getRoutePartition(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RRoutePartition, sequence: xsd:unsignedLong) -> return: {routePartition: ns0:RRoutePartition}, sequence: xsd:unsignedLong
            getRoutePattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), returnedTags: ns0:RRoutePattern, sequence: xsd:unsignedLong) -> return: {routePattern: ns0:RRoutePattern}, sequence: xsd:unsignedLong
            getSIPNormalizationScript(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSIPNormalizationScript, sequence: xsd:unsignedLong) -> return: {sIPNormalizationScript: ns0:RSIPNormalizationScript}, sequence: xsd:unsignedLong
            getSNMPCommunityString(communityName: ns0:String32, sequence: xsd:unsignedLong) -> return: {SNMPCommunityString: ns0:RSNMPCommunityString}, sequence: xsd:unsignedLong
            getSNMPMIB2List(sysContact: ns0:String32, sequence: xsd:unsignedLong) -> return: {SNMPMIB2List: ns0:RSNMPMIB2List}, sequence: xsd:unsignedLong
            getSNMPUser(userName: ns0:String32, sequence: xsd:unsignedLong) -> return: {SNMPUser: ns0:RSNMPGetUser}, sequence: xsd:unsignedLong
            getSafCcdPurgeBlockLearnedRoutes(({uuid: ns0:XUUID} | {learnedPattern: ns0:String50, learnedPatternPrefix: ns0:String50, callControlIdentity: ns0:String50, ipAddress: ns0:String50}), returnedTags: ns0:RSafCcdPurgeBlockLearnedRoutes, sequence: xsd:unsignedLong) -> return: {safCcdPurgeBlockLearnedRoutes: ns0:RSafCcdPurgeBlockLearnedRoutes}, sequence: xsd:unsignedLong
            getSafForwarder(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSafForwarder, sequence: xsd:unsignedLong) -> return: {safForwarder: ns0:RSafForwarder}, sequence: xsd:unsignedLong
            getSafSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSafSecurityProfile, sequence: xsd:unsignedLong) -> return: {safSecurityProfile: ns0:RSafSecurityProfile}, sequence: xsd:unsignedLong
            getServiceParameter(({uuid: ns0:XUUID} | {processNodeName: ns0:XFkType, name: xsd:string, service: }), returnedTags: ns0:RServiceParameter, sequence: xsd:unsignedLong) -> return: {serviceParameter: ns0:RServiceParameter}, sequence: xsd:unsignedLong
            getServiceProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RServiceProfile, sequence: xsd:unsignedLong) -> return: {serviceProfile: ns0:RServiceProfile}, sequence: xsd:unsignedLong
            getSipDialRules(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSipDialRules, sequence: xsd:unsignedLong) -> return: {sipDialRules: ns0:RSipDialRules}, sequence: xsd:unsignedLong
            getSipProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSipProfile, sequence: xsd:unsignedLong) -> return: {sipProfile: ns0:RSipProfile}, sequence: xsd:unsignedLong
            getSipRealm(({realm: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RSipRealm, sequence: xsd:unsignedLong) -> return: {sipRealm: ns0:RSipRealm}, sequence: xsd:unsignedLong
            getSipRoutePattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), returnedTags: ns0:RSipRoutePattern, sequence: xsd:unsignedLong) -> return: {sipRoutePattern: ns0:RSipRoutePattern}, sequence: xsd:unsignedLong
            getSipTrunk(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSipTrunk, sequence: xsd:unsignedLong) -> return: {sipTrunk: ns0:RSipTrunk}, sequence: xsd:unsignedLong
            getSipTrunkSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSipTrunkSecurityProfile, sequence: xsd:unsignedLong) -> return: {sipTrunkSecurityProfile: ns0:RSipTrunkSecurityProfile}, sequence: xsd:unsignedLong
            getSoftKeySet(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSoftKeySet, sequence: xsd:unsignedLong) -> return: {softKeySet: ns0:RSoftKeySet}, sequence: xsd:unsignedLong
            getSoftKeyTemplate(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSoftKeyTemplate, sequence: xsd:unsignedLong) -> return: {softKeyTemplate: ns0:RSoftKeyTemplate}, sequence: xsd:unsignedLong
            getSrst(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RSrst, sequence: xsd:unsignedLong) -> return: {srst: ns0:RSrst}, sequence: xsd:unsignedLong
            getSyslogConfiguration(serverName: xsd:string, serviceGroup: , service: xsd:string, returnedTags: ns0:RSyslogConfiguration, sequence: xsd:unsignedLong) -> return: {syslogConfiguration: ns0:RSyslogConfiguration}, sequence: xsd:unsignedLong
            getTimePeriod(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RTimePeriod, sequence: xsd:unsignedLong) -> return: {timePeriod: ns0:RTimePeriod}, sequence: xsd:unsignedLong
            getTimeSchedule(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RTimeSchedule, sequence: xsd:unsignedLong) -> return: {timeSchedule: ns0:RTimeSchedule}, sequence: xsd:unsignedLong
            getTodAccess(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RTodAccess, sequence: xsd:unsignedLong) -> return: {todAccess: ns0:RTodAccess}, sequence: xsd:unsignedLong
            getTransPattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), returnedTags: ns0:RTransPattern, sequence: xsd:unsignedLong) -> return: {transPattern: ns0:RTransPattern}, sequence: xsd:unsignedLong
            getTranscoder(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RTranscoder, sequence: xsd:unsignedLong) -> return: {transcoder: ns0:RTranscoder}, sequence: xsd:unsignedLong
            getTransformationProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RTransformationProfile, sequence: xsd:unsignedLong) -> return: {transformationProfile: ns0:RTransformationProfile}, sequence: xsd:unsignedLong
            getTvsCertificate(({uuid: ns0:XUUID} | {issuerName: xsd:string, serialNumber: xsd:string}), returnedTags: ns0:RTvsCertificate, sequence: xsd:unsignedLong) -> return: {tvsCertificate: ns0:RTvsCertificate}, sequence: xsd:unsignedLong
            getUcService(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RUcService, sequence: xsd:unsignedLong) -> return: {ucService: ns0:RUcService}, sequence: xsd:unsignedLong
            getUser(({userid: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RUser, sequence: xsd:unsignedLong) -> return: {user: ns0:RUser}, sequence: xsd:unsignedLong
            getUserGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RUserGroup, sequence: xsd:unsignedLong) -> return: {userGroup: ns0:RUserGroup}, sequence: xsd:unsignedLong
            getVg224(({domainName: xsd:string} | {uuid: ns0:XUUID}), returnedTags: ns0:RVg224, sequence: xsd:unsignedLong) -> return: {vg224: ns0:RVg224}, sequence: xsd:unsignedLong
            getVoiceMailPilot(({uuid: ns0:XUUID} | {dirn: ns0:String255, cssName: ns0:XFkType}), returnedTags: ns0:RVoiceMailPilot, sequence: xsd:unsignedLong) -> return: {voiceMailPilot: ns0:RVoiceMailPilot}, sequence: xsd:unsignedLong
            getVoiceMailPort(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RVoiceMailPort, sequence: xsd:unsignedLong) -> return: {voiceMailPort: ns0:RVoiceMailPort}, sequence: xsd:unsignedLong
            getVoiceMailProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RVoiceMailProfile, sequence: xsd:unsignedLong) -> return: {voiceMailProfile: ns0:RVoiceMailProfile}, sequence: xsd:unsignedLong
            getVpnGateway(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RVpnGateway, sequence: xsd:unsignedLong) -> return: {vpnGateway: ns0:RVpnGateway}, sequence: xsd:unsignedLong
            getVpnGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RVpnGroup, sequence: xsd:unsignedLong) -> return: {vpnGroup: ns0:RVpnGroup}, sequence: xsd:unsignedLong
            getVpnProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), returnedTags: ns0:RVpnProfile, sequence: xsd:unsignedLong) -> return: {vpnProfile: ns0:RVpnProfile}, sequence: xsd:unsignedLong
            listAarGroup(searchCriteria: {name: xsd:string}, returnedTags: ns0:LAarGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {aarGroup: ns0:LAarGroup[]}, sequence: xsd:unsignedLong
            listAnnouncement(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LAnnouncement, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {announcement: ns0:LAnnouncement[]}, sequence: xsd:unsignedLong
            listAnnunciator(searchCriteria: {name: xsd:string, description: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LAnnunciator, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {annunciator: ns0:LAnnunciator[]}, sequence: xsd:unsignedLong
            listAppUser(searchCriteria: {userid: xsd:string}, returnedTags: ns0:LAppUser, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {appUser: ns0:LAppUser[]}, sequence: xsd:unsignedLong
            listApplicationDialRules(searchCriteria: {name: xsd:string, description: xsd:string, numberBeginWith: xsd:string}, returnedTags: ns0:LApplicationDialRules, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {applicationDialRules: ns0:LApplicationDialRules[]}, sequence: xsd:unsignedLong
            listApplicationServer(searchCriteria: {name: xsd:string, ipAddress: xsd:string}, returnedTags: ns0:LApplicationServer, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {applicationServer: ns0:LApplicationServer[]}, sequence: xsd:unsignedLong
            listApplicationUserCapfProfile(searchCriteria: {applicationUser: xsd:string, instanceId: xsd:string}, returnedTags: ns0:LApplicationUserCapfProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {applicationUserCapfProfile: ns0:LApplicationUserCapfProfile[]}, sequence: xsd:unsignedLong
            listAudioCodecPreferenceList(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LAudioCodecPreferenceList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {audioCodecPreferenceList: ns0:LAudioCodecPreferenceList[]}, sequence: xsd:unsignedLong
            listBillingServer(searchCriteria: {hostName: xsd:string}, returnedTags: ns0:LBillingServer, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {billingServer: ns0:LBillingServer[]}, sequence: xsd:unsignedLong
            listCallManager(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LCallManager, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {callManager: ns0:LCallManager[]}, sequence: xsd:unsignedLong
            listCallManagerGroup(searchCriteria: {name: xsd:string}, returnedTags: ns0:LCallManagerGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {callManagerGroup: ns0:LCallManagerGroup[]}, sequence: xsd:unsignedLong
            listCallPark(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string, callManagerName: xsd:string}, returnedTags: ns0:LCallPark, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {callPark: ns0:LCallPark[]}, sequence: xsd:unsignedLong
            listCallPickupGroup(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LCallPickupGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {callPickupGroup: ns0:LCallPickupGroup[]}, sequence: xsd:unsignedLong
            listCalledPartyTracing(searchCriteria: {directorynumber: xsd:string}, returnedTags: ns0:LCalledPartyTracing, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {calledPartyTracing: ns0:LCalledPartyTracing[]}, sequence: xsd:unsignedLong
            listCalledPartyTransformationPattern(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string, dialPlanName: xsd:string, routeFilterName: xsd:string}, returnedTags: ns0:LCalledPartyTransformationPattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {calledPartyTransformationPattern: ns0:LCalledPartyTransformationPattern[]}, sequence: xsd:unsignedLong
            listCallerFilterList(searchCriteria: {name: xsd:string}, returnedTags: ns0:LCallerFilterList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {callerFilterList: ns0:LCallerFilterList[]}, sequence: xsd:unsignedLong
            listCallingPartyTransformationPattern(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string, dialPlanName: xsd:string, routeFilterName: xsd:string}, returnedTags: ns0:LCallingPartyTransformationPattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {callingPartyTransformationPattern: ns0:LCallingPartyTransformationPattern[]}, sequence: xsd:unsignedLong
            listCcdAdvertisingService(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LCcdAdvertisingService, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ccdAdvertisingService: ns0:LCcdAdvertisingService[]}, sequence: xsd:unsignedLong
            listCcdHostedDN(searchCriteria: {hostedPattern: xsd:string, description: xsd:string}, returnedTags: ns0:LCcdHostedDN, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ccdHostedDN: ns0:LCcdHostedDN[]}, sequence: xsd:unsignedLong
            listCcdHostedDNGroup(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LCcdHostedDNGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ccdHostedDNGroup: ns0:LCcdHostedDNGroup[]}, sequence: xsd:unsignedLong
            listCiscoCatalyst600024PortFXSGateway(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LCiscoCatalyst600024PortFXSGateway, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ciscoCatalyst600024PortFXSGateway: ns0:LCiscoCatalyst600024PortFXSGateway[]}, sequence: xsd:unsignedLong
            listCiscoCatalyst6000E1VoIPGateway(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LCiscoCatalyst6000E1VoIPGateway, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ciscoCatalyst6000E1VoIPGateway: ns0:LCiscoCatalyst6000E1VoIPGateway[]}, sequence: xsd:unsignedLong
            listCiscoCatalyst6000T1VoIPGatewayPri(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LCiscoCatalyst6000T1VoIPGatewayPri, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ciscoCatalyst6000T1VoIPGatewayPri: ns0:LCiscoCatalyst6000T1VoIPGatewayPri[]}, sequence: xsd:unsignedLong
            listCiscoCatalyst6000T1VoIPGatewayT1(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LCiscoCatalyst6000T1VoIPGatewayT1, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ciscoCatalyst6000T1VoIPGatewayT1: ns0:LCiscoCatalyst6000T1VoIPGatewayT1[]}, sequence: xsd:unsignedLong
            listCmcInfo(searchCriteria: {code: xsd:string}, returnedTags: ns0:LCmcInfo, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {cmcInfo: ns0:LCmcInfo[]}, sequence: xsd:unsignedLong
            listCommonDeviceConfig(searchCriteria: {name: xsd:string}, returnedTags: ns0:LCommonDeviceConfig, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {commonDeviceConfig: ns0:LCommonDeviceConfig[]}, sequence: xsd:unsignedLong
            listCommonPhoneConfig(searchCriteria: {name: xsd:string}, returnedTags: ns0:LCommonPhoneConfig, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {commonPhoneConfig: ns0:LCommonPhoneConfig[]}, sequence: xsd:unsignedLong
            listConferenceBridge(searchCriteria: {name: xsd:string, description: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LConferenceBridge, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {conferenceBridge: ns0:LConferenceBridge[]}, sequence: xsd:unsignedLong
            listCredentialPolicy(searchCriteria: {name: xsd:string}, returnedTags: ns0:LCredentialPolicy, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {credentialPolicy: ns0:LCredentialPolicy[]}, sequence: xsd:unsignedLong
            listCss(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LCss, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {css: ns0:LCss[]}, sequence: xsd:unsignedLong
            listCtiRoutePoint(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LCtiRoutePoint, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ctiRoutePoint: ns0:LCtiRoutePoint[]}, sequence: xsd:unsignedLong
            listCumaServerSecurityProfile(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LCumaServerSecurityProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {cumaServerSecurityProfile: ns0:LCumaServerSecurityProfile[]}, sequence: xsd:unsignedLong
            listCustomUserField(searchCriteria: {field: xsd:string}, returnedTags: ns0:LCustomUserField, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {customUserField: ns0:LCustomUserField[]}, sequence: xsd:unsignedLong
            listDateTimeGroup(searchCriteria: {name: xsd:string, timeZone: xsd:string}, returnedTags: ns0:LDateTimeGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {dateTimeGroup: ns0:LDateTimeGroup[]}, sequence: xsd:unsignedLong
            listDdi(searchCriteria: {name: xsd:string}, returnedTags: ns0:LDdi, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ddi: ns0:LDdi[]}, sequence: xsd:unsignedLong
            listDefaultDeviceProfile(searchCriteria: {name: xsd:string}, returnedTags: ns0:LDefaultDeviceProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {defaultDeviceProfile: ns0:LDefaultDeviceProfile[]}, sequence: xsd:unsignedLong
            listDeviceMobility(searchCriteria: {name: xsd:string, subNet: xsd:string, subNetMaskSz: xsd:string}, returnedTags: ns0:LDeviceMobility, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {deviceMobility: ns0:LDeviceMobility[]}, sequence: xsd:unsignedLong
            listDeviceMobilityGroup(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LDeviceMobilityGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {deviceMobilityGroup: ns0:LDeviceMobilityGroup[]}, sequence: xsd:unsignedLong
            listDevicePool(searchCriteria: {name: xsd:string, callManagerGroupName: xsd:string, regionName: xsd:string}, returnedTags: ns0:LDevicePool, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {devicePool: ns0:LDevicePool[]}, sequence: xsd:unsignedLong
            listDeviceProfile(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LDeviceProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {deviceProfile: ns0:LDeviceProfile[]}, sequence: xsd:unsignedLong
            listDhcpServer(searchCriteria: {processNodeName: xsd:string, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, domainName: xsd:string}, returnedTags: ns0:LDhcpServer, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {dhcpServer: ns0:LDhcpServer[]}, sequence: xsd:unsignedLong
            listDhcpSubnet(searchCriteria: {dhcpServerName: xsd:string, subnetIpAddress: xsd:string, primaryStartIpAddress: xsd:string, primaryEndIpAddress: xsd:string, secondaryStartIpAddress: xsd:string, secondaryEndIpAddress: xsd:string}, returnedTags: ns0:LDhcpSubnet, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {dhcpSubnet: ns0:LDhcpSubnet[]}, sequence: xsd:unsignedLong
            listDialPlan(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LDialPlan, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {dialPlan: ns0:LDialPlan[]}, sequence: xsd:unsignedLong
            listDialPlanTag(searchCriteria: {name: xsd:string}, returnedTags: ns0:LDialPlanTag, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {dialPlanTag: ns0:LDialPlanTag[]}, sequence: xsd:unsignedLong
            listDirectedCallPark(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string, reversionPattern: xsd:string}, returnedTags: ns0:LDirectedCallPark, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {directedCallPark: ns0:LDirectedCallPark[]}, sequence: xsd:unsignedLong
            listDirectoryLookupDialRules(searchCriteria: {name: xsd:string, description: xsd:string, numberBeginWith: xsd:string}, returnedTags: ns0:LDirectoryLookupDialRules, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {directoryLookupDialRules: ns0:LDirectoryLookupDialRules[]}, sequence: xsd:unsignedLong
            listEndUserCapfProfile(searchCriteria: {endUserId: xsd:string, instanceId: xsd:string}, returnedTags: ns0:LEndUserCapfProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {endUserCapfProfile: ns0:LEndUserCapfProfile[]}, sequence: xsd:unsignedLong
            listEnterpriseFeatureAccessConfiguration(searchCriteria: {pattern: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LEnterpriseFeatureAccessConfiguration, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {enterpriseFeatureAccessConfiguration: ns0:LEnterpriseFeatureAccessConfiguration[]}, sequence: xsd:unsignedLong
            listExternalCallControlProfile(searchCriteria: {name: xsd:string}, returnedTags: ns0:LExternalCallControlProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {externalCallControlProfile: ns0:LExternalCallControlProfile[]}, sequence: xsd:unsignedLong
            listFacInfo(searchCriteria: {name: xsd:string, code: xsd:string, authorizationLevel: xsd:string}, returnedTags: ns0:LFacInfo, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {facInfo: ns0:LFacInfo[]}, sequence: xsd:unsignedLong
            listFallbackProfile(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LFallbackProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {fallbackProfile: ns0:LFallbackProfile[]}, sequence: xsd:unsignedLong
            listFeatureControlPolicy(searchCriteria: {name: xsd:string}, returnedTags: ns0:LFeatureControlPolicy, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {featureControlPolicy: ns0:LFeatureControlPolicy[]}, sequence: xsd:unsignedLong
            listGatekeeper(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LGatekeeper, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {gatekeeper: ns0:LGatekeeper[]}, sequence: xsd:unsignedLong
            listGateway(searchCriteria: {domainName: xsd:string, description: xsd:string}, returnedTags: ns0:LGateway, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {gateway: ns0:LGateway[]}, sequence: xsd:unsignedLong
            listGeoLocation(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LGeoLocation, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {geoLocation: ns0:LGeoLocation[]}, sequence: xsd:unsignedLong
            listGeoLocationFilter(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LGeoLocationFilter, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {geoLocationFilter: ns0:LGeoLocationFilter[]}, sequence: xsd:unsignedLong
            listGeoLocationPolicy(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LGeoLocationPolicy, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {geoLocationPolicy: ns0:LGeoLocationPolicy[]}, sequence: xsd:unsignedLong
            listH323Gateway(searchCriteria: {name: xsd:string, description: xsd:string, protocol: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LH323Gateway, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {h323Gateway: ns0:LH323Gateway[]}, sequence: xsd:unsignedLong
            listH323Phone(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LH323Phone, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {h323Phone: ns0:LH323Phone[]}, sequence: xsd:unsignedLong
            listH323Trunk(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LH323Trunk, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {h323Trunk: ns0:LH323Trunk[]}, sequence: xsd:unsignedLong
            listHuntList(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LHuntList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {huntList: ns0:LHuntList[]}, sequence: xsd:unsignedLong
            listHuntPilot(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LHuntPilot, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {huntPilot: ns0:LHuntPilot[]}, sequence: xsd:unsignedLong
            listImeClient(searchCriteria: {name: xsd:string, description: xsd:string, domain: xsd:string}, returnedTags: ns0:LImeClient, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {imeClient: ns0:LImeClient[]}, sequence: xsd:unsignedLong
            listImeE164Transformation(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeE164Transformation, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {imeE164Transformation: ns0:LImeE164Transformation[]}, sequence: xsd:unsignedLong
            listImeEnrolledPattern(searchCriteria: {pattern: xsd:string, description: xsd:string, imeEnrolledPatternGroupName: xsd:string}, returnedTags: ns0:LImeEnrolledPattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {imeEnrolledPattern: ns0:LImeEnrolledPattern[]}, sequence: xsd:unsignedLong
            listImeEnrolledPatternGroup(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeEnrolledPatternGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {imeEnrolledPatternGroup: ns0:LImeEnrolledPatternGroup[]}, sequence: xsd:unsignedLong
            listImeExclusionNumber(searchCriteria: {pattern: xsd:string, description: xsd:string, imeExclusionNumberGroupName: xsd:string}, returnedTags: ns0:LImeExclusionNumber, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {imeExclusionNumber: ns0:LImeExclusionNumber[]}, sequence: xsd:unsignedLong
            listImeExclusionNumberGroup(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeExclusionNumberGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {imeExclusionNumberGroup: ns0:LImeExclusionNumberGroup[]}, sequence: xsd:unsignedLong
            listImeFirewall(searchCriteria: {name: xsd:string, description: xsd:string, ipAddress: xsd:string}, returnedTags: ns0:LImeFirewall, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {imeFirewall: ns0:LImeFirewall[]}, sequence: xsd:unsignedLong
            listImeRouteFilterElement(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeRouteFilterElement, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {imeRouteFilterElement: ns0:LImeRouteFilterElement[]}, sequence: xsd:unsignedLong
            listImeRouteFilterGroup(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeRouteFilterGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {imeRouteFilterGroup: ns0:LImeRouteFilterGroup[]}, sequence: xsd:unsignedLong
            listImeServer(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LImeServer, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {imeServer: ns0:LImeServer[]}, sequence: xsd:unsignedLong
            listImportedDirectoryUriCatalogs(searchCriteria: {name: xsd:string, description: xsd:string, routeString: xsd:string}, returnedTags: ns0:LImportedDirectoryUriCatalogs, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {importedDirectoryUriCatalogs: ns0:LImportedDirectoryUriCatalogs[]}, sequence: xsd:unsignedLong
            listIpPhoneServices(searchCriteria: {serviceName: xsd:string, serviceDescription: xsd:string}, returnedTags: ns0:LIpPhoneServices, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ipPhoneServices: ns0:LIpPhoneServices[]}, sequence: xsd:unsignedLong
            listIvrUserLocale(searchCriteria: {userLocale: xsd:string}, returnedTags: ns0:LIvrUserLocale, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ivrUserLocale: ns0:LIvrUserLocale[]}, sequence: xsd:unsignedLong
            listLbmGroup(searchCriteria: {name: xsd:string, Description: xsd:string}, returnedTags: ns0:LLbmGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {lbmGroup: ns0:LLbmGroup[]}, sequence: xsd:unsignedLong
            listLbmHubGroup(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LLbmHubGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {lbmHubGroup: ns0:LLbmHubGroup[]}, sequence: xsd:unsignedLong
            listLdapDirectory(searchCriteria: {name: xsd:string, ldapDn: xsd:string, userSearchBase: xsd:string}, returnedTags: ns0:LLdapDirectory, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ldapDirectory: ns0:LLdapDirectory[]}, sequence: xsd:unsignedLong
            listLdapFilter(searchCriteria: {name: xsd:string, filter: xsd:string}, returnedTags: ns0:LLdapFilter, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ldapFilter: ns0:LLdapFilter[]}, sequence: xsd:unsignedLong
            listLdapSyncCustomField(searchCriteria: {ldapConfigurationName: xsd:string}, returnedTags: ns0:NewLLdapSyncCustomField, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ldapSyncCustomField: ns0:NewLLdapSyncCustomField[]}, sequence: xsd:unsignedLong
            listLicenseCapabilities(searchCriteria: {userid: xsd:string}, returnedTags: ns0:LLicenseCapabilities, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {licenseCapabilities: ns0:LLicenseCapabilities[]}, sequence: xsd:unsignedLong
            listLine(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LLine, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {line: ns0:LLine[]}, sequence: xsd:unsignedLong
            listLineGroup(searchCriteria: {name: xsd:string}, returnedTags: ns0:LLineGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {lineGroup: ns0:LLineGroup[]}, sequence: xsd:unsignedLong
            listLocation(searchCriteria: {name: xsd:string}, returnedTags: ns0:LLocation, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {location: ns0:LLocation[]}, sequence: xsd:unsignedLong
            listMediaResourceGroup(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LMediaResourceGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {mediaResourceGroup: ns0:LMediaResourceGroup[]}, sequence: xsd:unsignedLong
            listMediaResourceList(searchCriteria: {name: xsd:string}, returnedTags: ns0:LMediaResourceList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {mediaResourceList: ns0:LMediaResourceList[]}, sequence: xsd:unsignedLong
            listMeetMe(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LMeetMe, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {meetMe: ns0:LMeetMe[]}, sequence: xsd:unsignedLong
            listMessageWaiting(searchCriteria: {pattern: xsd:string, routePartitionName: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string}, returnedTags: ns0:LMessageWaiting, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {messageWaiting: ns0:LMessageWaiting[]}, sequence: xsd:unsignedLong
            listMlppDomain(searchCriteria: {domainName: xsd:string}, returnedTags: ns0:LMlppDomain, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {mlppDomain: ns0:LMlppDomain[]}, sequence: xsd:unsignedLong
            listMobileSmartClientProfile(searchCriteria: {name: xsd:string}, returnedTags: ns0:LMobileSmartClientProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {mobileSmartClientProfile: ns0:LMobileSmartClientProfile[]}, sequence: xsd:unsignedLong
            listMobilityProfile(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LMobilityProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {mobilityProfile: ns0:LMobilityProfile[]}, sequence: xsd:unsignedLong
            listMohAudioSource(searchCriteria: {sourceId: xsd:string, name: xsd:string}, returnedTags: ns0:LMohAudioSource, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {mohAudioSource: ns0:LMohAudioSource[]}, sequence: xsd:unsignedLong
            listMohServer(searchCriteria: {name: xsd:string, description: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LMohServer, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {mohServer: ns0:LMohServer[]}, sequence: xsd:unsignedLong
            listMtp(searchCriteria: {name: xsd:string, description: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LMtp, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {mtp: ns0:LMtp[]}, sequence: xsd:unsignedLong
            listPhone(searchCriteria: {name: xsd:string, description: xsd:string, protocol: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string, securityProfileName: xsd:string}, returnedTags: ns0:LPhone, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {phone: ns0:LPhone[]}, sequence: xsd:unsignedLong
            listPhoneButtonTemplate(searchCriteria: {name: xsd:string}, returnedTags: ns0:LPhoneButtonTemplate, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {phoneButtonTemplate: ns0:LPhoneButtonTemplate[]}, sequence: xsd:unsignedLong
            listPhoneNtp(searchCriteria: {ipAddress: xsd:string, description: xsd:string}, returnedTags: ns0:LPhoneNtp, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {phoneNtp: ns0:LPhoneNtp[]}, sequence: xsd:unsignedLong
            listPhoneSecurityProfile(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LPhoneSecurityProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {phoneSecurityProfile: ns0:LPhoneSecurityProfile[]}, sequence: xsd:unsignedLong
            listPhysicalLocation(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LPhysicalLocation, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {physicalLocation: ns0:LPhysicalLocation[]}, sequence: xsd:unsignedLong
            listPresenceGroup(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LPresenceGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {presenceGroup: ns0:LPresenceGroup[]}, sequence: xsd:unsignedLong
            listProcessNode(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LProcessNode, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {processNode: ns0:LProcessNode[]}, sequence: xsd:unsignedLong
            listProcessNodeService(searchCriteria: {processNodeName: xsd:string}, returnedTags: ns0:LProcessNodeService, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {processNodeService: ns0:LProcessNodeService[]}, sequence: xsd:unsignedLong
            listRecordingProfile(searchCriteria: {name: xsd:string, recordingCssName: xsd:string, recorderDestination: xsd:string}, returnedTags: ns0:LRecordingProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {recordingProfile: ns0:LRecordingProfile[]}, sequence: xsd:unsignedLong
            listRegion(searchCriteria: {name: xsd:string}, returnedTags: ns0:LRegion, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {region: ns0:LRegion[]}, sequence: xsd:unsignedLong
            listRemoteCluster(searchCriteria: {clusterId: xsd:string, description: xsd:string}, returnedTags: ns0:LRemoteCluster, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {remoteCluster: ns0:LRemoteCluster[]}, sequence: xsd:unsignedLong
            listRemoteDestination(searchCriteria: {name: xsd:string, remoteDestinationProfileName: xsd:string, dualModeDeviceName: xsd:string}, returnedTags: ns0:LRemoteDestination, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {remoteDestination: ns0:LRemoteDestination[]}, sequence: xsd:unsignedLong
            listRemoteDestinationProfile(searchCriteria: {name: xsd:string}, returnedTags: ns0:LRemoteDestinationProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {remoteDestinationProfile: ns0:LRemoteDestinationProfile[]}, sequence: xsd:unsignedLong
            listResourcePriorityNamespace(searchCriteria: {namespace: xsd:string, description: xsd:string}, returnedTags: ns0:LResourcePriorityNamespace, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {resourcePriorityNamespace: ns0:LResourcePriorityNamespace[]}, sequence: xsd:unsignedLong
            listResourcePriorityNamespaceList(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LResourcePriorityNamespaceList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {resourcePriorityNamespaceList: ns0:LResourcePriorityNamespaceList[]}, sequence: xsd:unsignedLong
            listRouteFilter(searchCriteria: {name: xsd:string}, returnedTags: ns0:LRouteFilter, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {routeFilter: ns0:LRouteFilter[]}, sequence: xsd:unsignedLong
            listRouteGroup(searchCriteria: {name: xsd:string}, returnedTags: ns0:LRouteGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {routeGroup: ns0:LRouteGroup[]}, sequence: xsd:unsignedLong
            listRouteList(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LRouteList, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {routeList: ns0:LRouteList[]}, sequence: xsd:unsignedLong
            listRoutePartition(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LRoutePartition, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {routePartition: ns0:LRoutePartition[]}, sequence: xsd:unsignedLong
            listRoutePattern(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LRoutePattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {routePattern: ns0:LRoutePattern[]}, sequence: xsd:unsignedLong
            listRoutePlan(searchCriteria: {dnOrPattern: xsd:string, partition: xsd:string, type: xsd:string}, returnedTags: ns0:LRoutePlan, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {routePlan: ns0:LRoutePlan[]}, sequence: xsd:unsignedLong
            listSIPNormalizationScript(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LSIPNormalizationScript, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {sIPNormalizationScript: ns0:LSIPNormalizationScript[]}, sequence: xsd:unsignedLong
            listSafCcdPurgeBlockLearnedRoutes(searchCriteria: {learnedPattern: xsd:string, learnedPatternPrefix: xsd:string, callControlIdentity: xsd:string, ipAddress: xsd:string}, returnedTags: ns0:LSafCcdPurgeBlockLearnedRoutes, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {safCcdPurgeBlockLearnedRoutes: ns0:LSafCcdPurgeBlockLearnedRoutes[]}, sequence: xsd:unsignedLong
            listSafForwarder(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LSafForwarder, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {safForwarder: ns0:LSafForwarder[]}, sequence: xsd:unsignedLong
            listSafSecurityProfile(searchCriteria: {name: xsd:string, description: xsd:string, userid: xsd:string}, returnedTags: ns0:LSafSecurityProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {safSecurityProfile: ns0:LSafSecurityProfile[]}, sequence: xsd:unsignedLong
            listServiceParameter(searchCriteria: {processNodeName: xsd:string, service: xsd:string}, returnedTags: ns0:LServiceParameter, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {serviceParameter: ns0:LServiceParameter[]}, sequence: xsd:unsignedLong
            listServiceProfile(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LServiceProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {serviceProfile: ns0:LServiceProfile[]}, sequence: xsd:unsignedLong
            listSipDialRules(searchCriteria: {dialPattern: xsd:string, name: xsd:string}, returnedTags: ns0:LSipDialRules, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {sipDialRules: ns0:LSipDialRules[]}, sequence: xsd:unsignedLong
            listSipProfile(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LSipProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {sipProfile: ns0:LSipProfile[]}, sequence: xsd:unsignedLong
            listSipRealm(searchCriteria: {realm: xsd:string, userid: xsd:string}, returnedTags: ns0:LSipRealm, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {sipRealm: ns0:LSipRealm[]}, sequence: xsd:unsignedLong
            listSipRoutePattern(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string, dnOrPatternIpv6: xsd:string}, returnedTags: ns0:LSipRoutePattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {sipRoutePattern: ns0:LSipRoutePattern[]}, sequence: xsd:unsignedLong
            listSipTrunk(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string}, returnedTags: ns0:LSipTrunk, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {sipTrunk: ns0:LSipTrunk[]}, sequence: xsd:unsignedLong
            listSipTrunkSecurityProfile(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LSipTrunkSecurityProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {sipTrunkSecurityProfile: ns0:LSipTrunkSecurityProfile[]}, sequence: xsd:unsignedLong
            listSoftKeyTemplate(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LSoftKeyTemplate, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {softKeyTemplate: ns0:LSoftKeyTemplate[]}, sequence: xsd:unsignedLong
            listSrst(searchCriteria: {name: xsd:string, ipAddress: xsd:string}, returnedTags: ns0:LSrst, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {srst: ns0:LSrst[]}, sequence: xsd:unsignedLong
            listTimePeriod(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LTimePeriod, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {timePeriod: ns0:LTimePeriod[]}, sequence: xsd:unsignedLong
            listTimeSchedule(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LTimeSchedule, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {timeSchedule: ns0:LTimeSchedule[]}, sequence: xsd:unsignedLong
            listTodAccess(searchCriteria: {name: xsd:string, description: xsd:string, ownerIdName: xsd:string}, returnedTags: ns0:LTodAccess, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {todAccess: ns0:LTodAccess[]}, sequence: xsd:unsignedLong
            listTransPattern(searchCriteria: {pattern: xsd:string, description: xsd:string, routePartitionName: xsd:string}, returnedTags: ns0:LTransPattern, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {transPattern: ns0:LTransPattern[]}, sequence: xsd:unsignedLong
            listTranscoder(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LTranscoder, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {transcoder: ns0:LTranscoder[]}, sequence: xsd:unsignedLong
            listTransformationProfile(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LTransformationProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {transformationProfile: ns0:LTransformationProfile[]}, sequence: xsd:unsignedLong
            listTvsCertificate(searchCriteria: {subjectName: xsd:string, issuerName: xsd:string, serialNumber: xsd:string, timeToLive: xsd:string}, returnedTags: ns0:LTvsCertificate, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {tvsCertificate: ns0:LTvsCertificate[]}, sequence: xsd:unsignedLong
            listUcService(searchCriteria: {name: xsd:string}, returnedTags: ns0:LUcService, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {ucService: ns0:LUcService[]}, sequence: xsd:unsignedLong
            listUser(searchCriteria: {firstName: xsd:string, lastName: xsd:string, userid: xsd:string, department: xsd:string}, returnedTags: ns0:LUser, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {user: ns0:LUser[]}, sequence: xsd:unsignedLong
            listUserGroup(searchCriteria: {name: xsd:string}, returnedTags: ns0:LUserGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {userGroup: ns0:LUserGroup[]}, sequence: xsd:unsignedLong
            listVoiceMailPilot(searchCriteria: {dirn: xsd:string, description: xsd:string, cssName: xsd:string}, returnedTags: ns0:LVoiceMailPilot, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {voiceMailPilot: ns0:LVoiceMailPilot[]}, sequence: xsd:unsignedLong
            listVoiceMailPort(searchCriteria: {name: xsd:string, description: xsd:string, callingSearchSpaceName: xsd:string, devicePoolName: xsd:string, securityProfileName: xsd:string, dnPattern: xsd:string}, returnedTags: ns0:LVoiceMailPort, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {voiceMailPort: ns0:LVoiceMailPort[]}, sequence: xsd:unsignedLong
            listVoiceMailProfile(searchCriteria: {name: xsd:string}, returnedTags: ns0:LVoiceMailProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {voiceMailProfile: ns0:LVoiceMailProfile[]}, sequence: xsd:unsignedLong
            listVpnGateway(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LVpnGateway, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {vpnGateway: ns0:LVpnGateway[]}, sequence: xsd:unsignedLong
            listVpnGroup(searchCriteria: {name: xsd:string, description: xsd:string}, returnedTags: ns0:LVpnGroup, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {vpnGroup: ns0:LVpnGroup[]}, sequence: xsd:unsignedLong
            listVpnProfile(searchCriteria: {name: xsd:string}, returnedTags: ns0:LVpnProfile, skip: xsd:unsignedLong, first: xsd:unsignedLong, sequence: xsd:unsignedLong) -> return: {vpnProfile: ns0:LVpnProfile[]}, sequence: xsd:unsignedLong
            removeAarGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeAnnouncement(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeAppServerInfo(uuid: ns0:XUUID, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeAppUser(({userid: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeApplicationDialRules(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeApplicationServer(({uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeApplicationToSoftkeyTemplate(softKeyTemplateName: ns0:XFkType, applicationName: ns0:String100, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeApplicationUserCapfProfile(({instanceId: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeAudioCodecPreferenceList(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeBillingServer(uuid: ns0:XUUID, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCallManagerGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCallPark(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCallPickupGroup(({uuid: ns0:XUUID} | {name: xsd:Name} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCalledPartyTracing(({uuid: ns0:XUUID} | {directorynumber: xsd:string}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCalledPartyTransformationPattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCallerFilterList(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCallingPartyTransformationPattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCcdAdvertisingService(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCcdHostedDN(({hostedPattern: ns0:String50} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCcdHostedDNGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCcdRequestingService(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCiscoCatalyst600024PortFXSGateway(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCiscoCatalyst6000E1VoIPGateway(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCiscoCatalyst6000T1VoIPGatewayPri(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCiscoCatalyst6000T1VoIPGatewayT1(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCmcInfo(({code: ns0:String16} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCommonDeviceConfig(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCommonPhoneConfig(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeConferenceBridge(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCredentialPolicy(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCss(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCtiRoutePoint(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCumaServerSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeCustomUserField(({field: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeDateTimeGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeDefaultDeviceProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeDeviceMobility(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeDeviceMobilityGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeDevicePool(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeDeviceProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeDhcpServer(({processNodeName: ns0:XFkType} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeDhcpSubnet(({uuid: ns0:XUUID} | {dhcpServerName: ns0:XFkType, subnetIpAddress: xsd:string}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeDirectedCallPark(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeDirectoryLookupDialRules(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeEndUserCapfProfile(({instanceId: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeEnterpriseFeatureAccessConfiguration(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeExternalCallControlProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeFacInfo(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeFallbackProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeFeatureControlPolicy(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGatekeeper(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGateway(({domainName: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGatewayEndpointAnalogAccess(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGatewayEndpointDigitalAccessBri(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGatewayEndpointDigitalAccessPri(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGatewayEndpointDigitalAccessT1(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGatewaySccpEndpoints(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGatewaySubunits(({gatewayUuid: ns0:XUUID} | {domainName: xsd:string}), unit: xsd:nonNegativeInteger, subunits: {subunit: {index: }[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGeoLocation(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGeoLocationFilter(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeGeoLocationPolicy(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeH323Gateway(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeH323Phone(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeH323Trunk(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeHandoffConfiguration(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeHuntList(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeHuntPilot(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeClient(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeE164Transformation(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeEnrolledPattern(({pattern: ns0:String16} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeEnrolledPatternGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeExclusionNumber(({pattern: ns0:String16} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeExclusionNumberGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeFirewall(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeLearnedRoutes(({uuid: ns0:XUUID} | {e164Did: ns0:String32})) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeRouteFilterElement(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeRouteFilterGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImeServer(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeImportedDirectoryUriCatalogs(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeIpPhoneServices(({serviceName: ns0:UniqueString128} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeIvrUserLocale(({userLocale: } | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeLbmGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeLbmHubGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeLdapDirectory(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeLdapFilter(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeLdapSyncCustomField(({uuid: ns0:XUUID} | {ldapConfigurationName: xsd:string, customUserField: xsd:string}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeLine(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeLineGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeLocation(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeMediaResourceGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeMediaResourceList(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeMeetMe(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeMessageWaiting(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeMlppDomain(({domainName: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeMobileVoiceAccess(({pattern: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeMobilityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeMohAudioSource(({sourceId: } | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeMtp(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removePhone(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removePhoneButtonTemplate(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removePhoneNtp(({ipAddress: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removePhoneSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removePhysicalLocation(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removePresenceGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeProcessNode(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeRecordingProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeRegion(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeRemoteCluster(({clusterId: ns0:String255} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeRemoteDestination(({destination: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeRemoteDestinationProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeResourcePriorityNamespace(({namespace: ns0:String10} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeResourcePriorityNamespaceList(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeRouteFilter(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeRouteGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeRouteList(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeRoutePartition(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeRoutePattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSIPNormalizationScript(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSNMPCommunityString(CommunityString: xsd:string, sequence: xsd:unsignedLong) -> message: ns0:String32, sequence: xsd:unsignedLong
            removeSNMPUser(User: xsd:string, sequence: xsd:unsignedLong) -> message: ns0:String32, sequence: xsd:unsignedLong
            removeSafCcdPurgeBlockLearnedRoutes(({uuid: ns0:XUUID} | {learnedPattern: ns0:String50, learnedPatternPrefix: ns0:String50, callControlIdentity: ns0:String50, ipAddress: ns0:String50}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSafForwarder(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSafSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeServiceProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSipDialRules(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSipProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSipRealm(({realm: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSipRoutePattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSipTrunk(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSipTrunkSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSoftKeyTemplate(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeSrst(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeTimePeriod(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeTimeSchedule(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeTodAccess(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeTransPattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeTranscoder(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeTransformationProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeUcService(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeUnitsToGateway(({gatewayUuid: ns0:XUUID} | {domainName: xsd:string}), units: {unit: {index: }[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeUser(({userid: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeUserGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeVg224(({domainName: xsd:string} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeVoiceMailPilot(({uuid: ns0:XUUID} | {dirn: ns0:String255, cssName: ns0:XFkType}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeVoiceMailPort(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeVoiceMailProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeVpnGateway(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeVpnGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            removeVpnProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateAarGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String32, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateAarGroupMatrix(({uuid: ns0:XUUID} | {aarGroupFromName: ns0:XFkType, aarGroupToName: ns0:XFkType}), prefixDigit: ns0:String255, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateAnnouncement(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, announcementFile: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateAnnunciator(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, locationName: ns0:XFkType, useTrustedRelayPoint: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateAppServerInfo(({uuid: ns0:XUUID}), appServerName: ns0:XFkType, appServerContent: , content: ns0:XContent, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateAppUser(({uuid: ns0:XUUID} | {userid: xsd:string}), newUserid: xsd:string, password: xsd:string, passwordCredentials: {pwdCredPolicyName: ns0:XFkType, pwdCredUserCantChange: ns0:boolean, pwdCredUserMustChange: ns0:boolean, pwdCredDoesNotExpire: ns0:boolean, pwdCredTimeChanged: xsd:string, pwdCredTimeAdminLockout: xsd:string, pwdCredLockedByAdministrator: ns0:boolean}, digestCredentials: xsd:string, presenceGroupName: ns0:XFkType, acceptPresenceSubscription: ns0:boolean, acceptOutOfDialogRefer: ns0:boolean, acceptUnsolicitedNotification: ns0:boolean, allowReplaceHeader: ns0:boolean, associatedDevices: {device: ns0:String50[]}, associatedGroups: {userGroup: {name: ns0:String100, userRoles: {userRole: ns0:String100[]}}[]}, ctiControlledDeviceProfiles: {deviceProfile: ns0:String50[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateApplicationDialRules(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, numberBeginWith: xsd:string, numberOfDigits: , digitsToBeRemoved: , prefixPattern: xsd:string, priority: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateApplicationServer(({uuid: ns0:XUUID}), newName: xsd:string, ipAddress: xsd:string, ({removeAppUsers: {selectedAppUser: {appUserName: ns0:XFkType, content: ns0:XContent}[]}, addAppUsers: {selectedAppUser: {appUserName: ns0:XFkType, content: ns0:XContent}[]}} | {appUsers: {selectedAppUser: {appUserName: ns0:XFkType, content: ns0:XContent}[]}}), url: xsd:string, endUserUrl: xsd:string, processNodeName: ns0:XFkType, ({removeEndUsers: {selectedEndUser: {endUserName: ns0:XFkType, content: ns0:XContent}[]}, addEndUsers: {selectedEndUser: {endUserName: ns0:XFkType, content: ns0:XContent}[]}} | {endUsers: {selectedEndUser: {endUserName: ns0:XFkType, content: ns0:XContent}[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateApplicationUserCapfProfile(({uuid: ns0:XUUID} | {instanceId: xsd:string}), certificateOperation: , authenticationMode: , authenticationString: xsd:string, keySize: , operationCompletion: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateAudioCodecPreferenceList(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, codecsInList: {codecNames: xsd:string[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateBillingServer(uuid: ns0:XUUID, userId: xsd:string, password: xsd:string, resendOnFailure: ns0:boolean, billingServerProtocol: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCallManager(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String50, autoRegistration: {startDn: ns0:String255, endDn: ns0:String255, nextDn: ns0:String255, routePartitionName: ns0:XFkType, e164Mask: ns0:String50}, ports: {({ethernetPhonePort: }), mgcpPorts: {listen: , keepAlive: }, sipPorts: {sipPhonePort: , sipPhoneSecurePort: }}, lbmGroup: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCallManagerGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, tftpDefault: ns0:boolean, ({removeMembers: {member: ns0:XCallManagerMember[]}, addMembers: {member: ns0:XCallManagerMember[]}} | {members: {member: ns0:XCallManagerMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCallPark(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, callManagerName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCallPickupGroup(({uuid: ns0:XUUID} | {name: xsd:Name} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, newName: xsd:Name, ({removeMembers: {member: ns0:XPickupGroupMember[]}, addMembers: {member: ns0:XPickupGroupMember[]}} | {members: {member: ns0:XPickupGroupMember[]}}), pickupNotification: , pickupNotificationTimer: , callInfoForPickupNotification: {callingPartyInfo: ns0:boolean, calledPartyInfo: ns0:boolean}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCalledPartyTransformationPattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, calledPartyTransformationMask: xsd:string, newDialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, newRouteFilterName: ns0:XFkType, calledPartyPrefixDigits: xsd:string, calledPartyNumberingPlan: , calledPartyNumberType: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCallerFilterList(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String128, ({removeMembers: {member: ns0:XCallerFilterListMember[]}, addMembers: {member: ns0:XCallerFilterListMember[]}} | {members: {member: ns0:XCallerFilterListMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCallingPartyTransformationPattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , newDialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, callingPartyPrefixDigits: ns0:String50, newRouteFilterName: ns0:XFkType, callingLinePresentationBit: , callingPartyNumberingPlan: , callingPartyNumberType: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCcdAdvertisingService(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String50, isActivated: ns0:boolean, hostDnGroup: ns0:XFkType, safSipTrunk: ns0:XFkType, safH323Trunk: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCcdHostedDN(({uuid: ns0:XUUID} | {hostedPattern: ns0:String50}), newHostedPattern: ns0:String50, description: ns0:String255, CcdHostedDnGroup: ns0:XFkType, pstnFailoverStripDigits: , pstnFailoverPrependDigits: ns0:String255, usePstnFailover: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCcdHostedDNGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String255, description: ns0:String255, pstnFailoverStripDigits: , pstnFailoverPrependDigits: ns0:String255, usePstnFailover: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCcdRequestingService(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String50, isActivated: ns0:boolean, routePartitionName: ns0:XFkType, learnedPatternPrefix: ns0:String50, pstnPrefix: ns0:String50, ({removeAssociatedTrunks: {associatedTrunk: ns0:XCcdRequestingServiceMember[]}, addAssociatedTrunks: {associatedTrunk: ns0:XCcdRequestingServiceMember[]}} | {associatedTrunks: {associatedTrunk: ns0:XCcdRequestingServiceMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCiscoCatalyst600024PortFXSGateway(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocale: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, ports: {port: ns0:XAnalogPort[]}, portSelectionOrder: , transmitUtf8: ns0:boolean, geoLocationFilterName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCiscoCatalyst6000E1VoIPGateway(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIe: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIE: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , QSIGVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCiscoCatalyst6000T1VoIPGatewayPri(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, networkLocale: , mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, mlppIndicationStatus: , mlppPreemption: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, redirectInboundNumberIe: ns0:boolean, calledPlan: , calledPri: , callerIdDn: ns0:String255, callingPartySelection: , callingPlan: , callingPri: , chanIe: , clockReference: , dChannelEnable: ns0:boolean, channelSelectionOrder: , displayIE: ns0:boolean, pcmType: , csuParam: , firstDelay: , interfaceIdPresent: ns0:boolean, interfaceId: , intraDelay: , mcdnEnable: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, numDigitsToStrip: , passingPrecedenceLevelThrough: ns0:boolean, prefix: xsd:string, callingLinePresentationBit: , connectedLineIdPresentation: , priProtocol: , securityAccessLevel: , sendCallingNameInFacilityIe: ns0:boolean, sendExLeadingCharInDispIe: ns0:boolean, sendRestart: ns0:boolean, setupNonIsdnPi: ns0:boolean, sigDigits: {, enable: xsd:boolean}, span: , statusPoll: ns0:boolean, smdiBasePort: , packetCaptureMode: , packetCaptureDuration: , transmitUtf8: ns0:boolean, v150: ns0:boolean, asn1RoseOidEncoding: , QSIGVariant: , unattendedPort: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, geoLocationFilterName: ns0:XFkType, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalTransformationCssName: ns0:XFkType, internationalTransformationCssName: ns0:XFkType, unknownTransformationCssName: ns0:XFkType, subscriberTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCiscoCatalyst6000T1VoIPGatewayT1(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, sendGeoLocation: ns0:boolean, ports: {port: ns0:XT1Port[]}, trunkSelectionOrder: , clockReference: , csuParam: , digitSending: , pcmType: , fdlChannel: , yellowAlarm: , zeroSupression: , smdiBasePort: , handleDtmfPrecedenceSignals: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, geoLocationFilterName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCmcInfo(({uuid: ns0:XUUID} | {code: ns0:String16}), newCode: ns0:String16, description: ns0:String50, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCommonDeviceConfig(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString50, softkeyTemplateName: ns0:XFkType, userLocale: , networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , mlppDomainId: ns0:String128, mlppIndicationStatus: , useTrustedRelayPoint: ns0:boolean, preemption: , ipAddressingMode: , ipAddressingModePreferenceControl: , allowAutoConfigurationForPhones: , useImeForOutboundCalls: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCommonPhoneConfig(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString50, description: ns0:String128, unlockPwd: ns0:String50, dndOption: , dndAlertingType: , backgroundImage: ns0:boolean, phonePersonalization: , phoneServiceDisplay: , sshUserId: ns0:String50, sshPwd: ns0:String255, vendorConfig: ns0:XVendorConfig, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , vpnGroupName: ns0:XFkType, vpnProfileName: ns0:XFkType, featureControlPolicy: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateConferenceBridge(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueName128, description: ns0:String128, product: , devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, maximumCapacity: , useTrustedRelayPoint: , securityProfileName: ns0:XFkType, destinationAddress: xsd:string, mcuConferenceBridgeSipPort: , sipProfile: ns0:XFkType, srtpAllowed: ns0:boolean, normalizationScript: ns0:XFkType, enableTrace: ns0:boolean, normalizationScriptInfos: {normalizationScriptInfo: ns0:XNormalizationScriptInfo[]}, userName: xsd:string, password: xsd:string, httpPort: , useHttps: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCredentialPolicy(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String255, failedLogon: , resetFailedLogonAttempts: , lockoutDuration: , credChangeDuration: , credExpiresAfter: , minCredLength: , prevCredStoredNum: , inactiveDaysAllowed: , expiryWarningDays: , trivialCredCheck: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCss(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueName50, description: ns0:String50, ({removeMembers: {member: ns0:XCallingSearchSpaceMember[]}, addMembers: {member: ns0:XCallingSearchSpaceMember[]}} | {members: {member: ns0:XCallingSearchSpaceMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCtiRoutePoint(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, protocol: , protocolSide: , callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , useTrustedRelayPoint: , cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, userLocale: , lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCumaServerSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, securityMode: , transportType: , x509SubjectName: xsd:string, serverIpHostName: ns0:String255, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateCustomUserField(({uuid: ns0:XUUID} | {field: xsd:string}), newField: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateDateTimeGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, timeZone: , separator: xsd:string, dateformat: xsd:string, timeFormat: xsd:string, ({removePhoneNtpReferences: {selectedPhoneNtpReference: ns0:XDateTimeGroupNtpReference[]}, addPhoneNtpReferences: {selectedPhoneNtpReference: ns0:XDateTimeGroupNtpReference[]}} | {phoneNtpReferences: {selectedPhoneNtpReference: ns0:XDateTimeGroupNtpReference[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateDefaultDeviceProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), description: ns0:String255, userHoldMohAudioSourceId: , userLocale: , phoneButtonTemplate: ns0:XFkType, softkeyTemplate: ns0:XFkType, privacy: , singleButtonBarge: , joinAcrossLines: , ignorePi: ns0:boolean, dndStatus: ns0:boolean, dndRingSetting: , dndOption: , mlppDomainId: ns0:String128, mlppIndication: , preemption: , alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , emccCallingSearchSpace: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateDeviceMobility(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, subNet: xsd:string, subNetMaskSz: , ({removeMembers: {member: ns0:XDevicePoolDeviceMobility[]}, addMembers: {member: ns0:XDevicePoolDeviceMobility[]}} | {members: {member: ns0:XDevicePoolDeviceMobility[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateDeviceMobilityGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateDevicePool(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString50, autoSearchSpaceName: ns0:XFkType, dateTimeSettingName: ns0:XFkType, callManagerGroupName: ns0:XFkType, mediaResourceListName: ns0:XFkType, regionName: ns0:XFkType, networkLocale: , srstName: ns0:XFkType, connectionMonitorDuration: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, locationName: ns0:XFkType, mobilityCssName: ns0:XFkType, physicalLocationName: ns0:XFkType, deviceMobilityGroupName: ns0:XFkType, revertPriority: , singleButtonBarge: , joinAcrossLines: , cgpnTransformationCssName: ns0:XFkType, cdpnTransformationCssName: ns0:XFkType, localRouteGroupName: ns0:XFkType, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, callingPartyNationalPrefix: ns0:String16, callingPartyInternationalPrefix: ns0:String16, callingPartyUnknownPrefix: ns0:String16, callingPartySubscriberPrefix: ns0:String16, adjunctCallingSearchSpace: ns0:XFkType, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, imeEnrolledPatternGroupName: ns0:XFkType, cntdPnTransformationCssName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateDeviceProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, userHoldMohAudioSourceId: , vendorConfig: ns0:XVendorConfig, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, phoneTemplateName: ns0:XFkType, speeddials: {speeddial: ns0:XSpeeddial[]}, busyLampFields: {busyLampField: ns0:XBusyLampField[]}, blfDirectedCallParks: {blfDirectedCallPark: ns0:XBLFDirectedCallPark[]}, addOnModules: {addOnModule: ns0:XAddOnModule[]}, userLocale: , singleButtonBarge: , joinAcrossLines: , loginUserId: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, dndOption: , dndRingSetting: , dndStatus: ns0:boolean, emccCallingSearchSpace: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , softkeyTemplateName: ns0:XFkType, callInfoPrivacyStatus: , services: {service: ns0:XSubscribedService[]}, featureControlPolicy: ns0:XFkType, userlocale: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateDhcpServer(({uuid: ns0:XUUID} | {processNodeName: ns0:XFkType}), newProcessNodeName: ns0:XFkType, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, primaryTftpServerIpAddress: xsd:string, secondaryTftpServerIpAddress: xsd:string, bootstrapServerIpAddress: xsd:string, domainName: xsd:string, tftpServerName: xsd:string, arpCacheTimeout: , ipAddressLeaseTime: , renewalTime: , rebindingTime: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateDhcpSubnet(({uuid: ns0:XUUID} | {dhcpServerName: ns0:XFkType, subnetIpAddress: xsd:string}), newDhcpServerName: ns0:XFkType, newSubnetIpAddress: xsd:string, primaryStartIpAddress: xsd:string, primaryEndIpAddress: xsd:string, secondaryStartIpAddress: xsd:string, secondaryEndIpAddress: xsd:string, primaryRouterIpAddress: xsd:string, secondaryRouterIpAddress: xsd:string, subnetMask: xsd:string, domainName: xsd:string, primaryDnsIpAddress: xsd:string, secondaryDnsIpAddress: xsd:string, tftpServerName: xsd:string, primaryTftpServerIpAddress: xsd:string, secondaryTftpServerIpAddress: xsd:string, bootstrapServerIpAddress: xsd:string, arpCacheTimeout: , ipAddressLeaseTime: , renewalTime: , rebindingTime: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateDirectedCallPark(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, retrievalPrefix: xsd:string, reversionPattern: xsd:string, revertCssName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateDirectoryLookupDialRules(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, numberBeginWith: xsd:string, numberOfDigits: , digitsToBeRemoved: , prefixPattern: xsd:string, priority: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateEmccFeatureConfig(({uuid: ns0:XUUID} | {parameterName: ns0:String50}), value: ns0:String255, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateEndUserCapfProfile(({uuid: ns0:XUUID} | {instanceId: xsd:string}), certificationOperation: , authenticationMode: , authenticationString: xsd:string, keySize: , operationCompletion: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateEnterpriseFeatureAccessConfiguration(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), newPattern: ns0:String16, newRoutePartitionName: ns0:XFkType, description: xsd:string, isDefaultEafNumber: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateEnterprisePhoneConfig(vendorConfig: ns0:XVendorConfig) -> return: ns0:return, sequence: xsd:unsignedLong
            updateExternalCallControlProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, primaryUri: ns0:String255, secondaryUri: ns0:String255, enableLoadBalancing: ns0:boolean, routingRequestTimer: , diversionReroutingCssName: ns0:XFkType, callTreatmentOnFailure: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateFacInfo(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, code: ns0:String16, authorizationLevel: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateFallbackFeatureConfig(enableFallbackForImeCalls: ns0:boolean, qosSensistivityLevel: , dtmfCorrelationDigits: , dtmfCollectionTimer: , callAnswerTimer: , clearImeCallDelayTimer: , dtmfInterDigitDelayTimer: , postConnectFallbackDelayTimer: , fallbackSplitDelayTimer: , callCss: ) -> return: ns0:return, sequence: xsd:unsignedLong
            updateFallbackProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, advertisedFallbackDirectoryE164Number: xsd:string, qosSensistivityLevel: , callCss: , callAnswerTimer: , directoryNumberPartition: ns0:XFkType, directoryNumber: ns0:String16, numberOfDigitsForCallerIDPartialMatch: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateFeatureControlPolicy(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String100, features: {feature: ns0:XFeatureControlConfig[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateFixedMohAudioSource(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, multicast: ns0:boolean, enable: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateGatekeeper(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, rrqTimeToLive: , retryTimeout: , enableDevice: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateGateway(({uuid: ns0:XUUID} | {domainName: xsd:string}), newDomainName: xsd:string, description: xsd:string, product: , protocol: , callManagerGroupName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateGatewayEndpointAnalogAccess(({name: ns0:String100} | {uuid: ns0:XUUID}), endpoint: ns0:UGatewayEndpointAnalog, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateGatewayEndpointDigitalAccessBri(({name: ns0:String100} | {uuid: ns0:XUUID}), endpoint: ns0:UGatewayEndpointDigitalBri, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateGatewayEndpointDigitalAccessPri(({name: ns0:String100} | {uuid: ns0:XUUID}), endpoint: ns0:UGatewayEndpointDigitalPri, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateGatewayEndpointDigitalAccessT1(({name: ns0:String100} | {uuid: ns0:XUUID}), endpoint: ns0:UGatewayEndpointDigitalT1, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateGatewaySccpEndpoints(({name: ns0:String100} | {uuid: ns0:XUUID}), endpoint: ns0:XGatewaySccp, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateGeoLocation(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, country: xsd:string, description: ns0:String255, nationalSubDivision: ns0:String100, district: ns0:String255, communityName: ns0:String255, cityDivision: ns0:String255, neighbourhood: ns0:String255, street: ns0:String255, leadingStreetDirection: ns0:String50, trailingStreetSuffix: ns0:String50, streetSuffix: ns0:String255, houseNumber: ns0:String16, houseNumberSuffix: ns0:String100, landmark: ns0:String255, location: ns0:String255, floor: ns0:String16, occupantName: ns0:String255, postalCode: ns0:String100, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateGeoLocationFilter(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String255, useCountry: ns0:boolean, useNationalSubDivision: ns0:boolean, useDistrict: ns0:boolean, useCommunityName: ns0:boolean, useCityDivision: ns0:boolean, useNeighbourhood: ns0:boolean, useStreet: ns0:boolean, useLeadingStreetDirection: ns0:boolean, useTrailingStreetSuffix: ns0:boolean, useStreetSuffix: ns0:boolean, useHouseNumber: ns0:boolean, useHouseNumberSuffix: ns0:boolean, useLandmark: ns0:boolean, useLocation: ns0:boolean, useFloor: ns0:boolean, useOccupantName: ns0:boolean, usePostalCode: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateGeoLocationPolicy(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, country: xsd:string, description: ns0:String255, nationalSubDivision: ns0:String100, district: ns0:String255, communityName: ns0:String255, cityDivision: ns0:String255, neighbourhood: ns0:String255, street: ns0:String255, leadingStreetDirection: ns0:String50, trailingStreetSuffix: ns0:String50, streetSuffix: ns0:String255, houseNumber: ns0:String16, houseNumberSuffix: ns0:String100, landmark: ns0:String255, location: ns0:String255, floor: ns0:String16, occupantName: ns0:String255, postalCode: ns0:String100, ({removeRelatedPolicies: {relatedPolicy: ns0:XPolicyRelationship[]}, addRelatedPolicies: {relatedPolicy: ns0:XPolicyRelationship[]}} | {relatedPolicies: {relatedPolicy: ns0:XPolicyRelationship[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateH323Gateway(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , vendorConfig: ns0:XVendorConfig, pathReplacementSupport: ns0:boolean, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , srtpAllowed: ns0:boolean, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , enableInboundFaststart: ns0:boolean, enableOutboundFaststart: ns0:boolean, codecForOutboundFaststart: , transmitUtf8: ns0:boolean, signalingPort: , allowH235PassThrough: ns0:boolean, sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String50, calledPartyIeNumberType: , callingPartyIeNumberType: , calledNumberingPlan: , callingNumberingPlan: , callingPartyNationalPrefix: ns0:String16, callingPartyInternationalPrefix: ns0:String16, callingPartyUnknownPrefix: ns0:String16, callingPartySubscriberPrefix: ns0:String16, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, displayIeDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, useDevicePoolCalledCssNatl: ns0:boolean, useDevicePoolCalledCssIntl: ns0:boolean, useDevicePoolCalledCssUnkn: ns0:boolean, useDevicePoolCalledCssSubs: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateH323Phone(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, remoteDevice: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , srtpAllowed: ns0:boolean, unattendedPort: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, mtpPreferredCodec: , callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , displayIEDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, presenceGroupName: ns0:XFkType, hlogStatus: ns0:boolean, ownerUserName: ns0:XFkType, signalingPort: , gateKeeperInfo: {gateKeeperName: ns0:XFkType, e164: ns0:String50, technologyPrefix: ns0:String50, zone: ns0:String50}, lines: {({line: ns0:XH323Line[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, ignorePresentationIndicators: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateH323Trunk(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , srtpAllowed: ns0:boolean, unattendedPort: ns0:boolean, waitForFarEndH245TerminalSet: ns0:boolean, mtpRequired: ns0:boolean, callerIdDn: ns0:String50, callingPartySelection: , callingLineIdPresentation: , displayIEDelivery: ns0:boolean, redirectOutboundNumberIe: ns0:boolean, redirectInboundNumberIe: ns0:boolean, enableInboundFaststart: ns0:boolean, enableOutboundFaststart: ns0:boolean, codecForOutboundFaststart: , allowH235PassThrough: ns0:boolean, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , transmitUtf8: ns0:boolean, signalingPort: , nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, sigDigits: {, enable: xsd:boolean}, prefixDn: ns0:String50, calledPartyIeNumberType: , callingPartyIeNumberType: , calledNumberingPlan: , callingNumberingPlan: , pathReplacementSupport: ns0:boolean, ({gateKeeperInfo: {gateKeeper: ns0:XFkType, terminalType: , technologyPrefix: ns0:String50, zone: ns0:String50}} | {remoteServerinfo: {server1: ns0:String255, server2: ns0:String255, server3: ns0:String255}}), ictPassingPrecedenceLevelThroughUuie: ns0:boolean, ictSecurityAccessLevel: , isSafEnabled: ns0:boolean, callingPartyNationalStripDigits: , callingPartyInternationalStripDigits: , callingPartyUnknownStripDigits: , callingPartySubscriberStripDigits: , callingPartyNationalTransformationCssName: ns0:XFkType, callingPartyInternationalTransformationCssName: ns0:XFkType, callingPartyUnknownTransformationCssName: ns0:XFkType, callingPartySubscriberTransformationCssName: ns0:XFkType, calledPartyNationalPrefix: ns0:String16, calledPartyInternationalPrefix: ns0:String16, calledPartyUnknownPrefix: ns0:String16, calledPartySubscriberPrefix: ns0:String16, pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, useDevicePoolCgpnTransformCssNatl: ns0:boolean, useDevicePoolCgpnTransformCssIntl: ns0:boolean, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, useDevicePoolCgpnTransformCssSubs: ns0:boolean, useDevicePoolCalledCssNatl: ns0:boolean, useDevicePoolCalledCssIntl: ns0:boolean, useDevicePoolCalledCssUnkn: ns0:boolean, useDevicePoolCalledCssSubs: ns0:boolean, calledPartyNationalStripDigits: , calledPartyInternationalStripDigits: , calledPartyUnknownStripDigits: , calledPartySubscriberStripDigits: , calledPartyNationalTransformationCssName: ns0:XFkType, calledPartyInternationalTransformationCssName: ns0:XFkType, calledPartyUnknownTransformationCssName: ns0:XFkType, calledPartySubscriberTransformationCssName: ns0:XFkType, runOnEveryNode: ns0:boolean, ({removeDestinations: {destination: ns0:XH323TrunkDestination[]}, addDestinations: {destination: ns0:XH323TrunkDestination[]}} | {destinations: {destination: ns0:XH323TrunkDestination[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateHandoffConfiguration(({uuid: ns0:XUUID} | {pattern: ns0:String16, routePartitionName: ns0:XFkType}), newPattern: ns0:String16, newRoutePartitionName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateHuntList(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:Name, description: xsd:string, callManagerGroupName: ns0:XFkType, routeListEnabled: ns0:boolean, voiceMailUsage: ns0:boolean, ({removeMembers: {member: ns0:XHuntListMember[]}, addMembers: {member: ns0:XHuntListMember[]}} | {members: {member: ns0:XHuntListMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateHuntPilot(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, dialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, routeFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , patternPrecedence: , provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , huntListName: ns0:XFkType, parkMonForwardNoRetrieve: {usePersonalPreferences: ns0:boolean, destination: ns0:String50, callingSearchSpaceName: ns0:XFkType}, alertingName: ns0:String50, asciiAlertingName: ns0:String32, e164Mask: xsd:string, aarNeighborhoodName: ns0:XFkType, forwardHuntNoAnswer: {usePersonalPreferences: ns0:boolean, destination: xsd:string, callingSearchSpaceName: ns0:XFkType}, forwardHuntBusy: {usePersonalPreferences: ns0:boolean, destination: xsd:string, callingSearchSpaceName: ns0:XFkType}, callPickupGroupName: ns0:XFkType, maxHuntduration: , releaseClause: , displayConnectedNumber: ns0:boolean, queueCalls: ns0:XCallsQueue, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateIlsConfig(role: xsd:string, registrationServer: xsd:string, activateIls: ns0:boolean, synchronizeClustersEvery: ns0:String50, activatedServers: xsd:string, deactivatedServers: xsd:string, useTls: ns0:boolean, usePassword: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeClient(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, domain: ns0:String255, isActivated: ns0:boolean, sipTrunkName: ns0:XFkType, primaryImeServerName: ns0:XFkType, secondaryImeServerName: ns0:XFkType, learnedRouteFilterGroupName: ns0:XFkType, exclusionNumberGroupName: ns0:XFkType, firewallName: ns0:XFkType, ({removeMembers: {member: ns0:XImeClientMember[]}, addMembers: {member: ns0:XImeClientMember[]}} | {members: {member: ns0:XImeClientMember[]}}), ({removeCcmExternalIpMaps: {ccmExternalIpMap: ns0:XCcmExternalIpMap[]}, addCcmExternalIpMaps: {ccmExternalIpMap: ns0:XCcmExternalIpMap[]}} | {ccmExternalIpMaps: {ccmExternalIpMap: ns0:XCcmExternalIpMap[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeE164Transformation(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, cgpnTransformationCssName: ns0:XFkType, isCgpnPreTransformation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, isCdpnPreTransformation: ns0:boolean, incomingCgpnTransformationProfileName: ns0:XFkType, incomingCdpnTransformationProfileName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeEnrolledPattern(({uuid: ns0:XUUID} | {pattern: ns0:String16}), newPattern: ns0:String16, description: xsd:string, imeEnrolledPatternGroupName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeEnrolledPatternGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, fallbackProfileName: ns0:XFkType, isPatternAllAlias: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeExclusionNumber(({uuid: ns0:XUUID} | {pattern: ns0:String16}), newPattern: ns0:String16, description: xsd:string, imeExclusionNumberGroupName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeExclusionNumberGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeFeatureConfig(preventImeCallsFromAnalogGateways: ns0:boolean, enableIntraDomain: ns0:boolean, allowMwiNotification: ns0:boolean, trunkConnectionTimer: , firewallConnectionTimer: , firewallTranscationTimer: , firewallIdleTimer: , failedCallAttemptThreshold: , callFallbackAttemptThreshold: , qualityTimer: , useImeForOutboundCalls: ns0:boolean) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeFirewall(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, ipAddress: ns0:String15, port: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeLearnedRoutes(({uuid: ns0:XUUID} | {e164Did: ns0:String32}), adminEnabled: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeRouteFilterElement(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, elementType: , imeRouteFilterGroupName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeRouteFilterGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, groupTrustSetting: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImeServer(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, ipAddress: xsd:string, port: , deviceSecurityMode: , applicationUser: ns0:XFkType, reconnectInterval: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateImportedDirectoryUriCatalogs(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, routeString: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateInterClusterDirectoryUri(exchangeDirectoryUri: ns0:boolean, routeString: ns0:String50, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateInterClusterServiceProfile(({uuid: ns0:XUUID} | {interClusterService: }), isActivated: ns0:boolean, sipTrunkName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateIpPhoneServices(({uuid: ns0:XUUID} | {serviceName: ns0:UniqueString128}), newServiceName: ns0:UniqueString128, asciiServiceName: ns0:UniqueString128, serviceDescription: ns0:String128, serviceUrl: xsd:string, secureServiceUrl: xsd:string, serviceCategory: , serviceType: , serviceVendor: xsd:string, serviceVersion: xsd:string, enabled: ns0:boolean, ({removeParameters: {parameter: ns0:XIpPhoneServicesParameter[]}, addParameters: {parameter: ns0:XIpPhoneServicesParameter[]}} | {parameters: {parameter: ns0:XIpPhoneServicesParameter[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateIvrUserLocale(({uuid: ns0:XUUID} | {userLocale: }), newUserLocale: , orderIndex: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLbmGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, Description: xsd:string, ProcessnodeActive: ns0:XFkType, ProcessnodeStandby: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLbmHubGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, member1: xsd:string, member2: xsd:string, member3: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLdapAuthentication(authenticateEndUsers: ns0:boolean, distinguishedName: ns0:String128, ldapPassword: ns0:String128, userSearchBase: ns0:String255, servers: {server: {hostName: ns0:String128, ldapPortNumber: , sslEnabled: ns0:boolean}[]}) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLdapDirectory(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, ldapDn: ns0:String128, ldapPassword: ns0:String128, userSearchBase: ns0:String255, repeatable: ns0:boolean, intervalValue: , scheduleUnit: , nextExecTime: ns0:String32, servers: {server: {hostName: ns0:String128, ldapPortNumber: , sslEnabled: ns0:boolean}[]}, ldapFilter: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLdapFilter(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String4096, filter: ns0:String255, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLdapSyncCustomField(({uuid: ns0:XUUID} | {ldapConfigurationName: xsd:string, customUserField: xsd:string}), ldapUserField: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLdapSystem(syncEnabled: ns0:boolean, ldapServer: , userIdAttribute: ns0:String64) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLicenseCapabilities(({uuid: ns0:XUUID} | {userid: xsd:string}), enableUps: ns0:boolean, enableUpc: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLine(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, aarDestinationMask: ns0:String128, aarKeepCallHistory: ns0:boolean, aarVoiceMailEnabled: ns0:boolean, callForwardAll: ns0:XCallForwardAll, callForwardBusy: ns0:XCallForwardBusy, callForwardBusyInt: ns0:XCallForwardBusyInt, callForwardNoAnswer: ns0:XCallForwardNoAnswer, callForwardNoAnswerInt: ns0:XCallForwardNoAnswerInt, callForwardNoCoverage: ns0:XCallForwardNoCoverage, callForwardNoCoverageInt: ns0:XCallForwardNoCoverageInt, callForwardOnFailure: ns0:XCallForwardOnFailure, callForwardAlternateParty: ns0:XCallForwardAlternateParty, callForwardNotRegistered: ns0:XCallForwardNotRegistered, callForwardNotRegisteredInt: ns0:XCallForwardNotRegisteredInt, callPickupGroupName: ns0:XFkType, autoAnswer: , networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , alertingName: ns0:String50, asciiAlertingName: ns0:String32, presenceGroupName: ns0:XFkType, shareLineAppearanceCssName: ns0:XFkType, voiceMailProfileName: ns0:XFkType, patternPrecedence: , releaseClause: , hrDuration: , hrInterval: , cfaCssPolicy: , defaultActivatedDeviceName: ns0:XFkType, parkMonForwardNoRetrieveDn: ns0:String50, parkMonForwardNoRetrieveIntDn: ns0:String50, parkMonForwardNoRetrieveVmEnabled: ns0:boolean, parkMonForwardNoRetrieveIntVmEnabled: ns0:boolean, parkMonForwardNoRetrieveCssName: ns0:XFkType, parkMonForwardNoRetrieveIntCssName: ns0:XFkType, parkMonReversionTimer: , partyEntranceTone: , directoryURIs: {directoryUri: ns0:XDirectoryUri[]}, allowCtiControlFlag: ns0:boolean, rejectAnonymousCall: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLineGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:Name, distributionAlgorithm: , rnaReversionTimeOut: , huntAlgorithmNoAnswer: , huntAlgorithmBusy: , huntAlgorithmNotAvailable: , ({removeMembers: {member: ns0:XLineGroupMember[]}, addMembers: {member: ns0:XLineGroupMember[]}} | {members: {member: ns0:XLineGroupMember[]}}), autoLogOffHunt: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateLocation(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, kbits: , videoKbits: , relatedLocations: {relatedLocation: ns0:XLocationRelationship[]}, withinAudioBandwidth: , withinVideoBandwidth: , withinImmersiveKbits: , betweenLocations: {betweenLocation: ns0:XLocationBetween[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMediaResourceGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String50, multicast: ns0:boolean, ({removeMembers: {member: ns0:XMediaResourceGroupMember[]}, addMembers: {member: ns0:XMediaResourceGroupMember[]}} | {members: {member: ns0:XMediaResourceGroupMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMediaResourceList(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, ({removeMembers: {member: ns0:XMediaResourceListMember[]}, addMembers: {member: ns0:XMediaResourceListMember[]}} | {members: {member: ns0:XMediaResourceListMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMeetMe(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, minimumSecurityLevel: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMessageWaiting(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, newRoutePartitionName: ns0:XFkType, description: ns0:String128, messageWaitingIndicator: ns0:boolean, callingSearchSpaceName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMlppDomain(({uuid: ns0:XUUID} | {domainName: xsd:string}), newDomainName: xsd:string, domainId: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMobileVoiceAccess(({uuid: ns0:XUUID} | {pattern: xsd:string}), newPattern: xsd:string, routePartitionName: ns0:XFkType, ({removeLocales: {locale: ns0:XMobileVoiceMember[]}, addLocales: {locale: ns0:XMobileVoiceMember[]}} | {locales: {locale: ns0:XMobileVoiceMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMobility(handoffNumber: ns0:XFkType, DTMFNumber: ns0:XFkType, newHandoffNumber: xsd:string, newHandoffPartitionName: ns0:XFkType, newDTMFNumber: xsd:string, newDTMFPartitionName: ns0:XFkType) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMobilityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, mobileClientCallingOption: , dvofServiceAccessNumber: xsd:string, dirn: ns0:XDirn, dvorCallerId: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMohAudioSource(({uuid: ns0:XUUID} | {sourceId: }), newName: ns0:String50, sourceFile: ns0:String255, multicast: ns0:boolean, repeat: ns0:boolean, mohFileStatus: , initialAnnouncement: ns0:XFkType, periodicAnnouncement: ns0:XFkType, periodicAnnouncementInterval: , localeAnnouncement: , initialAnnouncementPlayed: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMohServer(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, locationName: ns0:XFkType, maxUnicastConnections: , maxMulticastConnections: , fixedAudioSourceDevice: xsd:string, runFlag: ns0:boolean, useTrustedRelayPoint: , isMultiCastEnabled: ns0:boolean, baseMulticastIpaddress: xsd:string, baseMulticastPort: , multicastIncrementOnIp: ns0:boolean, audioSources: {audioSource: {sourceId: , maxHops: }[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateMtp(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, devicePoolName: ns0:XFkType, trustedRelayPoint: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updatePhone(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, commonPhoneConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, versionStamp: ns0:String128, traceFlag: ns0:boolean, mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, securityProfileName: ns0:XFkType, sipProfileName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, phoneTemplateName: ns0:XFkType, speeddials: {speeddial: ns0:XSpeeddial[]}, busyLampFields: {busyLampField: ns0:XBusyLampField[]}, primaryPhoneName: ns0:XFkType, ringSettingIdleBlfAudibleAlert: , ringSettingBusyBlfAudibleAlert: , blfDirectedCallParks: {blfDirectedCallPark: ns0:XBLFDirectedCallPark[]}, addOnModules: {addOnModule: ns0:XAddOnModule[]}, userLocale: , networkLocale: , idleTimeout: , authenticationUrl: xsd:string, directoryUrl: xsd:string, idleUrl: xsd:string, informationUrl: xsd:string, messagesUrl: xsd:string, proxyServerUrl: xsd:string, servicesUrl: xsd:string, services: {service: ns0:XSubscribedService[]}, softkeyTemplateName: ns0:XFkType, defaultProfileName: ns0:XFkType, enableExtensionMobility: ns0:boolean, singleButtonBarge: , joinAcrossLines: , builtInBridgeStatus: , callInfoPrivacyStatus: , hlogStatus: , ownerUserName: ns0:XFkType, ignorePresentationIndicators: ns0:boolean, packetCaptureMode: , packetCaptureDuration: , subscribeCallingSearchSpaceName: ns0:XFkType, rerouteCallingSearchSpaceName: ns0:XFkType, allowCtiControlFlag: ns0:boolean, presenceGroupName: ns0:XFkType, unattendedPort: ns0:boolean, requireDtmfReception: ns0:boolean, rfc2833Disabled: ns0:boolean, certificateOperation: , authenticationMode: , keySize: , authenticationString: ns0:String128, upgradeFinishTime: xsd:string, deviceMobilityMode: , remoteDevice: ns0:boolean, dndOption: , dndRingSetting: , dndStatus: ns0:boolean, isActive: ns0:boolean, mobilityUserIdName: ns0:XFkType, phoneSuite: , phoneServiceDisplay: , isProtected: ns0:boolean, mobileSmartClientProfileName: ns0:XFkType, mtpRequired: ns0:boolean, mtpPreferedCodec: , dialRulesName: ns0:XFkType, sshUserId: ns0:String50, sshPwd: ns0:String255, digestUser: ns0:String255, outboundCallRollover: , hotlineDevice: ns0:boolean, secureInformationUrl: ns0:String255, secureDirectoryUrl: ns0:String255, secureMessageUrl: ns0:String255, secureServicesUrl: ns0:String255, secureAuthenticationUrl: ns0:String255, secureIdleUrl: ns0:String255, alwaysUsePrimeLine: , alwaysUsePrimeLineForVoiceMessage: , featureControlPolicy: ns0:XFkType, deviceTrustMode: , earlyOfferSupportForVoiceCall: ns0:boolean, requireThirdPartyRegistration: ns0:boolean, blockIncomingCallsWhenRoaming: ns0:boolean, homeNetworkId: xsd:string, AllowPresentationSharingUsingBfcp: ns0:boolean, requireOffPremiseLocation: ns0:boolean, userlocale: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updatePhoneButtonTemplate(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, buttons: {button: ns0:XButton[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updatePhoneNtp(({uuid: ns0:XUUID} | {ipAddress: xsd:string}), newIpAddress: xsd:string, description: xsd:string, mode: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updatePhoneSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, deviceSecurityMode: , authenticationMode: , keySize: , tftpEncryptedConfig: ns0:boolean, nonceValidityTime: , transportType: , sipPhonePort: , enableDigestAuthentication: ns0:boolean, excludeDigestCredentials: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updatePhysicalLocation(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updatePresenceGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, presenceGroups: {presenceGroup: ns0:XPresenceGroupMember[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateProcessNode(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String255, description: ns0:String50, mac: ns0:XMacAddress, ipv6Name: xsd:string, lbmHubGroup: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateProcessNodeService(({uuid: ns0:XUUID} | {processNodeName: ns0:XFkType, service: }), traceLevel: , userCategories: , enable: ns0:boolean, numFiles: , maxFileSize: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRecordingProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, recordingCssName: ns0:XFkType, recorderDestination: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRegion(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, relatedRegions: {relatedRegion: ns0:XRegionRelationship[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRegionMatrix(({uuid: ns0:XUUID} | {regionAName: ns0:XFkType, regionBName: ns0:XFkType}), bandwidth: , videoBandwidth: , lossyNetwork: , codecPreference: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRemoteCluster(({uuid: ns0:XUUID} | {clusterId: ns0:String255}), emcc: ns0:XRemoteClusterMember, pstnAccess: ns0:XRemoteClusterMember, rsvpAgent: ns0:XRemoteClusterMember, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRemoteDestination(({uuid: ns0:XUUID} | {destination: xsd:string}), newName: xsd:string, newDestination: xsd:string, answerTooSoonTimer: , answerTooLateTimer: , delayBeforeRingingCell: , isMobilePhone: ns0:boolean, enableMobileConnect: ns0:boolean, lineAssociations: {lineAssociation: ns0:XLineAssociation[]}, timeZone: , todAccessName: ns0:XFkType, mobileSmartClientName: ns0:XFkType, mobilityProfileName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRemoteDestinationProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , lines: {({line: ns0:XPhoneLine[]} | {lineIdentifier: ns0:XNumplanIdentifier[]})}, callInfoPrivacyStatus: , userId: xsd:string, ignorePresentationIndicators: ns0:boolean, rerouteCallingSearchSpaceName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, userLocale: , primaryPhoneName: ns0:XFkType, dndOption: , dndStatus: ns0:boolean, mobileSmartClientProfileName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateResourcePriorityNamespace(({uuid: ns0:XUUID} | {namespace: ns0:String10}), newNamespace: ns0:String10, description: xsd:string, isDefault: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateResourcePriorityNamespaceList(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, ({removeMembers: {member: ns0:XResourcePriorityNamespaceListMember[]}, addMembers: {member: ns0:XResourcePriorityNamespaceListMember[]}} | {members: {member: ns0:XResourcePriorityNamespaceListMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRouteFilter(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, dialPlanName: ns0:XFkType, ({removeMembers: {member: ns0:XRouteFilterMember[]}, addMembers: {member: ns0:XRouteFilterMember[]}} | {members: {member: ns0:XRouteFilterMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRouteGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:Name, distributionAlgorithm: , ({removeMembers: {member: ns0:XRouteGroupMember[]}, addMembers: {member: ns0:XRouteGroupMember[]}} | {members: {member: ns0:XRouteGroupMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRouteList(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, callManagerGroupName: ns0:XFkType, routeListEnabled: ns0:boolean, ({removeMembers: {member: ns0:XRouteListMember[]}, addMembers: {member: ns0:XRouteListMember[]}} | {members: {member: ns0:XRouteListMember[]}}), runOnEveryNode: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRoutePartition(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, timeScheduleIdName: ns0:XFkType, useOriginatingDeviceTimeZone: ns0:boolean, timeZone: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateRoutePattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, newDialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, networkLocation: , patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, newRouteFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , supportOverlapSending: ns0:boolean, patternPrecedence: , releaseClause: , allowDeviceOverride: ns0:boolean, provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , destination: {({gatewayName: ns0:XFkType} | {routeListName: ns0:XFkType})}, authorizationCodeRequired: ns0:boolean, authorizationLevelRequired: , clientCodeRequired: ns0:boolean, isdnNsfInfoElement: {cic: xsd:string, networkServiceProtocol: , networkService: , paramValue: xsd:string}, resourcePriorityNamespaceName: ns0:XFkType, routeClass: , enableDccEnforcement: ns0:boolean, blockedCallPercentage: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSIPNormalizationScript(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, content: xsd:string, scriptExecutionErrorRecoveryAction: , systemResourceErrorRecoveryAction: , maxMemoryThreshold: xsd:string, maxLuaInstructionsThreshold: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSNMPCommunityString(communityName: xsd:string, newValues: ns0:RSNMPCommunityString1, sequence: xsd:unsignedLong) -> message: ns0:String32, sequence: xsd:unsignedLong
            updateSNMPMIB2List(sysLocation: xsd:string, sysContact: xsd:string, sequence: xsd:unsignedLong) -> message: ns0:String32, sequence: xsd:unsignedLong
            updateSNMPUser(user: ns0:RSNMPUser, sequence: xsd:unsignedLong) -> message: ns0:String32, sequence: xsd:unsignedLong
            updateSafCcdPurgeBlockLearnedRoutes(({uuid: ns0:XUUID} | {learnedPattern: ns0:String50, learnedPatternPrefix: ns0:String50, callControlIdentity: ns0:String50, ipAddress: ns0:String50}), newLearnedPattern: ns0:String50, newLearnedPatternPrefix: ns0:String50, newCallControlIdentity: ns0:String50, newIpAddress: ns0:String50, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSafForwarder(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String255, description: ns0:String255, clientLabel: ns0:String255, safSecurityProfile: ns0:XFkType, ipAddress: ns0:String255, port: , safReconnectInterval: , safNotificationsWindowSize: , ({removeAssociatedCucms: {associatedCucm: ns0:XSafForwarderMember[]}, addAssociatedCucms: {associatedCucm: ns0:XSafForwarderMember[]}} | {associatedCucms: {associatedCucm: ns0:XSafForwarderMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSafSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String255, description: ns0:String255, userid: ns0:String50, password: ns0:String128, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateServiceParameter(({uuid: ns0:XUUID} | {processNodeName: ns0:XFkType, name: xsd:string, service: }), value: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateServiceProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, description: xsd:string, isDefault: ns0:boolean, serviceProfileInfos: {serviceProfileInfo: ns0:XServiceProfileList[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSipDialRules(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, ({removePatterns: {pattern: ns0:XPatternMember[]}, addPatterns: {pattern: ns0:XPatternMember[]}} | {patterns: {pattern: ns0:XPatternMember[]}}), ({removePlars: {plar: ns0:XPatternMember[]}, addPlars: {plar: ns0:XPatternMember[]}} | {plars: {plar: ns0:XPatternMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSipProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String100, defaultTelephonyEventPayloadType: , redirectByApplication: ns0:boolean, ringing180: ns0:boolean, timerInvite: , timerRegisterDelta: , timerRegister: , timerT1: , timerT2: , retryInvite: , retryNotInvite: , startMediaPort: , stopMediaPort: , callpickupUri: ns0:Name128, callpickupListUri: ns0:String128, callpickupGroupUri: ns0:String128, meetmeServiceUrl: ns0:String128, userInfo: , dtmfDbLevel: , callHoldRingback: , anonymousCallBlock: , callerIdBlock: , dndControl: , telnetLevel: , timerKeepAlive: , timerSubscribe: , timerSubscribeDelta: , maxRedirects: , timerOffHookToFirstDigit: , callForwardUri: ns0:String128, abbreviatedDialUri: ns0:String128, confJointEnable: ns0:boolean, rfc2543Hold: ns0:boolean, semiAttendedTransfer: ns0:boolean, enableVad: ns0:boolean, stutterMsgWaiting: ns0:boolean, callStats: ns0:boolean, t38Invite: ns0:boolean, rerouteIncomingRequest: , resourcePriorityNamespaceListName: ns0:XFkType, enableAnatForEarlyOfferCalls: ns0:boolean, rsvpOverSip: , fallbackToLocalRsvp: ns0:boolean, sipRe11XxEnabled: , gClear: , earlyOfferSupportForVoiceCall: ns0:boolean, sendRecvSDPInMidCallInvite: ns0:boolean, enableOutboundOptionsPing: ns0:boolean, optionsPingIntervalWhenStatusOK: , optionsPingIntervalWhenStatusNotOK: , deliverConferenceBridgeIdentifier: ns0:boolean, sipOptionsRetryCount: , sipOptionsRetryTimer: , sipBandwidthModifier: , enableUriOutdialSupport: ns0:boolean, userAgentServerHeaderInfo: , allowPresentationSharingUsingBfcp: ns0:boolean, scriptParameters: xsd:string, isScriptTraceEnabled: ns0:boolean, sipNormalizationScript: ns0:XFkType, allowiXApplicationMedia: ns0:boolean, dialStringInterpretation: , acceptAudioCodecPreferences: , mlppUserAuthorization: ns0:boolean, isAssuredSipServiceEnabled: ns0:boolean, resourcePriorityNamespace: ns0:XFkType, useCallerIdCallerNameinUriOutgoingRequest: ns0:boolean, callerIdDn: ns0:String50, callerName: ns0:String50, callingLineIdentification: , rejectAnonymousIncomingCall: ns0:boolean, rejectAnonymousOutgoingCall: ns0:boolean, videoCallTrafficClass: , inactiveSDPRequired: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSipRealm(({uuid: ns0:XUUID} | {realm: xsd:string}), newRealm: xsd:string, userid: xsd:string, digestCredentials: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSipRoutePattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, blockEnable: ns0:boolean, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , sipTrunkName: ns0:XFkType, dnOrPatternIpv6: xsd:string, routeOnUserPart: ns0:boolean, useCallerCss: ns0:boolean, domainRoutingCssName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSipTrunk(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, networkLocation: , locationName: ns0:XFkType, mediaResourceListName: ns0:XFkType, networkHoldMohAudioSourceId: , userHoldMohAudioSourceId: , automatedAlternateRoutingCssName: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, packetCaptureMode: , packetCaptureDuration: , mlppDomainId: ns0:String128, mlppIndicationStatus: , preemption: , useTrustedRelayPoint: , retryVideoCallAsAudio: ns0:boolean, securityProfileName: ns0:XFkType, sipProfileName: ns0:XFkType, cgpnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCss: ns0:boolean, geoLocationName: ns0:XFkType, geoLocationFilterName: ns0:XFkType, sendGeoLocation: ns0:boolean, cdpnTransformationCssName: ns0:XFkType, useDevicePoolCdpnTransformCss: ns0:boolean, unattendedPort: ns0:boolean, transmitUtf8: ns0:boolean, subscribeCallingSearchSpaceName: ns0:XFkType, rerouteCallingSearchSpaceName: ns0:XFkType, referCallingSearchSpaceName: ns0:XFkType, mtpRequired: ns0:boolean, presenceGroupName: ns0:XFkType, unknownPrefix: ns0:String16, destinationAddress: ns0:String50, destAddrIsSrv: ns0:boolean, destinationport: , tkSipCodec: , sigDigits: {, enable: xsd:boolean}, connectedNamePresentation: , connectedPartyIdPresentation: , callingPartySelection: , callingname: , callingLineIdPresentation: , prefixDn: ns0:String50, callerName: ns0:String50, callerIdDn: ns0:String50, acceptInboundRdnis: ns0:boolean, acceptOutboundRdnis: ns0:boolean, srtpAllowed: ns0:boolean, srtpFallbackAllowed: ns0:boolean, isPaiEnabled: ns0:boolean, sipPrivacy: , isRpidEnabled: ns0:boolean, sipAssertedType: , destinationAddressIpv6: xsd:string, dtmfSignalingMethod: , routeClassSignalling: , sipTrunkType: , pstnAccess: ns0:boolean, imeE164TransformationName: ns0:XFkType, useImePublicIpPort: ns0:boolean, useDevicePoolCntdPnTransformationCss: ns0:boolean, cntdPnTransformationCssName: ns0:XFkType, useDevicePoolCgpnTransformCssUnkn: ns0:boolean, sipNormalizationScriptName: ns0:XFkType, runOnEveryNode: ns0:boolean, ({removeDestinations: {destination: ns0:XSipTrunkDestination[]}, addDestinations: {destination: ns0:XSipTrunkDestination[]}} | {destinations: {destination: ns0:XSipTrunkDestination[]}}), unknownStripDigits: xsd:nonNegativeInteger, cgpnTransformationUnknownCssName: ns0:XFkType, tunneledProtocol: , asn1RoseOidEncoding: , qsigVariant: , pathReplacementSupport: ns0:boolean, enableQsigUtf8: ns0:boolean, scriptParameters: xsd:string, scriptTraceEnabled: ns0:boolean, trunkTrafficSecure: , callingAndCalledPartyInfoFormat: , useCallerIdCallerNameinUriOutgoingRequest: ns0:boolean, requestUriDomainName: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSipTrunkSecurityProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String64, description: ns0:String100, securityMode: , incomingTransport: , outgoingTransport: , digestAuthentication: ns0:boolean, noncePolicyTime: , x509SubjectName: ns0:String4096, incomingPort: , applLevelAuthentication: ns0:boolean, acceptPresenceSubscription: ns0:boolean, acceptOutOfDialogRefer: ns0:boolean, acceptUnsolicitedNotification: ns0:boolean, allowReplaceHeader: ns0:boolean, transmitSecurityStatus: ns0:boolean, sipV150OutboundSdpOfferFiltering: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSoftKeySet(({name: ns0:String100} | {uuid: ns0:XUUID}), ({removeCallStates: {callState: ns0:XCallStateMember[]}, addCallStates: {callState: ns0:XCallStateMember[]}} | {callStates: {callState: ns0:XCallStateMember[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSoftKeyTemplate(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String100, description: ns0:String100, isDefault: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSrst(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: xsd:string, port: , ipAddress: xsd:string, SipNetwork: xsd:string, SipPort: , isSecure: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateSyslogConfiguration(serverName: xsd:string, serviceGroup: , service: xsd:string, alarmConfigs: {AlarmConfig: ns0:XSyslogConfig[]}, EndPointAlarm: ns0:boolean, sequence: xsd:unsignedLong) -> message: ns0:String32, sequence: xsd:unsignedLong
            updateTimePeriod(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, startTime: , endTime: , startDay: , endDay: , monthOfYear: , dayOfMonth: , description: ns0:String255, dayOfMonthEnd: , monthOfYearEnd: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateTimeSchedule(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, ({removeMembers: {member: ns0:XTimeScheduleTimePeriod[]}, addMembers: {member: ns0:XTimeScheduleTimePeriod[]}} | {members: {member: ns0:XTimeScheduleTimePeriod[]}}), description: ns0:String255, timeScheduleCategory: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateTodAccess(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String128, description: ns0:String255, members: {member: ns0:XTODAccessMember}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateTransPattern(({uuid: ns0:XUUID} | {pattern: xsd:string, routePartitionName: ns0:XFkType, dialPlanName: ns0:XFkType, routeFilterName: ns0:XFkType}), newPattern: xsd:string, description: xsd:string, newRoutePartitionName: ns0:XFkType, blockEnable: ns0:boolean, calledPartyTransformationMask: xsd:string, callingPartyTransformationMask: xsd:string, useCallingPartyPhoneMask: , callingPartyPrefixDigits: ns0:String50, newDialPlanName: ns0:XFkType, digitDiscardInstructionName: ns0:XFkType, patternUrgency: ns0:boolean, prefixDigitsOut: xsd:string, newRouteFilterName: ns0:XFkType, callingLinePresentationBit: , callingNamePresentationBit: , connectedLinePresentationBit: , connectedNamePresentationBit: , patternPrecedence: , provideOutsideDialtone: ns0:boolean, callingPartyNumberingPlan: , callingPartyNumberType: , calledPartyNumberingPlan: , calledPartyNumberType: , callingSearchSpaceName: ns0:XFkType, resourcePriorityNamespaceName: ns0:XFkType, routeNextHopByCgpn: ns0:boolean, routeClass: , callInterceptProfileName: ns0:XFkType, releaseClause: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateTranscoder(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString255, description: ns0:String128, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, loadInformation: ns0:XLoadInformation, vendorConfig: ns0:XVendorConfig, isTrustedRelayPoint: ns0:boolean, maximumCapacity: , sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateTransformationProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, nationalStripDigits: , internationalStripDigits: , unknownStripDigits: , subscriberStripDigits: , nationalPrefix: ns0:String16, internationalPrefix: ns0:String16, unknownPrefix: ns0:String16, subscriberPrefix: ns0:String16, nationalCssName: ns0:XFkType, internationalCssName: ns0:XFkType, unknownCssName: ns0:XFkType, subscriberCssName: ns0:XFkType, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateTvsCertificate(({uuid: ns0:XUUID} | {issuerName: xsd:string, serialNumber: xsd:string}), timeToLive: xsd:integer, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateUcService(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, hostnameorip: ns0:String255, port: , protocol: , ucServiceXml: ns0:XVendorConfig, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateUser(({uuid: ns0:XUUID} | {userid: xsd:string}), firstName: xsd:string, middleName: xsd:string, lastName: xsd:string, newUserid: xsd:string, password: xsd:string, pin: xsd:string, telephoneNumber: ns0:String255, mailid: xsd:string, department: xsd:string, manager: xsd:string, userLocale: , associatedDevices: {device: ns0:String50[]}, primaryExtension: {pattern: ns0:String255, routePartitionName: ns0:String50}, associatedPc: xsd:string, associatedGroups: {userGroup: {name: ns0:String100, userRoles: {userRole: ns0:String100[]}}[]}, enableCti: ns0:boolean, digestCredentials: xsd:string, phoneProfiles: {profileName: ns0:XFkType[]}, defaultProfile: ns0:XFkType, presenceGroupName: ns0:XFkType, subscribeCallingSearchSpaceName: ns0:XFkType, enableMobility: ns0:boolean, enableMobileVoiceAccess: ns0:boolean, maxDeskPickupWaitTime: , remoteDestinationLimit: , passwordCredentials: {pwdCredPolicyName: ns0:XFkType, pwdCredUserCantChange: ns0:boolean, pwdCredUserMustChange: ns0:boolean, pwdCredDoesNotExpire: ns0:boolean, pwdCredTimeChanged: xsd:string, pwdCredTimeAdminLockout: xsd:string, pwdCredLockedByAdministrator: ns0:boolean}, pinCredentials: {pinCredPolicyName: ns0:XFkType, pinCredUserCantChange: ns0:boolean, pinCredUserMustChange: ns0:boolean, pinCredDoesNotExpire: ns0:boolean, pinCredTimeChanged: ns0:boolean, pinCredTimeAdminLockout: xsd:string, pinCredLockedByAdministrator: ns0:boolean}, primaryDevice: ns0:XFkType, enableEmcc: ns0:boolean, ctiControlledDeviceProfiles: {profileName: ns0:XFkType[]}, patternPrecedence: , numericUserId: xsd:string, mlppPassword: xsd:string, customUserFields: {({customUserField: ns0:XUserCustomUserField[]})}, homeCluster: ns0:boolean, imAndPresenceEnable: ns0:boolean, serviceProfile: ns0:XFkType, lineAppearanceAssociationForPresences: {lineAppearanceAssociationForPresence: ns0:XLineAppearanceAssociationForPresence[]}, directoryUri: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateUserGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueName128, ({removeMembers: {member: ns0:XUserGroupMember[]}, addMembers: {member: ns0:XUserGroupMember[]}} | {members: {member: ns0:XUserGroupMember[]}}), ({removeUserRoles: {userRole: ns0:XUserGroupRoles[]}, addUserRoles: {userRole: ns0:XUserGroupRoles[]}} | {userRoles: {userRole: ns0:XUserGroupRoles[]}}), sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateVg224(({uuid: ns0:XUUID} | {domainName: xsd:string}), newDomainName: xsd:string, description: xsd:string, callManagerGroupName: ns0:XFkType, vendorConfig: ns0:XVendorConfig, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateVoiceMailPilot(({uuid: ns0:XUUID} | {dirn: ns0:String255, cssName: ns0:XFkType}), newDirn: ns0:String255, description: ns0:String50, newCssName: ns0:XFkType, isDefault: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateVoiceMailPort(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:UniqueString128, description: ns0:String128, callingSearchSpaceName: ns0:XFkType, devicePoolName: ns0:XFkType, commonDeviceConfigName: ns0:XFkType, locationName: ns0:XFkType, useTrustedRelayPoint: , securityProfileName: ns0:XFkType, geoLocationName: ns0:XFkType, automatedAlternateRoutingCssName: ns0:XFkType, dnPattern: xsd:string, routePartition: ns0:XFkType, dnCallingSearchSpace: ns0:XFkType, aarNeighborhoodName: ns0:XFkType, callerIdDisplay: ns0:String128, callerIdDisplayAscii: ns0:String50, externalMask: xsd:string, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateVoiceMailProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: ns0:String50, isDefault: ns0:boolean, voiceMailboxMask: xsd:string, voiceMailPilot: ns0:XVmPilot, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateVpnGateway(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, url: ns0:String255, certificates: {certificate: ns0:XVpnGatewayMember[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateVpnGroup(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, vpnGateways: {vpnGateway: ns0:XVpnGroupMember[]}, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong
            updateVpnProfile(({name: ns0:String100} | {uuid: ns0:XUUID}), newName: ns0:String50, description: xsd:string, autoNetworkDetection: ns0:boolean, mtu: , failToConnect: , clientAuthentication: , pwdPersistant: ns0:boolean, enableHostIdCheck: ns0:boolean, sequence: xsd:unsignedLong) -> return: ns0:return, sequence: xsd:unsignedLong

